{
	"id": "24c0f470fa0d9dcb0d9610f6363ee49a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/kipu-bank-v2.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.26;\r\n\r\n/**\r\n * @title KipuBank V2\r\n * @notice Banco multi-token con límites globales en USD y control de acceso por roles.\r\n */\r\n\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\n\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\n\r\ncontract KipuBankV2 is AccessControl, ReentrancyGuard {\r\n    using SafeERC20 for IERC20;\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                        STATE VARIABLES\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @notice Rol de administrador: puede agregar/quitar tokens y administrar parámetros.\r\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\r\n    \r\n    /// @notice Umbral máximo de retiro por transacción en USD (18 decimales).\r\n    /// @dev Inmutable: se define en el constructor, no puede cambiar.\r\n    uint256 public immutable i_withdrawalThresholdUSD;\r\n    \r\n    /// @notice Tope (cap) global del banco en USD (18 decimales). Suma total de depósitos.\r\n    /// @dev Inmutable: se define en el constructor, no puede cambiar.\r\n    uint256 public immutable i_bankCapUSD;\r\n    \r\n    /// @notice Decimales que usamos para contabilidad estilo USDC (6 decimales).\r\n    /// @dev Normalizamos saldos a 6 decimales para facilidad de sumas por token.\r\n    uint8 private constant USDC_DECIMALS = 6;\r\n    \r\n    /// @notice Decimales estándar para reportar USD (18 decimales), útil para feeds y umbrales.\r\n    uint8 private constant USD_DECIMALS = 18;\r\n    \r\n    /// @notice Identificador del token nativo (ETH). Se usa address(0) por convención.\r\n    address private constant NATIVE_ETH = address(0);\r\n    \r\n    /// @notice Saldos por usuario y por token, normalizados a 6 decimales .\r\n    mapping(address user => mapping(address token => uint256 balance)) private s_deposits;\r\n    \r\n    /// @notice Total depositado por token (también en 6 decimales).\r\n    mapping(address token => uint256 total) private s_totalDeposits;\r\n    \r\n    /// @notice Oráculo Chainlink por token para obtener precio TOKEN/USD.\r\n    mapping(address token => AggregatorV3Interface priceFeed) private s_priceFeeds;\r\n    \r\n    /// @notice Lista de tokens habilitados (incluye NATIVE_ETH).\r\n    address[] private s_supportedTokens;\r\n    \r\n    /// @notice Métricas: número total de depósitos realizados.\r\n    uint256 public s_depositCount;\r\n    \r\n    /// @notice Métricas: número total de retiros realizados.\r\n    uint256 public s_withdrawalCount;\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                                EVENTOS\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @notice Se emite cuando un usuario deposita.\r\n    /// @param user Cuenta que deposita.\r\n    /// @param token Token depositado (address(0) = ETH).\r\n    /// @param amount Monto en decimales nativos del token (wei para ETH).\r\n    /// @param usdValue Valor equivalente en USD (18 decimales).\r\n    event DepositMade(address indexed user, address indexed token, uint256 amount, uint256 usdValue);\r\n    \r\n    /// @notice Se emite cuando un usuario retira.\r\n    /// @param user Cuenta que retira.\r\n    /// @param token Token retirado (address(0) = ETH).\r\n    /// @param amount Monto en decimales nativos del token (wei para ETH).\r\n    /// @param usdValue Valor equivalente en USD (18 decimales).\r\n    event WithdrawalMade(address indexed user, address indexed token, uint256 amount, uint256 usdValue);\r\n    \r\n    /// @notice Se emite al habilitar un token ERC-20.\r\n    event TokenAdded(address indexed token, address indexed priceFeed);\r\n    \r\n    /// @notice Se emite al deshabilitar un token ERC-20.\r\n    event TokenRemoved(address indexed token);\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                          ERRORES PERSONALIZADOS\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @notice Monto igual a cero.\r\n    error KipuBank__ZeroAmount();\r\n    \r\n    /// @notice Se excede el cap global del banco (en USD).\r\n    error KipuBank__BankCapExceeded(uint256 requestedUSD, uint256 availableUSD);\r\n    \r\n    /// @notice Saldo insuficiente para retirar.\r\n    error KipuBank__InsufficientBalance(uint256 requestedAmount, uint256 availableBalance);\r\n    \r\n    /// @notice Se excede el umbral de retiro por transacción (en USD).\r\n    error KipuBank__WithdrawalThresholdExceeded(uint256 requestedUSD, uint256 thresholdUSD);\r\n    \r\n    /// @notice Transferencia fallida (genérico).\r\n    error KipuBank__TransferFailed();\r\n    \r\n    /// @notice Token no soportado (no tiene feed configurado o es inválido).\r\n    error KipuBank__TokenNotSupported(address token);\r\n    \r\n    /// @notice Token ya estaba habilitado.\r\n    error KipuBank__TokenAlreadySupported(address token);\r\n    \r\n    /// @notice El oráculo devolvió precio inválido (<= 0) o datos corruptos.\r\n    error KipuBank__InvalidPriceData();\r\n    \r\n    /// @notice Falló el envío de ETH nativo.\r\n    error KipuBank__ETHTransferFailed();\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                              CONSTRUCTOR\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /**\r\n     * @notice Inicializa el banco con umbral de retiro y cap global en USD.\r\n     * @param _withdrawalThresholdUSD Umbral por retiro en USD (18 decimales).\r\n     * @param _bankCapUSD Cap global de depósitos en USD (18 decimales).\r\n     * @param _ethPriceFeed Dirección del feed Chainlink ETH/USD.\r\n     */\r\n    constructor(\r\n        uint256 _withdrawalThresholdUSD,\r\n        uint256 _bankCapUSD,\r\n        address _ethPriceFeed\r\n    )\r\n    {\r\n        // Validaciones básicas de parámetros ( errores personalizados)\r\n        if (_withdrawalThresholdUSD == 0 || _bankCapUSD == 0) {\r\n            revert KipuBank__ZeroAmount();\r\n        }\r\n\r\n        i_withdrawalThresholdUSD = _withdrawalThresholdUSD;\r\n        i_bankCapUSD = _bankCapUSD;\r\n\r\n        // Roles: el deployer es admin por defecto (AccessControl)\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n        _grantRole(ADMIN_ROLE, msg.sender);\r\n\r\n        // Habilitar ETH como token soportado y setear su oráculo\r\n        s_priceFeeds[NATIVE_ETH] = AggregatorV3Interface(_ethPriceFeed);\r\n        s_supportedTokens.push(NATIVE_ETH);\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                         RECEIVE & FALLBACK (ETH)\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @notice Recibe ETH directamente y lo trata como depósito.\r\n    receive() external payable {\r\n        _deposit(NATIVE_ETH, msg.value);\r\n    }\r\n\r\n    /// @notice Fallback: no aceptamos otras llamadas sin datos; revertimos.\r\n    fallback() external payable {\r\n        revert KipuBank__TransferFailed();\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                          FUNCIONES EXTERNAS\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /**\r\n     * @notice Deposita ETH nativo (address(0)).\r\n     */\r\n    function depositETH() external payable nonReentrant {\r\n        if (msg.value == 0) revert KipuBank__ZeroAmount();\r\n        _deposit(NATIVE_ETH, msg.value);\r\n    }\r\n\r\n    /**\r\n     * @notice Deposita un token ERC-20 habilitado.\r\n     * @param token Dirección del token ERC-20.\r\n     * @param amount Monto a depositar (en decimales nativos del token).\r\n     */\r\n    function depositToken(address token, uint256 amount) external nonReentrant {\r\n        if (amount == 0) revert KipuBank__ZeroAmount();\r\n        if (token == NATIVE_ETH) revert KipuBank__TokenNotSupported(token);\r\n        if (address(s_priceFeeds[token]) == address(0)) {\r\n            revert KipuBank__TokenNotSupported(token);\r\n        }\r\n\r\n        // INTERACCIÓN segura primero (transferencia hacia el contrato),\r\n        // luego delegamos la contabilidad a _deposit (efectos + evento).\r\n        IERC20(token).safeTransferFrom(msg.sender, address(this), amount);\r\n        _deposit(token, amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Retira ETH de tu saldo.\r\n     * @param amount Monto en wei a retirar.\r\n     */\r\n    function withdrawETH(uint256 amount) external nonReentrant {\r\n        if (amount == 0) revert KipuBank__ZeroAmount();\r\n        _withdraw(NATIVE_ETH, amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Retira tokens ERC-20 de tu saldo.\r\n     * @param token Dirección del token.\r\n     * @param amount Monto a retirar (en decimales nativos del token).\r\n     */\r\n    function withdrawToken(address token, uint256 amount) external nonReentrant {\r\n        if (amount == 0) revert KipuBank__ZeroAmount();\r\n        if (token == NATIVE_ETH) revert KipuBank__TokenNotSupported(token);\r\n        _withdraw(token, amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Habilita soporte para un nuevo token ERC-20.\r\n     * @param token Dirección del token.\r\n     * @param priceFeed Dirección del oráculo TOKEN/USD (Chainlink).\r\n     */\r\n    function addTokenSupport(address token, address priceFeed) \r\n        external \r\n        onlyRole(ADMIN_ROLE) \r\n    {\r\n        if (token == NATIVE_ETH) revert KipuBank__TokenNotSupported(token);\r\n        if (address(s_priceFeeds[token]) != address(0)) {\r\n            revert KipuBank__TokenAlreadySupported(token);\r\n        }\r\n\r\n        s_priceFeeds[token] = AggregatorV3Interface(priceFeed);\r\n        s_supportedTokens.push(token);\r\n\r\n        emit TokenAdded(token, priceFeed);\r\n    }\r\n\r\n    /**\r\n     * @notice Deshabilita un token (debe no tener depósitos pendientes).\r\n     * @param token Dirección del token a deshabilitar.\r\n     */\r\n    function removeTokenSupport(address token) external onlyRole(ADMIN_ROLE) {\r\n        if (address(s_priceFeeds[token]) == address(0)) {\r\n            revert KipuBank__TokenNotSupported(token);\r\n        }\r\n        if (s_totalDeposits[token] > 0) {\r\n            revert KipuBank__InsufficientBalance(0, s_totalDeposits[token]);\r\n        }\r\n\r\n        delete s_priceFeeds[token];\r\n\r\n        for (uint256 i = 0; i < s_supportedTokens.length; i++) {\r\n            if (s_supportedTokens[i] == token) {\r\n                s_supportedTokens[i] = s_supportedTokens[s_supportedTokens.length - 1];\r\n                s_supportedTokens.pop();\r\n                break;\r\n            }\r\n        }\r\n\r\n        emit TokenRemoved(token);\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                        FUNCIONES INTERNAS (CEI)\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /**\r\n     * @notice Lógica interna de depósito (ETH o ERC-20).\r\n     * @param token Token a depositar (address(0) = ETH).\r\n     * @param amount Monto en decimales nativos del token.\r\n     * @dev Patrón CEI:\r\n     *      - CHECKS: calcular USD, verificar cap global.\r\n     *      - EFFECTS: actualizar contabilidad normalizada a USDC(6).\r\n     *      - INTERACTIONS: sólo evento (tokens ya fueron transferidos arriba).\r\n     */\r\n    function _deposit(address token, uint256 amount) private {\r\n        // CHECKS\r\n        uint256 usdValue = _getUSDValue(token, amount);        // USD(18)\r\n        uint256 currentTotalUSD = _getTotalDepositsUSD();      // USD(18)\r\n        \r\n        if (currentTotalUSD + usdValue > i_bankCapUSD) {\r\n            revert KipuBank__BankCapExceeded(\r\n                usdValue, \r\n                i_bankCapUSD - currentTotalUSD\r\n            );\r\n        }\r\n\r\n        // EFFECTS (contabilidad en 6 decimales)\r\n        uint256 normalizedAmount = _normalizeToUSDC(token, amount); // a USDC(6)\r\n        s_deposits[msg.sender][token] += normalizedAmount;\r\n        s_totalDeposits[token] += normalizedAmount;\r\n        s_depositCount++;\r\n\r\n        // INTERACTIONS \r\n        emit DepositMade(msg.sender, token, amount, usdValue);\r\n    }\r\n\r\n    /**\r\n     * @notice Lógica interna de retiro (ETH o ERC-20).\r\n     * @param token Token a retirar (address(0) = ETH).\r\n     * @param amount Monto en decimales nativos del token.\r\n     */\r\n    function _withdraw(address token, uint256 amount) private {\r\n        // CHECKS\r\n        uint256 normalizedAmount = _normalizeToUSDC(token, amount);\r\n        uint256 userBalance = s_deposits[msg.sender][token];\r\n        \r\n        if (normalizedAmount > userBalance) {\r\n            revert KipuBank__InsufficientBalance(normalizedAmount, userBalance);\r\n        }\r\n\r\n        uint256 usdValue = _getUSDValue(token, amount); // USD(18)\r\n        if (usdValue > i_withdrawalThresholdUSD) {\r\n            revert KipuBank__WithdrawalThresholdExceeded(\r\n                usdValue,\r\n                i_withdrawalThresholdUSD\r\n            );\r\n        }\r\n\r\n        // EFFECTS\r\n        s_deposits[msg.sender][token] -= normalizedAmount;\r\n        s_totalDeposits[token] -= normalizedAmount;\r\n        s_withdrawalCount++;\r\n\r\n        // INTERACTIONS\r\n        if (token == NATIVE_ETH) {\r\n            (bool success, ) = msg.sender.call{value: amount}(\"\");\r\n            if (!success) revert KipuBank__ETHTransferFailed();\r\n        } else {\r\n            IERC20(token).safeTransfer(msg.sender, amount);\r\n        }\r\n\r\n        emit WithdrawalMade(msg.sender, token, amount, usdValue);\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                          FUNCIONES DE CÁLCULO\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /**\r\n     * @notice Convierte un monto de `token` a USD(18) usando Chainlink.\r\n     * @param token Token cuyo valor queremos evaluar (address(0) = ETH).\r\n     * @param amount Monto en decimales nativos del token.\r\n     * @return USD con 18 decimales.\r\n     */\r\n    function _getUSDValue(address token, uint256 amount) private view returns (uint256) {\r\n        AggregatorV3Interface priceFeed = s_priceFeeds[token];\r\n        \r\n\r\n        (, int256 price, , , ) = priceFeed.latestRoundData();\r\n        if (price <= 0) revert KipuBank__InvalidPriceData();\r\n\r\n        // Decimales del token (18 si es ETH), y del feed \r\n        uint8 tokenDecimals = token == NATIVE_ETH ? 18 : IERC20Metadata(token).decimals();\r\n        uint8 priceFeedDecimals = priceFeed.decimals();\r\n\r\n        // Fórmula: USD(18) = amount * price * 10^18 / (10^tokenDecimals * 10^priceFeedDecimals)\r\n        return (amount * uint256(price) * 10**USD_DECIMALS) / \r\n               (10**tokenDecimals * 10**priceFeedDecimals);\r\n    }\r\n\r\n    /**\r\n     * @notice Normaliza montos del token a 6 decimales (USDC-like) para contabilidad.\r\n     * @param token Token.\r\n     * @param amount Monto en decimales nativos del token.\r\n     * @return Monto normalizado a 6 decimales.\r\n     */\r\n    function _normalizeToUSDC(address token, uint256 amount) private view returns (uint256) {\r\n        uint8 tokenDecimals = token == NATIVE_ETH ? 18 : IERC20Metadata(token).decimals();\r\n        \r\n        if (tokenDecimals > USDC_DECIMALS) {\r\n            return amount / (10**(tokenDecimals - USDC_DECIMALS));\r\n        } else if (tokenDecimals < USDC_DECIMALS) {\r\n            return amount * (10**(USDC_DECIMALS - tokenDecimals));\r\n        }\r\n        return amount;\r\n    }\r\n\r\n    /**\r\n     * @notice Suma el total global en USD(18) recorriendo tokens soportados.\r\n     */\r\n    function _getTotalDepositsUSD() private view returns (uint256) {\r\n        uint256 totalUSD = 0;\r\n        \r\n        for (uint256 i = 0; i < s_supportedTokens.length; i++) {\r\n            address token = s_supportedTokens[i];\r\n            uint256 normalizedAmount = s_totalDeposits[token]; // USDC(6)\r\n            \r\n            if (normalizedAmount > 0) {\r\n                // Convertimos de 6 decimales a nativos del token\r\n                uint256 nativeAmount = _denormalizeFromUSDC(token, normalizedAmount);\r\n                // Y de nativos a USD(18) por oráculo\r\n                totalUSD += _getUSDValue(token, nativeAmount);\r\n            }\r\n        }\r\n        \r\n        return totalUSD;\r\n    }\r\n\r\n    /**\r\n     * @notice Convierte desde 6 decimales (USDC-like) a decimales nativos del token.\r\n     * @param token Token.\r\n     * @param normalizedAmount Monto en 6 decimales.\r\n     * @return Monto en decimales nativos del token.\r\n     */\r\n    function _denormalizeFromUSDC(address token, uint256 normalizedAmount) \r\n        private \r\n        view \r\n        returns (uint256) \r\n    {\r\n        uint8 tokenDecimals = token == NATIVE_ETH ? 18 : IERC20Metadata(token).decimals();\r\n        \r\n        if (tokenDecimals > USDC_DECIMALS) {\r\n            return normalizedAmount * (10**(tokenDecimals - USDC_DECIMALS));\r\n        } else if (tokenDecimals < USDC_DECIMALS) {\r\n            return normalizedAmount / (10**(USDC_DECIMALS - tokenDecimals));\r\n        }\r\n        return normalizedAmount;\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                              FUNCIONES VIEW\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /**\r\n     * @notice Devuelve el saldo del usuario en decimales nativos del token.\r\n     * @param user Dirección del usuario.\r\n     * @param token Token (address(0) = ETH).\r\n     */\r\n    function getBalance(address user, address token) external view returns (uint256) {\r\n        uint256 normalizedBalance = s_deposits[user][token];          // USDC(6)\r\n        return _denormalizeFromUSDC(token, normalizedBalance);        // nativos\r\n    }\r\n\r\n    /**\r\n     * @notice Devuelve el saldo del usuario en USD(18).\r\n     * @param user Dirección del usuario.\r\n     * @param token Token (address(0) = ETH).\r\n     */\r\n    function getBalanceUSD(address user, address token) external view returns (uint256) {\r\n        uint256 normalizedBalance = s_deposits[user][token];          // USDC(6)\r\n        uint256 nativeAmount = _denormalizeFromUSDC(token, normalizedBalance);\r\n        return _getUSDValue(token, nativeAmount);\r\n    }\r\n\r\n    /**\r\n     * @notice Devuelve el total depositado para un token (en decimales nativos).\r\n     * @param token Token.\r\n     */\r\n    function getTotalDeposits(address token) external view returns (uint256) {\r\n        return _denormalizeFromUSDC(token, s_totalDeposits[token]);\r\n    }\r\n\r\n    /**\r\n     * @notice Devuelve el total global de depósitos en USD(18) sumando todos los tokens.\r\n     */\r\n    function getTotalDepositsUSD() external view returns (uint256) {\r\n        return _getTotalDepositsUSD();\r\n    }\r\n\r\n    /**\r\n     * @notice Devuelve la capacidad disponible del banco en USD(18) (cap - total actual).\r\n     */\r\n    function getAvailableBankCapUSD() external view returns (uint256) {\r\n        uint256 currentTotal = _getTotalDepositsUSD();\r\n        return currentTotal >= i_bankCapUSD ? 0 : i_bankCapUSD - currentTotal;\r\n    }\r\n\r\n    /**\r\n     * @notice Lista de tokens soportados actualmente (incluye ETH).\r\n     */\r\n    function getSupportedTokens() external view returns (address[] memory) {\r\n        return s_supportedTokens;\r\n    }\r\n\r\n    /**\r\n     * @notice Indica si un token está soportado (tiene oráculo configurado).\r\n     */\r\n    function isTokenSupported(address token) external view returns (bool) {\r\n        return address(s_priceFeeds[token]) != address(0);\r\n    }\r\n\r\n    /**\r\n     * @notice Devuelve la dirección del oráculo TOKEN/USD para un token.\r\n     */\r\n    function getPriceFeed(address token) external view returns (address) {\r\n        return address(s_priceFeeds[token]);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @notice Interfaz mínima para consultar `decimals()` cuando el token lo expone.\r\n * @dev No forma parte del estándar ERC-20 base; es una extensión muy común (ERC20 Metadata).\r\n */\r\ninterface IERC20Metadata {\r\n    function decimals() external view returns (uint8);\r\n}\r\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 73,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)68_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)68_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)68_storage"
							},
							"t_struct(RoleData)68_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 65,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 67,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b141175418ac5c4b276ec6b41361d0eb5836a7eebc1c6d19f00d8517e1050f6664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b141175418ac5c4b276ec6b41361d0eb5836a7eebc1c6d19f00d8517e1050f6664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 COINBASE OR SLOAD XOR 0xAC TLOAD 0x4B 0x27 PUSH15 0xC6B41361D0EB5836A7EEBC1C6D19F0 0xD DUP6 OR 0xE1 SDIV 0xF PUSH7 0x64736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "698:9376:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b141175418ac5c4b276ec6b41361d0eb5836a7eebc1c6d19f00d8517e1050f6664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 COINBASE OR SLOAD XOR 0xAC TLOAD 0x4B 0x27 PUSH15 0xC6B41361D0EB5836A7EEBC1C6D19F0 0xD DUP6 OR 0xE1 SDIV 0xF PUSH7 0x64736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "698:9376:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b141175418ac5c4b276ec6b41361d0eb5836a7eebc1c6d19f00d8517e1050f6664736f6c634300081a0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/kipu-bank-v2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1098,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/kipu-bank-v2.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "No forma parte del estándar ERC-20 base; es una extensión muy común (ERC20 Metadata).",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"No forma parte del est\\u00e1ndar ERC-20 base; es una extensi\\u00f3n muy com\\u00fan (ERC20 Metadata).\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interfaz m\\u00ednima para consultar `decimals()` cuando el token lo expone.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/kipu-bank-v2.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"src/kipu-bank-v2.sol\":{\"keccak256\":\"0xb4214e609258dd74bf974f1d0970d949f5b5f615fc1fa9b76fbc25df34d7c410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://600bc0d80a4ad7c17080b1f4cdd00d6d81436d11278e64bb9c9a1730eba178d5\",\"dweb:/ipfs/QmVb4atgmsD7BgBAc82kGcoBBsYQqGKGDrVeYu9uD3DACs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Interfaz mínima para consultar `decimals()` cuando el token lo expone.",
						"version": 1
					}
				},
				"KipuBankV2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_withdrawalThresholdUSD",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_bankCapUSD",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_ethPriceFeed",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestedUSD",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "availableUSD",
									"type": "uint256"
								}
							],
							"name": "KipuBank__BankCapExceeded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "KipuBank__ETHTransferFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "availableBalance",
									"type": "uint256"
								}
							],
							"name": "KipuBank__InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "KipuBank__InvalidPriceData",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "KipuBank__TokenAlreadySupported",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "KipuBank__TokenNotSupported",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "KipuBank__TransferFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestedUSD",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "thresholdUSD",
									"type": "uint256"
								}
							],
							"name": "KipuBank__WithdrawalThresholdExceeded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "KipuBank__ZeroAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usdValue",
									"type": "uint256"
								}
							],
							"name": "DepositMade",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "priceFeed",
									"type": "address"
								}
							],
							"name": "TokenAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "TokenRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usdValue",
									"type": "uint256"
								}
							],
							"name": "WithdrawalMade",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "priceFeed",
									"type": "address"
								}
							],
							"name": "addTokenSupport",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAvailableBankCapUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getBalanceUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getPriceFeed",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSupportedTokens",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getTotalDeposits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalDepositsUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "i_bankCapUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "i_withdrawalThresholdUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "isTokenSupported",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "removeTokenSupport",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_depositCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_withdrawalCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"DepositMade(address,address,uint256,uint256)": {
								"params": {
									"amount": "Monto en decimales nativos del token (wei para ETH).",
									"token": "Token depositado (address(0) = ETH).",
									"usdValue": "Valor equivalente en USD (18 decimales).",
									"user": "Cuenta que deposita."
								}
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"WithdrawalMade(address,address,uint256,uint256)": {
								"params": {
									"amount": "Monto en decimales nativos del token (wei para ETH).",
									"token": "Token retirado (address(0) = ETH).",
									"usdValue": "Valor equivalente en USD (18 decimales).",
									"user": "Cuenta que retira."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"addTokenSupport(address,address)": {
								"params": {
									"priceFeed": "Dirección del oráculo TOKEN/USD (Chainlink).",
									"token": "Dirección del token."
								}
							},
							"constructor": {
								"params": {
									"_bankCapUSD": "Cap global de depósitos en USD (18 decimales).",
									"_ethPriceFeed": "Dirección del feed Chainlink ETH/USD.",
									"_withdrawalThresholdUSD": "Umbral por retiro en USD (18 decimales)."
								}
							},
							"depositToken(address,uint256)": {
								"params": {
									"amount": "Monto a depositar (en decimales nativos del token).",
									"token": "Dirección del token ERC-20."
								}
							},
							"getBalance(address,address)": {
								"params": {
									"token": "Token (address(0) = ETH).",
									"user": "Dirección del usuario."
								}
							},
							"getBalanceUSD(address,address)": {
								"params": {
									"token": "Token (address(0) = ETH).",
									"user": "Dirección del usuario."
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getTotalDeposits(address)": {
								"params": {
									"token": "Token."
								}
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"removeTokenSupport(address)": {
								"params": {
									"token": "Dirección del token a deshabilitar."
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"withdrawETH(uint256)": {
								"params": {
									"amount": "Monto en wei a retirar."
								}
							},
							"withdrawToken(address,uint256)": {
								"params": {
									"amount": "Monto a retirar (en decimales nativos del token).",
									"token": "Dirección del token."
								}
							}
						},
						"stateVariables": {
							"USDC_DECIMALS": {
								"details": "Normalizamos saldos a 6 decimales para facilidad de sumas por token."
							},
							"i_bankCapUSD": {
								"details": "Inmutable: se define en el constructor, no puede cambiar."
							},
							"i_withdrawalThresholdUSD": {
								"details": "Inmutable: se define en el constructor, no puede cambiar."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/kipu-bank-v2.sol\":513:19575  contract KipuBankV2 is AccessControl, ReentrancyGuard {... */\n  mstore(0x40, 0xc0)\n    /* \"src/kipu-bank-v2.sol\":5788:6576  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2068  _status */\n  dup1\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2082  _status = NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/kipu-bank-v2.sol\":6033:6034  0 */\n  0x00\n    /* \"src/kipu-bank-v2.sol\":6006:6029  _withdrawalThresholdUSD */\n  dup4\n    /* \"src/kipu-bank-v2.sol\":6006:6034  _withdrawalThresholdUSD == 0 */\n  eq\n    /* \"src/kipu-bank-v2.sol\":6006:6054  _withdrawalThresholdUSD == 0 || _bankCapUSD == 0 */\n  dup1\n  tag_8\n  jumpi\n  pop\n    /* \"src/kipu-bank-v2.sol\":6053:6054  0 */\n  0x00\n    /* \"src/kipu-bank-v2.sol\":6038:6049  _bankCapUSD */\n  dup3\n    /* \"src/kipu-bank-v2.sol\":6038:6054  _bankCapUSD == 0 */\n  eq\n    /* \"src/kipu-bank-v2.sol\":6006:6054  _withdrawalThresholdUSD == 0 || _bankCapUSD == 0 */\ntag_8:\n    /* \"src/kipu-bank-v2.sol\":6002:6112  if (_withdrawalThresholdUSD == 0 || _bankCapUSD == 0) {... */\n  iszero\n  tag_9\n  jumpi\n    /* \"src/kipu-bank-v2.sol\":6078:6100  KipuBank__ZeroAmount() */\n  mload(0x40)\n  0x3f36295200000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"src/kipu-bank-v2.sol\":6002:6112  if (_withdrawalThresholdUSD == 0 || _bankCapUSD == 0) {... */\ntag_9:\n    /* \"src/kipu-bank-v2.sol\":6151:6174  _withdrawalThresholdUSD */\n  dup3\n    /* \"src/kipu-bank-v2.sol\":6124:6174  i_withdrawalThresholdUSD = _withdrawalThresholdUSD */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/kipu-bank-v2.sol\":6200:6211  _bankCapUSD */\n  dup2\n    /* \"src/kipu-bank-v2.sol\":6185:6211  i_bankCapUSD = _bankCapUSD */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/kipu-bank-v2.sol\":6292:6334  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n  0x00\n    /* \"src/kipu-bank-v2.sol\":6303:6321  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"src/kipu-bank-v2.sol\":6323:6333  msg.sender */\n  caller\n    /* \"src/kipu-bank-v2.sol\":6292:6302  _grantRole */\n  shl(0x20, tag_11)\n    /* \"src/kipu-bank-v2.sol\":6292:6334  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n  pop\n    /* \"src/kipu-bank-v2.sol\":6345:6379  _grantRole(ADMIN_ROLE, msg.sender) */\n  tag_12\n    /* \"src/kipu-bank-v2.sol\":923:946  keccak256(\"ADMIN_ROLE\") */\n  0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n    /* \"src/kipu-bank-v2.sol\":6368:6378  msg.sender */\n  caller\n    /* \"src/kipu-bank-v2.sol\":6345:6355  _grantRole */\n  shl(0x20, tag_11)\n    /* \"src/kipu-bank-v2.sol\":6345:6379  _grantRole(ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n  pop\n    /* \"src/kipu-bank-v2.sol\":6509:6522  _ethPriceFeed */\n  dup1\n    /* \"src/kipu-bank-v2.sol\":6460:6472  s_priceFeeds */\n  0x04\n    /* \"src/kipu-bank-v2.sol\":6460:6484  s_priceFeeds[NATIVE_ETH] */\n  0x00\n    /* \"src/kipu-bank-v2.sol\":1899:1900  0 */\n  dup1\n    /* \"src/kipu-bank-v2.sol\":6460:6484  s_priceFeeds[NATIVE_ETH] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"src/kipu-bank-v2.sol\":6460:6523  s_priceFeeds[NATIVE_ETH] = AggregatorV3Interface(_ethPriceFeed) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/kipu-bank-v2.sol\":6534:6551  s_supportedTokens */\n  0x05\n    /* \"src/kipu-bank-v2.sol\":1899:1900  0 */\n  0x00\n    /* \"src/kipu-bank-v2.sol\":6534:6568  s_supportedTokens.push(NATIVE_ETH) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/kipu-bank-v2.sol\":5788:6576  constructor(... */\n  pop\n  pop\n  pop\n    /* \"src/kipu-bank-v2.sol\":513:19575  contract KipuBankV2 is AccessControl, ReentrancyGuard {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  tag_16\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n  shl(0x20, tag_17)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n  tag_18\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  tag_19\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n  shl(0x20, tag_20)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n  swap1\n  pop\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_15:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_17:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_20:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_25:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_27:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_28:\n    /* \"#utility.yul\":490:514   */\n  tag_40\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_27\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_41:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_29:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_43\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_28\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_30:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:922   */\ntag_31:\n    /* \"#utility.yul\":863:870   */\n  0x00\n    /* \"#utility.yul\":892:916   */\n  tag_46\n    /* \"#utility.yul\":910:915   */\n  dup3\n    /* \"#utility.yul\":892:916   */\n  tag_30\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":881:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_32:\n    /* \"#utility.yul\":1001:1025   */\n  tag_48\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_31\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_49:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_33:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_51\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_32\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  dup1\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_54\n  tag_25\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1326:1445   */\ntag_53:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_55\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_29\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_56\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_29\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_57\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_33\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"src/kipu-bank-v2.sol\":513:19575  contract KipuBankV2 is AccessControl, ReentrancyGuard {... */\ntag_14:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x67ee31144bea895314df7c8383b1a0e40c613448def41da1afb11ff52a2021aa\")\n  0x00\n  assignImmutable(\"0xf586532c52cafa07782ab6085737addf284f0cc1dede3aa9b2bdba9d5551b7a5\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/kipu-bank-v2.sol\":513:19575  contract KipuBankV2 is AccessControl, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x83e397b8\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xd15f58fb\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xe62615c6\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf14210a6\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf6326fb3\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0xd15f58fb\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd3c7c2c7\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd4fac45d\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x83e397b8\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x9e281a98\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb2343b1c\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xcac2e25f\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x5b6cca80\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x5b6cca80\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5ccf7ac4\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x75151b63\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x75b238fc\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x338b5dea\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0251cfa1\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x08133237\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0ccee433\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2ba8d939\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"src/kipu-bank-v2.sol\":6883:6914  _deposit(NATIVE_ETH, msg.value) */\n      tag_36\n        /* \"src/kipu-bank-v2.sol\":1899:1900  0 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":6904:6913  msg.value */\n      callvalue\n        /* \"src/kipu-bank-v2.sol\":6883:6891  _deposit */\n      tag_37\n        /* \"src/kipu-bank-v2.sol\":6883:6914  _deposit(NATIVE_ETH, msg.value) */\n      jump\t// in\n    tag_36:\n        /* \"src/kipu-bank-v2.sol\":513:19575  contract KipuBankV2 is AccessControl, ReentrancyGuard {... */\n      stop\n    tag_2:\n        /* \"src/kipu-bank-v2.sol\":7054:7080  KipuBank__TransferFailed() */\n      mload(0x40)\n      0x2ae871a500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/kipu-bank-v2.sol\":18182:18332  function getTotalDeposits(address token) external view returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/kipu-bank-v2.sol\":18679:18889  function getAvailableBankCapUSD() external view returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/kipu-bank-v2.sol\":1341:1378  uint256 public immutable i_bankCapUSD */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/kipu-bank-v2.sol\":9887:10601  function removeTokenSupport(address token) external onlyRole(ADMIN_ROLE) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      stop\n        /* \"src/kipu-bank-v2.sol\":7717:8322  function depositToken(address token, uint256 amount) external nonReentrant {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      stop\n        /* \"src/kipu-bank-v2.sol\":19447:19570  function getPriceFeed(address token) external view returns (address) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/kipu-bank-v2.sol\":9244:9727  function addTokenSupport(address token, address priceFeed) ... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n    tag_94:\n      stop\n        /* \"src/kipu-bank-v2.sol\":19206:19344  function isTokenSupported(address token) external view returns (bool) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/kipu-bank-v2.sol\":886:946  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/kipu-bank-v2.sol\":18450:18561  function getTotalDepositsUSD() external view returns (uint256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/kipu-bank-v2.sol\":8789:9042  function withdrawToken(address token, uint256 amount) external nonReentrant {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_117\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n    tag_117:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/kipu-bank-v2.sol\":2695:2727  uint256 public s_withdrawalCount */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      tag_127\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/kipu-bank-v2.sol\":2588:2617  uint256 public s_depositCount */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/kipu-bank-v2.sol\":1113:1162  uint256 public immutable i_withdrawalThresholdUSD */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/kipu-bank-v2.sol\":18985:19099  function getSupportedTokens() external view returns (address[] memory) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      tag_137\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/kipu-bank-v2.sol\":17312:17565  function getBalance(address user, address token) external view returns (uint256) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_142\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      tag_147\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_148:\n      tag_149\n      jump\t// in\n    tag_147:\n      stop\n        /* \"src/kipu-bank-v2.sol\":17740:18045  function getBalanceUSD(address user, address token) external view returns (uint256) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      pop\n      tag_151\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_152\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_152:\n      tag_153\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      tag_154\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/kipu-bank-v2.sol\":8434:8598  function withdrawETH(uint256 amount) external nonReentrant {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      tag_156\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      tag_159\n      jump\t// in\n    tag_156:\n      stop\n        /* \"src/kipu-bank-v2.sol\":7352:7514  function depositETH() external payable nonReentrant {... */\n    tag_28:\n      tag_160\n      tag_161\n      jump\t// in\n    tag_160:\n      stop\n        /* \"src/kipu-bank-v2.sol\":11237:12055  function _deposit(address token, uint256 amount) private {... */\n    tag_37:\n        /* \"src/kipu-bank-v2.sol\":11324:11340  uint256 usdValue */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":11343:11370  _getUSDValue(token, amount) */\n      tag_163\n        /* \"src/kipu-bank-v2.sol\":11356:11361  token */\n      dup4\n        /* \"src/kipu-bank-v2.sol\":11363:11369  amount */\n      dup4\n        /* \"src/kipu-bank-v2.sol\":11343:11355  _getUSDValue */\n      tag_164\n        /* \"src/kipu-bank-v2.sol\":11343:11370  _getUSDValue(token, amount) */\n      jump\t// in\n    tag_163:\n        /* \"src/kipu-bank-v2.sol\":11324:11370  uint256 usdValue = _getUSDValue(token, amount) */\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":11399:11422  uint256 currentTotalUSD */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":11425:11447  _getTotalDepositsUSD() */\n      tag_165\n        /* \"src/kipu-bank-v2.sol\":11425:11445  _getTotalDepositsUSD */\n      tag_166\n        /* \"src/kipu-bank-v2.sol\":11425:11447  _getTotalDepositsUSD() */\n      jump\t// in\n    tag_165:\n        /* \"src/kipu-bank-v2.sol\":11399:11447  uint256 currentTotalUSD = _getTotalDepositsUSD() */\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":11517:11529  i_bankCapUSD */\n      immutable(\"0x67ee31144bea895314df7c8383b1a0e40c613448def41da1afb11ff52a2021aa\")\n        /* \"src/kipu-bank-v2.sol\":11506:11514  usdValue */\n      dup3\n        /* \"src/kipu-bank-v2.sol\":11488:11503  currentTotalUSD */\n      dup3\n        /* \"src/kipu-bank-v2.sol\":11488:11514  currentTotalUSD + usdValue */\n      tag_167\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"src/kipu-bank-v2.sol\":11488:11529  currentTotalUSD + usdValue > i_bankCapUSD */\n      gt\n        /* \"src/kipu-bank-v2.sol\":11484:11682  if (currentTotalUSD + usdValue > i_bankCapUSD) {... */\n      iszero\n      tag_169\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":11597:11605  usdValue */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":11640:11655  currentTotalUSD */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":11625:11637  i_bankCapUSD */\n      immutable(\"0x67ee31144bea895314df7c8383b1a0e40c613448def41da1afb11ff52a2021aa\")\n        /* \"src/kipu-bank-v2.sol\":11625:11655  i_bankCapUSD - currentTotalUSD */\n      tag_170\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n        /* \"src/kipu-bank-v2.sol\":11553:11670  KipuBank__BankCapExceeded(... */\n      mload(0x40)\n      0x639847a700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap3\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/kipu-bank-v2.sol\":11484:11682  if (currentTotalUSD + usdValue > i_bankCapUSD) {... */\n    tag_169:\n        /* \"src/kipu-bank-v2.sol\":11744:11768  uint256 normalizedAmount */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":11771:11802  _normalizeToUSDC(token, amount) */\n      tag_174\n        /* \"src/kipu-bank-v2.sol\":11788:11793  token */\n      dup6\n        /* \"src/kipu-bank-v2.sol\":11795:11801  amount */\n      dup6\n        /* \"src/kipu-bank-v2.sol\":11771:11787  _normalizeToUSDC */\n      tag_175\n        /* \"src/kipu-bank-v2.sol\":11771:11802  _normalizeToUSDC(token, amount) */\n      jump\t// in\n    tag_174:\n        /* \"src/kipu-bank-v2.sol\":11744:11802  uint256 normalizedAmount = _normalizeToUSDC(token, amount) */\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":11859:11875  normalizedAmount */\n      dup1\n        /* \"src/kipu-bank-v2.sol\":11826:11836  s_deposits */\n      0x02\n        /* \"src/kipu-bank-v2.sol\":11826:11848  s_deposits[msg.sender] */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":11837:11847  msg.sender */\n      caller\n        /* \"src/kipu-bank-v2.sol\":11826:11848  s_deposits[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/kipu-bank-v2.sol\":11826:11855  s_deposits[msg.sender][token] */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":11849:11854  token */\n      dup8\n        /* \"src/kipu-bank-v2.sol\":11826:11855  s_deposits[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/kipu-bank-v2.sol\":11826:11875  s_deposits[msg.sender][token] += normalizedAmount */\n      dup3\n      dup3\n      sload\n      tag_176\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_176:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/kipu-bank-v2.sol\":11912:11928  normalizedAmount */\n      dup1\n        /* \"src/kipu-bank-v2.sol\":11886:11901  s_totalDeposits */\n      0x03\n        /* \"src/kipu-bank-v2.sol\":11886:11908  s_totalDeposits[token] */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":11902:11907  token */\n      dup8\n        /* \"src/kipu-bank-v2.sol\":11886:11908  s_totalDeposits[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/kipu-bank-v2.sol\":11886:11928  s_totalDeposits[token] += normalizedAmount */\n      dup3\n      dup3\n      sload\n      tag_177\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_177:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/kipu-bank-v2.sol\":11939:11953  s_depositCount */\n      0x06\n      0x00\n        /* \"src/kipu-bank-v2.sol\":11939:11955  s_depositCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"src/kipu-bank-v2.sol\":12023:12028  token */\n      dup5\n        /* \"src/kipu-bank-v2.sol\":11999:12047  DepositMade(msg.sender, token, amount, usdValue) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/kipu-bank-v2.sol\":12011:12021  msg.sender */\n      caller\n        /* \"src/kipu-bank-v2.sol\":11999:12047  DepositMade(msg.sender, token, amount, usdValue) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x57bad7e3c9efecf6e1f60bbd846b999e9da4a409224287a8df09779f2330135e\n        /* \"src/kipu-bank-v2.sol\":12030:12036  amount */\n      dup7\n        /* \"src/kipu-bank-v2.sol\":12038:12046  usdValue */\n      dup7\n        /* \"src/kipu-bank-v2.sol\":11999:12047  DepositMade(msg.sender, token, amount, usdValue) */\n      mload(0x40)\n      tag_180\n      swap3\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/kipu-bank-v2.sol\":11294:12055  {... */\n      pop\n      pop\n      pop\n        /* \"src/kipu-bank-v2.sol\":11237:12055  function _deposit(address token, uint256 amount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2626:2630  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2664:2696  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2660  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_182\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2735  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2723  super.supportsInterface */\n      tag_184\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_182:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2736  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/kipu-bank-v2.sol\":18182:18332  function getTotalDeposits(address token) external view returns (uint256) {... */\n    tag_51:\n        /* \"src/kipu-bank-v2.sol\":18246:18253  uint256 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":18273:18324  _denormalizeFromUSDC(token, s_totalDeposits[token]) */\n      tag_186\n        /* \"src/kipu-bank-v2.sol\":18294:18299  token */\n      dup3\n        /* \"src/kipu-bank-v2.sol\":18301:18316  s_totalDeposits */\n      0x03\n        /* \"src/kipu-bank-v2.sol\":18301:18323  s_totalDeposits[token] */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":18317:18322  token */\n      dup6\n        /* \"src/kipu-bank-v2.sol\":18301:18323  s_totalDeposits[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/kipu-bank-v2.sol\":18273:18293  _denormalizeFromUSDC */\n      tag_187\n        /* \"src/kipu-bank-v2.sol\":18273:18324  _denormalizeFromUSDC(token, s_totalDeposits[token]) */\n      jump\t// in\n    tag_186:\n        /* \"src/kipu-bank-v2.sol\":18266:18324  return _denormalizeFromUSDC(token, s_totalDeposits[token]) */\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":18182:18332  function getTotalDeposits(address token) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/kipu-bank-v2.sol\":18679:18889  function getAvailableBankCapUSD() external view returns (uint256) {... */\n    tag_56:\n        /* \"src/kipu-bank-v2.sol\":18736:18743  uint256 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":18756:18776  uint256 currentTotal */\n      dup1\n        /* \"src/kipu-bank-v2.sol\":18779:18801  _getTotalDepositsUSD() */\n      tag_189\n        /* \"src/kipu-bank-v2.sol\":18779:18799  _getTotalDepositsUSD */\n      tag_166\n        /* \"src/kipu-bank-v2.sol\":18779:18801  _getTotalDepositsUSD() */\n      jump\t// in\n    tag_189:\n        /* \"src/kipu-bank-v2.sol\":18756:18801  uint256 currentTotal = _getTotalDepositsUSD() */\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":18835:18847  i_bankCapUSD */\n      immutable(\"0x67ee31144bea895314df7c8383b1a0e40c613448def41da1afb11ff52a2021aa\")\n        /* \"src/kipu-bank-v2.sol\":18819:18831  currentTotal */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":18819:18847  currentTotal >= i_bankCapUSD */\n      lt\n      iszero\n        /* \"src/kipu-bank-v2.sol\":18819:18881  currentTotal >= i_bankCapUSD ? 0 : i_bankCapUSD - currentTotal */\n      tag_190\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":18869:18881  currentTotal */\n      dup1\n        /* \"src/kipu-bank-v2.sol\":18854:18866  i_bankCapUSD */\n      immutable(\"0x67ee31144bea895314df7c8383b1a0e40c613448def41da1afb11ff52a2021aa\")\n        /* \"src/kipu-bank-v2.sol\":18854:18881  i_bankCapUSD - currentTotal */\n      tag_191\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_191:\n        /* \"src/kipu-bank-v2.sol\":18819:18881  currentTotal >= i_bankCapUSD ? 0 : i_bankCapUSD - currentTotal */\n      jump(tag_192)\n    tag_190:\n        /* \"src/kipu-bank-v2.sol\":18850:18851  0 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":18819:18881  currentTotal >= i_bankCapUSD ? 0 : i_bankCapUSD - currentTotal */\n    tag_192:\n        /* \"src/kipu-bank-v2.sol\":18812:18881  return currentTotal >= i_bankCapUSD ? 0 : i_bankCapUSD - currentTotal */\n      swap2\n      pop\n      pop\n        /* \"src/kipu-bank-v2.sol\":18679:18889  function getAvailableBankCapUSD() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"src/kipu-bank-v2.sol\":1341:1378  uint256 public immutable i_bankCapUSD */\n    tag_60:\n      immutable(\"0x67ee31144bea895314df7c8383b1a0e40c613448def41da1afb11ff52a2021aa\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3884:3888  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3870:3899  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/kipu-bank-v2.sol\":9887:10601  function removeTokenSupport(address token) external onlyRole(ADMIN_ROLE) {... */\n    tag_72:\n        /* \"src/kipu-bank-v2.sol\":923:946  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_195\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_196\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_195:\n        /* \"src/kipu-bank-v2.sol\":10015:10016  0 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":9975:10017  address(s_priceFeeds[token]) == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/kipu-bank-v2.sol\":9983:9995  s_priceFeeds */\n      0x04\n        /* \"src/kipu-bank-v2.sol\":9983:10002  s_priceFeeds[token] */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":9996:10001  token */\n      dup5\n        /* \"src/kipu-bank-v2.sol\":9983:10002  s_priceFeeds[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/kipu-bank-v2.sol\":9975:10017  address(s_priceFeeds[token]) == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/kipu-bank-v2.sol\":9971:10087  if (address(s_priceFeeds[token]) == address(0)) {... */\n      tag_198\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":10069:10074  token */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":10041:10075  KipuBank__TokenNotSupported(token) */\n      mload(0x40)\n      0xf9968b3a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/kipu-bank-v2.sol\":9971:10087  if (address(s_priceFeeds[token]) == address(0)) {... */\n    tag_198:\n        /* \"src/kipu-bank-v2.sol\":10126:10127  0 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":10101:10116  s_totalDeposits */\n      0x03\n        /* \"src/kipu-bank-v2.sol\":10101:10123  s_totalDeposits[token] */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":10117:10122  token */\n      dup5\n        /* \"src/kipu-bank-v2.sol\":10101:10123  s_totalDeposits[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/kipu-bank-v2.sol\":10101:10127  s_totalDeposits[token] > 0 */\n      gt\n        /* \"src/kipu-bank-v2.sol\":10097:10219  if (s_totalDeposits[token] > 0) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":10181:10182  0 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":10184:10199  s_totalDeposits */\n      0x03\n        /* \"src/kipu-bank-v2.sol\":10184:10206  s_totalDeposits[token] */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":10200:10205  token */\n      dup5\n        /* \"src/kipu-bank-v2.sol\":10184:10206  s_totalDeposits[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/kipu-bank-v2.sol\":10151:10207  KipuBank__InsufficientBalance(0, s_totalDeposits[token]) */\n      mload(0x40)\n      0x61965c4e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap3\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/kipu-bank-v2.sol\":10097:10219  if (s_totalDeposits[token] > 0) {... */\n    tag_200:\n        /* \"src/kipu-bank-v2.sol\":10238:10250  s_priceFeeds */\n      0x04\n        /* \"src/kipu-bank-v2.sol\":10238:10257  s_priceFeeds[token] */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":10251:10256  token */\n      dup4\n        /* \"src/kipu-bank-v2.sol\":10238:10257  s_priceFeeds[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/kipu-bank-v2.sol\":10231:10257  delete s_priceFeeds[token] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"src/kipu-bank-v2.sol\":10275:10284  uint256 i */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":10270:10557  for (uint256 i = 0; i < s_supportedTokens.length; i++) {... */\n    tag_203:\n        /* \"src/kipu-bank-v2.sol\":10294:10311  s_supportedTokens */\n      0x05\n        /* \"src/kipu-bank-v2.sol\":10294:10318  s_supportedTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":10290:10291  i */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":10290:10318  i < s_supportedTokens.length */\n      lt\n        /* \"src/kipu-bank-v2.sol\":10270:10557  for (uint256 i = 0; i < s_supportedTokens.length; i++) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":10368:10373  token */\n      dup3\n        /* \"src/kipu-bank-v2.sol\":10344:10373  s_supportedTokens[i] == token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/kipu-bank-v2.sol\":10344:10361  s_supportedTokens */\n      0x05\n        /* \"src/kipu-bank-v2.sol\":10362:10363  i */\n      dup3\n        /* \"src/kipu-bank-v2.sol\":10344:10364  s_supportedTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_206\n      jumpi\n      tag_207\n      tag_208\n      jump\t// in\n    tag_207:\n    tag_206:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/kipu-bank-v2.sol\":10344:10373  s_supportedTokens[i] == token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/kipu-bank-v2.sol\":10340:10546  if (s_supportedTokens[i] == token) {... */\n      tag_210\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":10417:10434  s_supportedTokens */\n      0x05\n        /* \"src/kipu-bank-v2.sol\":10462:10463  1 */\n      0x01\n        /* \"src/kipu-bank-v2.sol\":10435:10452  s_supportedTokens */\n      0x05\n        /* \"src/kipu-bank-v2.sol\":10435:10459  s_supportedTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":10435:10463  s_supportedTokens.length - 1 */\n      tag_211\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_211:\n        /* \"src/kipu-bank-v2.sol\":10417:10464  s_supportedTokens[s_supportedTokens.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_212\n      jumpi\n      tag_213\n      tag_208\n      jump\t// in\n    tag_213:\n    tag_212:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/kipu-bank-v2.sol\":10394:10411  s_supportedTokens */\n      0x05\n        /* \"src/kipu-bank-v2.sol\":10412:10413  i */\n      dup3\n        /* \"src/kipu-bank-v2.sol\":10394:10414  s_supportedTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_215\n      jumpi\n      tag_216\n      tag_208\n      jump\t// in\n    tag_216:\n    tag_215:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"src/kipu-bank-v2.sol\":10394:10464  s_supportedTokens[i] = s_supportedTokens[s_supportedTokens.length - 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/kipu-bank-v2.sol\":10483:10500  s_supportedTokens */\n      0x05\n        /* \"src/kipu-bank-v2.sol\":10483:10506  s_supportedTokens.pop() */\n      dup1\n      sload\n      dup1\n      tag_218\n      jumpi\n      tag_219\n      tag_220\n      jump\t// in\n    tag_219:\n    tag_218:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"src/kipu-bank-v2.sol\":10525:10530  break */\n      jump(tag_204)\n        /* \"src/kipu-bank-v2.sol\":10340:10546  if (s_supportedTokens[i] == token) {... */\n    tag_210:\n        /* \"src/kipu-bank-v2.sol\":10320:10323  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"src/kipu-bank-v2.sol\":10270:10557  for (uint256 i = 0; i < s_supportedTokens.length; i++) {... */\n      jump(tag_203)\n    tag_204:\n      pop\n        /* \"src/kipu-bank-v2.sol\":10587:10592  token */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":10574:10593  TokenRemoved(token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4c910b69fe65a61f7531b9c5042b2329ca7179c77290aa7e2eb3afa3c8511fd3\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/kipu-bank-v2.sol\":9887:10601  function removeTokenSupport(address token) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      tag_222\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4289:4293  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4288  getRoleAdmin */\n      tag_66\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_224\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_196\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_226\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4317:4321  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4323:4330  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4316  _grantRole */\n      tag_227\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      jump\t// in\n    tag_226:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/kipu-bank-v2.sol\":7717:8322  function depositToken(address token, uint256 amount) external nonReentrant {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_229\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_230\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_229:\n        /* \"src/kipu-bank-v2.sol\":7817:7818  0 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":7807:7813  amount */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":7807:7818  amount == 0 */\n      sub\n        /* \"src/kipu-bank-v2.sol\":7803:7849  if (amount == 0) revert KipuBank__ZeroAmount() */\n      tag_232\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":7827:7849  KipuBank__ZeroAmount() */\n      mload(0x40)\n      0x3f36295200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/kipu-bank-v2.sol\":7803:7849  if (amount == 0) revert KipuBank__ZeroAmount() */\n    tag_232:\n        /* \"src/kipu-bank-v2.sol\":1899:1900  0 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":7864:7883  token == NATIVE_ETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/kipu-bank-v2.sol\":7864:7869  token */\n      dup3\n        /* \"src/kipu-bank-v2.sol\":7864:7883  token == NATIVE_ETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/kipu-bank-v2.sol\":7860:7926  if (token == NATIVE_ETH) revert KipuBank__TokenNotSupported(token) */\n      tag_233\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":7920:7925  token */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":7892:7926  KipuBank__TokenNotSupported(token) */\n      mload(0x40)\n      0xf9968b3a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/kipu-bank-v2.sol\":7860:7926  if (token == NATIVE_ETH) revert KipuBank__TokenNotSupported(token) */\n    tag_233:\n        /* \"src/kipu-bank-v2.sol\":7981:7982  0 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":7941:7983  address(s_priceFeeds[token]) == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/kipu-bank-v2.sol\":7949:7961  s_priceFeeds */\n      0x04\n        /* \"src/kipu-bank-v2.sol\":7949:7968  s_priceFeeds[token] */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":7962:7967  token */\n      dup5\n        /* \"src/kipu-bank-v2.sol\":7949:7968  s_priceFeeds[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/kipu-bank-v2.sol\":7941:7983  address(s_priceFeeds[token]) == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/kipu-bank-v2.sol\":7937:8053  if (address(s_priceFeeds[token]) == address(0)) {... */\n      tag_235\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":8035:8040  token */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":8007:8041  KipuBank__TokenNotSupported(token) */\n      mload(0x40)\n      0xf9968b3a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/kipu-bank-v2.sol\":7937:8053  if (address(s_priceFeeds[token]) == address(0)) {... */\n    tag_235:\n        /* \"src/kipu-bank-v2.sol\":8215:8280  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      tag_237\n        /* \"src/kipu-bank-v2.sol\":8246:8256  msg.sender */\n      caller\n        /* \"src/kipu-bank-v2.sol\":8266:8270  this */\n      address\n        /* \"src/kipu-bank-v2.sol\":8273:8279  amount */\n      dup4\n        /* \"src/kipu-bank-v2.sol\":8222:8227  token */\n      dup6\n        /* \"src/kipu-bank-v2.sol\":8215:8245  IERC20(token).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_238\n      swap1\n        /* \"src/kipu-bank-v2.sol\":8215:8280  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_237:\n        /* \"src/kipu-bank-v2.sol\":8291:8314  _deposit(token, amount) */\n      tag_239\n        /* \"src/kipu-bank-v2.sol\":8300:8305  token */\n      dup3\n        /* \"src/kipu-bank-v2.sol\":8307:8313  amount */\n      dup3\n        /* \"src/kipu-bank-v2.sol\":8291:8299  _deposit */\n      tag_37\n        /* \"src/kipu-bank-v2.sol\":8291:8314  _deposit(token, amount) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_240\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2560  _nonReentrantAfter */\n      tag_241\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      jump\t// in\n    tag_240:\n        /* \"src/kipu-bank-v2.sol\":7717:8322  function depositToken(address token, uint256 amount) external nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      tag_243\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5429  _msgSender */\n      tag_244\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5415  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n      tag_245\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_246\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5517:5521  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5523:5541  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5516  _revokeRole */\n      tag_247\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_246:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/kipu-bank-v2.sol\":19447:19570  function getPriceFeed(address token) external view returns (address) {... */\n    tag_90:\n        /* \"src/kipu-bank-v2.sol\":19507:19514  address */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":19542:19554  s_priceFeeds */\n      0x04\n        /* \"src/kipu-bank-v2.sol\":19542:19561  s_priceFeeds[token] */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":19555:19560  token */\n      dup4\n        /* \"src/kipu-bank-v2.sol\":19542:19561  s_priceFeeds[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/kipu-bank-v2.sol\":19527:19562  return address(s_priceFeeds[token]) */\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":19447:19570  function getPriceFeed(address token) external view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/kipu-bank-v2.sol\":9244:9727  function addTokenSupport(address token, address priceFeed) ... */\n    tag_97:\n        /* \"src/kipu-bank-v2.sol\":923:946  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_250\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_196\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_250:\n        /* \"src/kipu-bank-v2.sol\":1899:1900  0 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":9374:9393  token == NATIVE_ETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/kipu-bank-v2.sol\":9374:9379  token */\n      dup4\n        /* \"src/kipu-bank-v2.sol\":9374:9393  token == NATIVE_ETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/kipu-bank-v2.sol\":9370:9436  if (token == NATIVE_ETH) revert KipuBank__TokenNotSupported(token) */\n      tag_252\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":9430:9435  token */\n      dup3\n        /* \"src/kipu-bank-v2.sol\":9402:9436  KipuBank__TokenNotSupported(token) */\n      mload(0x40)\n      0xf9968b3a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_253\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/kipu-bank-v2.sol\":9370:9436  if (token == NATIVE_ETH) revert KipuBank__TokenNotSupported(token) */\n    tag_252:\n        /* \"src/kipu-bank-v2.sol\":9491:9492  0 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":9451:9493  address(s_priceFeeds[token]) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/kipu-bank-v2.sol\":9459:9471  s_priceFeeds */\n      0x04\n        /* \"src/kipu-bank-v2.sol\":9459:9478  s_priceFeeds[token] */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":9472:9477  token */\n      dup6\n        /* \"src/kipu-bank-v2.sol\":9459:9478  s_priceFeeds[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/kipu-bank-v2.sol\":9451:9493  address(s_priceFeeds[token]) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/kipu-bank-v2.sol\":9447:9567  if (address(s_priceFeeds[token]) != address(0)) {... */\n      tag_254\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":9549:9554  token */\n      dup3\n        /* \"src/kipu-bank-v2.sol\":9517:9555  KipuBank__TokenAlreadySupported(token) */\n      mload(0x40)\n      0xc2a2f47500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/kipu-bank-v2.sol\":9447:9567  if (address(s_priceFeeds[token]) != address(0)) {... */\n    tag_254:\n        /* \"src/kipu-bank-v2.sol\":9623:9632  priceFeed */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":9579:9591  s_priceFeeds */\n      0x04\n        /* \"src/kipu-bank-v2.sol\":9579:9598  s_priceFeeds[token] */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":9592:9597  token */\n      dup6\n        /* \"src/kipu-bank-v2.sol\":9579:9598  s_priceFeeds[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/kipu-bank-v2.sol\":9579:9633  s_priceFeeds[token] = AggregatorV3Interface(priceFeed) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/kipu-bank-v2.sol\":9644:9661  s_supportedTokens */\n      0x05\n        /* \"src/kipu-bank-v2.sol\":9667:9672  token */\n      dup4\n        /* \"src/kipu-bank-v2.sol\":9644:9673  s_supportedTokens.push(token) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/kipu-bank-v2.sol\":9709:9718  priceFeed */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":9691:9719  TokenAdded(token, priceFeed) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/kipu-bank-v2.sol\":9702:9707  token */\n      dup4\n        /* \"src/kipu-bank-v2.sol\":9691:9719  TokenAdded(token, priceFeed) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdffbd9ded1c09446f09377de547142dcce7dc541c8b0b028142b1eba7026b9e7\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/kipu-bank-v2.sol\":9244:9727  function addTokenSupport(address token, address priceFeed) ... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/kipu-bank-v2.sol\":19206:19344  function isTokenSupported(address token) external view returns (bool) {... */\n    tag_101:\n        /* \"src/kipu-bank-v2.sol\":19270:19274  bool */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":19334:19335  0 */\n      dup1\n        /* \"src/kipu-bank-v2.sol\":19294:19336  address(s_priceFeeds[token]) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/kipu-bank-v2.sol\":19302:19314  s_priceFeeds */\n      0x04\n        /* \"src/kipu-bank-v2.sol\":19302:19321  s_priceFeeds[token] */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":19315:19320  token */\n      dup5\n        /* \"src/kipu-bank-v2.sol\":19302:19321  s_priceFeeds[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/kipu-bank-v2.sol\":19294:19336  address(s_priceFeeds[token]) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"src/kipu-bank-v2.sol\":19287:19336  return address(s_priceFeeds[token]) != address(0) */\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":19206:19344  function isTokenSupported(address token) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/kipu-bank-v2.sol\":886:946  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_105:\n        /* \"src/kipu-bank-v2.sol\":923:946  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"src/kipu-bank-v2.sol\":886:946  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"src/kipu-bank-v2.sol\":18450:18561  function getTotalDepositsUSD() external view returns (uint256) {... */\n    tag_109:\n        /* \"src/kipu-bank-v2.sol\":18504:18511  uint256 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":18531:18553  _getTotalDepositsUSD() */\n      tag_259\n        /* \"src/kipu-bank-v2.sol\":18531:18551  _getTotalDepositsUSD */\n      tag_166\n        /* \"src/kipu-bank-v2.sol\":18531:18553  _getTotalDepositsUSD() */\n      jump\t// in\n    tag_259:\n        /* \"src/kipu-bank-v2.sol\":18524:18553  return _getTotalDepositsUSD() */\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":18450:18561  function getTotalDepositsUSD() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/kipu-bank-v2.sol\":8789:9042  function withdrawToken(address token, uint256 amount) external nonReentrant {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_262\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_230\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_262:\n        /* \"src/kipu-bank-v2.sol\":8890:8891  0 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":8880:8886  amount */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":8880:8891  amount == 0 */\n      sub\n        /* \"src/kipu-bank-v2.sol\":8876:8922  if (amount == 0) revert KipuBank__ZeroAmount() */\n      tag_264\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":8900:8922  KipuBank__ZeroAmount() */\n      mload(0x40)\n      0x3f36295200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/kipu-bank-v2.sol\":8876:8922  if (amount == 0) revert KipuBank__ZeroAmount() */\n    tag_264:\n        /* \"src/kipu-bank-v2.sol\":1899:1900  0 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":8937:8956  token == NATIVE_ETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/kipu-bank-v2.sol\":8937:8942  token */\n      dup3\n        /* \"src/kipu-bank-v2.sol\":8937:8956  token == NATIVE_ETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/kipu-bank-v2.sol\":8933:8999  if (token == NATIVE_ETH) revert KipuBank__TokenNotSupported(token) */\n      tag_265\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":8993:8998  token */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":8965:8999  KipuBank__TokenNotSupported(token) */\n      mload(0x40)\n      0xf9968b3a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/kipu-bank-v2.sol\":8933:8999  if (token == NATIVE_ETH) revert KipuBank__TokenNotSupported(token) */\n    tag_265:\n        /* \"src/kipu-bank-v2.sol\":9010:9034  _withdraw(token, amount) */\n      tag_267\n        /* \"src/kipu-bank-v2.sol\":9020:9025  token */\n      dup3\n        /* \"src/kipu-bank-v2.sol\":9027:9033  amount */\n      dup3\n        /* \"src/kipu-bank-v2.sol\":9010:9019  _withdraw */\n      tag_268\n        /* \"src/kipu-bank-v2.sol\":9010:9034  _withdraw(token, amount) */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_269\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2560  _nonReentrantAfter */\n      tag_241\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      jump\t// in\n    tag_269:\n        /* \"src/kipu-bank-v2.sol\":8789:9042  function withdrawToken(address token, uint256 amount) external nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_122:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"src/kipu-bank-v2.sol\":2695:2727  uint256 public s_withdrawalCount */\n    tag_126:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"src/kipu-bank-v2.sol\":2588:2617  uint256 public s_depositCount */\n    tag_130:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"src/kipu-bank-v2.sol\":1113:1162  uint256 public immutable i_withdrawalThresholdUSD */\n    tag_134:\n      immutable(\"0xf586532c52cafa07782ab6085737addf284f0cc1dede3aa9b2bdba9d5551b7a5\")\n      dup2\n      jump\t// out\n        /* \"src/kipu-bank-v2.sol\":18985:19099  function getSupportedTokens() external view returns (address[] memory) {... */\n    tag_138:\n        /* \"src/kipu-bank-v2.sol\":19038:19054  address[] memory */\n      0x60\n        /* \"src/kipu-bank-v2.sol\":19074:19091  s_supportedTokens */\n      0x05\n        /* \"src/kipu-bank-v2.sol\":19067:19091  return s_supportedTokens */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_271\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_272:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_272\n      jumpi\n    tag_271:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":18985:19099  function getSupportedTokens() external view returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"src/kipu-bank-v2.sol\":17312:17565  function getBalance(address user, address token) external view returns (uint256) {... */\n    tag_144:\n        /* \"src/kipu-bank-v2.sol\":17384:17391  uint256 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":17404:17429  uint256 normalizedBalance */\n      dup1\n        /* \"src/kipu-bank-v2.sol\":17432:17442  s_deposits */\n      0x02\n        /* \"src/kipu-bank-v2.sol\":17432:17448  s_deposits[user] */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":17443:17447  user */\n      dup6\n        /* \"src/kipu-bank-v2.sol\":17432:17448  s_deposits[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/kipu-bank-v2.sol\":17432:17455  s_deposits[user][token] */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":17449:17454  token */\n      dup5\n        /* \"src/kipu-bank-v2.sol\":17432:17455  s_deposits[user][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/kipu-bank-v2.sol\":17404:17455  uint256 normalizedBalance = s_deposits[user][token] */\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":17493:17539  _denormalizeFromUSDC(token, normalizedBalance) */\n      tag_274\n        /* \"src/kipu-bank-v2.sol\":17514:17519  token */\n      dup4\n        /* \"src/kipu-bank-v2.sol\":17521:17538  normalizedBalance */\n      dup3\n        /* \"src/kipu-bank-v2.sol\":17493:17513  _denormalizeFromUSDC */\n      tag_187\n        /* \"src/kipu-bank-v2.sol\":17493:17539  _denormalizeFromUSDC(token, normalizedBalance) */\n      jump\t// in\n    tag_274:\n        /* \"src/kipu-bank-v2.sol\":17486:17539  return _denormalizeFromUSDC(token, normalizedBalance) */\n      swap2\n      pop\n      pop\n        /* \"src/kipu-bank-v2.sol\":17312:17565  function getBalance(address user, address token) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      tag_275\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4706:4710  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4705  getRoleAdmin */\n      tag_66\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_277\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_196\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_279\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4735:4739  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4741:4748  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4734  _revokeRole */\n      tag_247\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      jump\t// in\n    tag_279:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/kipu-bank-v2.sol\":17740:18045  function getBalanceUSD(address user, address token) external view returns (uint256) {... */\n    tag_153:\n        /* \"src/kipu-bank-v2.sol\":17815:17822  uint256 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":17835:17860  uint256 normalizedBalance */\n      dup1\n        /* \"src/kipu-bank-v2.sol\":17863:17873  s_deposits */\n      0x02\n        /* \"src/kipu-bank-v2.sol\":17863:17879  s_deposits[user] */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":17874:17878  user */\n      dup6\n        /* \"src/kipu-bank-v2.sol\":17863:17879  s_deposits[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/kipu-bank-v2.sol\":17863:17886  s_deposits[user][token] */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":17880:17885  token */\n      dup5\n        /* \"src/kipu-bank-v2.sol\":17863:17886  s_deposits[user][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/kipu-bank-v2.sol\":17835:17886  uint256 normalizedBalance = s_deposits[user][token] */\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":17917:17937  uint256 nativeAmount */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":17940:17986  _denormalizeFromUSDC(token, normalizedBalance) */\n      tag_281\n        /* \"src/kipu-bank-v2.sol\":17961:17966  token */\n      dup5\n        /* \"src/kipu-bank-v2.sol\":17968:17985  normalizedBalance */\n      dup4\n        /* \"src/kipu-bank-v2.sol\":17940:17960  _denormalizeFromUSDC */\n      tag_187\n        /* \"src/kipu-bank-v2.sol\":17940:17986  _denormalizeFromUSDC(token, normalizedBalance) */\n      jump\t// in\n    tag_281:\n        /* \"src/kipu-bank-v2.sol\":17917:17986  uint256 nativeAmount = _denormalizeFromUSDC(token, normalizedBalance) */\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":18004:18037  _getUSDValue(token, nativeAmount) */\n      tag_282\n        /* \"src/kipu-bank-v2.sol\":18017:18022  token */\n      dup5\n        /* \"src/kipu-bank-v2.sol\":18024:18036  nativeAmount */\n      dup3\n        /* \"src/kipu-bank-v2.sol\":18004:18016  _getUSDValue */\n      tag_164\n        /* \"src/kipu-bank-v2.sol\":18004:18037  _getUSDValue(token, nativeAmount) */\n      jump\t// in\n    tag_282:\n        /* \"src/kipu-bank-v2.sol\":17997:18037  return _getUSDValue(token, nativeAmount) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"src/kipu-bank-v2.sol\":17740:18045  function getBalanceUSD(address user, address token) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/kipu-bank-v2.sol\":8434:8598  function withdrawETH(uint256 amount) external nonReentrant {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_284\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_230\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_284:\n        /* \"src/kipu-bank-v2.sol\":8518:8519  0 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":8508:8514  amount */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":8508:8519  amount == 0 */\n      sub\n        /* \"src/kipu-bank-v2.sol\":8504:8550  if (amount == 0) revert KipuBank__ZeroAmount() */\n      tag_286\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":8528:8550  KipuBank__ZeroAmount() */\n      mload(0x40)\n      0x3f36295200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/kipu-bank-v2.sol\":8504:8550  if (amount == 0) revert KipuBank__ZeroAmount() */\n    tag_286:\n        /* \"src/kipu-bank-v2.sol\":8561:8590  _withdraw(NATIVE_ETH, amount) */\n      tag_287\n        /* \"src/kipu-bank-v2.sol\":1899:1900  0 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":8583:8589  amount */\n      dup3\n        /* \"src/kipu-bank-v2.sol\":8561:8570  _withdraw */\n      tag_268\n        /* \"src/kipu-bank-v2.sol\":8561:8590  _withdraw(NATIVE_ETH, amount) */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_288\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2560  _nonReentrantAfter */\n      tag_241\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      jump\t// in\n    tag_288:\n        /* \"src/kipu-bank-v2.sol\":8434:8598  function withdrawETH(uint256 amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"src/kipu-bank-v2.sol\":7352:7514  function depositETH() external payable nonReentrant {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_290\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_230\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_290:\n        /* \"src/kipu-bank-v2.sol\":7432:7433  0 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":7419:7428  msg.value */\n      callvalue\n        /* \"src/kipu-bank-v2.sol\":7419:7433  msg.value == 0 */\n      sub\n        /* \"src/kipu-bank-v2.sol\":7415:7464  if (msg.value == 0) revert KipuBank__ZeroAmount() */\n      tag_292\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":7442:7464  KipuBank__ZeroAmount() */\n      mload(0x40)\n      0x3f36295200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/kipu-bank-v2.sol\":7415:7464  if (msg.value == 0) revert KipuBank__ZeroAmount() */\n    tag_292:\n        /* \"src/kipu-bank-v2.sol\":7475:7506  _deposit(NATIVE_ETH, msg.value) */\n      tag_293\n        /* \"src/kipu-bank-v2.sol\":1899:1900  0 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":7496:7505  msg.value */\n      callvalue\n        /* \"src/kipu-bank-v2.sol\":7475:7483  _deposit */\n      tag_37\n        /* \"src/kipu-bank-v2.sol\":7475:7506  _deposit(NATIVE_ETH, msg.value) */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_294\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2560  _nonReentrantAfter */\n      tag_241\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      jump\t// in\n    tag_294:\n        /* \"src/kipu-bank-v2.sol\":7352:7514  function depositETH() external payable nonReentrant {... */\n      jump\t// out\n        /* \"src/kipu-bank-v2.sol\":13883:14613  function _getUSDValue(address token, uint256 amount) private view returns (uint256) {... */\n    tag_164:\n        /* \"src/kipu-bank-v2.sol\":13958:13965  uint256 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":13978:14009  AggregatorV3Interface priceFeed */\n      dup1\n        /* \"src/kipu-bank-v2.sol\":14012:14024  s_priceFeeds */\n      0x04\n        /* \"src/kipu-bank-v2.sol\":14012:14031  s_priceFeeds[token] */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":14025:14030  token */\n      dup6\n        /* \"src/kipu-bank-v2.sol\":14012:14031  s_priceFeeds[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/kipu-bank-v2.sol\":13978:14031  AggregatorV3Interface priceFeed = s_priceFeeds[token] */\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":14057:14069  int256 price */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":14079:14088  priceFeed */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":14079:14104  priceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"src/kipu-bank-v2.sol\":14079:14106  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_297\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_297:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_298\n      swap2\n      swap1\n      tag_299\n      jump\t// in\n    tag_298:\n        /* \"src/kipu-bank-v2.sol\":14054:14106  (, int256 price, , , ) = priceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"src/kipu-bank-v2.sol\":14130:14131  0 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":14121:14126  price */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":14121:14131  price <= 0 */\n      sgt\n        /* \"src/kipu-bank-v2.sol\":14117:14168  if (price <= 0) revert KipuBank__InvalidPriceData() */\n      tag_300\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":14140:14168  KipuBank__InvalidPriceData() */\n      mload(0x40)\n      0x804b984b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/kipu-bank-v2.sol\":14117:14168  if (price <= 0) revert KipuBank__InvalidPriceData() */\n    tag_300:\n        /* \"src/kipu-bank-v2.sol\":14241:14260  uint8 tokenDecimals */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":1899:1900  0 */\n      dup1\n        /* \"src/kipu-bank-v2.sol\":14263:14282  token == NATIVE_ETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/kipu-bank-v2.sol\":14263:14268  token */\n      dup7\n        /* \"src/kipu-bank-v2.sol\":14263:14282  token == NATIVE_ETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/kipu-bank-v2.sol\":14263:14322  token == NATIVE_ETH ? 18 : IERC20Metadata(token).decimals() */\n      tag_301\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":14305:14310  token */\n      dup6\n        /* \"src/kipu-bank-v2.sol\":14290:14320  IERC20Metadata(token).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"src/kipu-bank-v2.sol\":14290:14322  IERC20Metadata(token).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_303\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_303:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_304\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_304:\n        /* \"src/kipu-bank-v2.sol\":14263:14322  token == NATIVE_ETH ? 18 : IERC20Metadata(token).decimals() */\n      jump(tag_306)\n    tag_301:\n        /* \"src/kipu-bank-v2.sol\":14285:14287  18 */\n      0x12\n        /* \"src/kipu-bank-v2.sol\":14263:14322  token == NATIVE_ETH ? 18 : IERC20Metadata(token).decimals() */\n    tag_306:\n        /* \"src/kipu-bank-v2.sol\":14241:14322  uint8 tokenDecimals = token == NATIVE_ETH ? 18 : IERC20Metadata(token).decimals() */\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":14333:14356  uint8 priceFeedDecimals */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":14359:14368  priceFeed */\n      dup4\n        /* \"src/kipu-bank-v2.sol\":14359:14377  priceFeed.decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"src/kipu-bank-v2.sol\":14359:14379  priceFeed.decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_308\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_308:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_309\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_309:\n        /* \"src/kipu-bank-v2.sol\":14333:14379  uint8 priceFeedDecimals = priceFeed.decimals() */\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":14587:14604  priceFeedDecimals */\n      dup1\n        /* \"src/kipu-bank-v2.sol\":14583:14585  10 */\n      0x0a\n        /* \"src/kipu-bank-v2.sol\":14583:14604  10**priceFeedDecimals */\n      tag_310\n      swap2\n      swap1\n      tag_311\n      jump\t// in\n    tag_310:\n        /* \"src/kipu-bank-v2.sol\":14567:14580  tokenDecimals */\n      dup3\n        /* \"src/kipu-bank-v2.sol\":14563:14565  10 */\n      0x0a\n        /* \"src/kipu-bank-v2.sol\":14563:14580  10**tokenDecimals */\n      tag_312\n      swap2\n      swap1\n      tag_311\n      jump\t// in\n    tag_312:\n        /* \"src/kipu-bank-v2.sol\":14563:14604  10**tokenDecimals * 10**priceFeedDecimals */\n      tag_313\n      swap2\n      swap1\n      tag_314\n      jump\t// in\n    tag_313:\n        /* \"src/kipu-bank-v2.sol\":1748:1750  18 */\n      0x12\n        /* \"src/kipu-bank-v2.sol\":14525:14527  10 */\n      0x0a\n        /* \"src/kipu-bank-v2.sol\":14525:14541  10**USD_DECIMALS */\n      tag_315\n      swap2\n      swap1\n      tag_311\n      jump\t// in\n    tag_315:\n        /* \"src/kipu-bank-v2.sol\":14516:14521  price */\n      dup5\n        /* \"src/kipu-bank-v2.sol\":14499:14505  amount */\n      dup9\n        /* \"src/kipu-bank-v2.sol\":14499:14522  amount * uint256(price) */\n      tag_316\n      swap2\n      swap1\n      tag_314\n      jump\t// in\n    tag_316:\n        /* \"src/kipu-bank-v2.sol\":14499:14541  amount * uint256(price) * 10**USD_DECIMALS */\n      tag_317\n      swap2\n      swap1\n      tag_314\n      jump\t// in\n    tag_317:\n        /* \"src/kipu-bank-v2.sol\":14498:14605  (amount * uint256(price) * 10**USD_DECIMALS) / ... */\n      tag_318\n      swap2\n      swap1\n      tag_319\n      jump\t// in\n    tag_318:\n        /* \"src/kipu-bank-v2.sol\":14491:14605  return (amount * uint256(price) * 10**USD_DECIMALS) / ... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/kipu-bank-v2.sol\":13883:14613  function _getUSDValue(address token, uint256 amount) private view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/kipu-bank-v2.sol\":15437:16132  function _getTotalDepositsUSD() private view returns (uint256) {... */\n    tag_166:\n        /* \"src/kipu-bank-v2.sol\":15491:15498  uint256 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":15511:15527  uint256 totalUSD */\n      dup1\n        /* \"src/kipu-bank-v2.sol\":15530:15531  0 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":15511:15531  uint256 totalUSD = 0 */\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":15557:15566  uint256 i */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":15552:16089  for (uint256 i = 0; i < s_supportedTokens.length; i++) {... */\n    tag_321:\n        /* \"src/kipu-bank-v2.sol\":15576:15593  s_supportedTokens */\n      0x05\n        /* \"src/kipu-bank-v2.sol\":15576:15600  s_supportedTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":15572:15573  i */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":15572:15600  i < s_supportedTokens.length */\n      lt\n        /* \"src/kipu-bank-v2.sol\":15552:16089  for (uint256 i = 0; i < s_supportedTokens.length; i++) {... */\n      iszero\n      tag_322\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":15622:15635  address token */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":15638:15655  s_supportedTokens */\n      0x05\n        /* \"src/kipu-bank-v2.sol\":15656:15657  i */\n      dup3\n        /* \"src/kipu-bank-v2.sol\":15638:15658  s_supportedTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_324\n      jumpi\n      tag_325\n      tag_208\n      jump\t// in\n    tag_325:\n    tag_324:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/kipu-bank-v2.sol\":15622:15658  address token = s_supportedTokens[i] */\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":15673:15697  uint256 normalizedAmount */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":15700:15715  s_totalDeposits */\n      0x03\n        /* \"src/kipu-bank-v2.sol\":15700:15722  s_totalDeposits[token] */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":15716:15721  token */\n      dup4\n        /* \"src/kipu-bank-v2.sol\":15700:15722  s_totalDeposits[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/kipu-bank-v2.sol\":15673:15722  uint256 normalizedAmount = s_totalDeposits[token] */\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":15785:15786  0 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":15766:15782  normalizedAmount */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":15766:15786  normalizedAmount > 0 */\n      gt\n        /* \"src/kipu-bank-v2.sol\":15762:16078  if (normalizedAmount > 0) {... */\n      iszero\n      tag_327\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":15874:15894  uint256 nativeAmount */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":15897:15942  _denormalizeFromUSDC(token, normalizedAmount) */\n      tag_328\n        /* \"src/kipu-bank-v2.sol\":15918:15923  token */\n      dup4\n        /* \"src/kipu-bank-v2.sol\":15925:15941  normalizedAmount */\n      dup4\n        /* \"src/kipu-bank-v2.sol\":15897:15917  _denormalizeFromUSDC */\n      tag_187\n        /* \"src/kipu-bank-v2.sol\":15897:15942  _denormalizeFromUSDC(token, normalizedAmount) */\n      jump\t// in\n    tag_328:\n        /* \"src/kipu-bank-v2.sol\":15874:15942  uint256 nativeAmount = _denormalizeFromUSDC(token, normalizedAmount) */\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":16029:16062  _getUSDValue(token, nativeAmount) */\n      tag_329\n        /* \"src/kipu-bank-v2.sol\":16042:16047  token */\n      dup4\n        /* \"src/kipu-bank-v2.sol\":16049:16061  nativeAmount */\n      dup3\n        /* \"src/kipu-bank-v2.sol\":16029:16041  _getUSDValue */\n      tag_164\n        /* \"src/kipu-bank-v2.sol\":16029:16062  _getUSDValue(token, nativeAmount) */\n      jump\t// in\n    tag_329:\n        /* \"src/kipu-bank-v2.sol\":16017:16062  totalUSD += _getUSDValue(token, nativeAmount) */\n      dup6\n      tag_330\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_330:\n      swap5\n      pop\n        /* \"src/kipu-bank-v2.sol\":15788:16078  {... */\n      pop\n        /* \"src/kipu-bank-v2.sol\":15762:16078  if (normalizedAmount > 0) {... */\n    tag_327:\n        /* \"src/kipu-bank-v2.sol\":15607:16089  {... */\n      pop\n      pop\n        /* \"src/kipu-bank-v2.sol\":15602:15605  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"src/kipu-bank-v2.sol\":15552:16089  for (uint256 i = 0; i < s_supportedTokens.length; i++) {... */\n      jump(tag_321)\n    tag_322:\n      pop\n        /* \"src/kipu-bank-v2.sol\":16116:16124  totalUSD */\n      dup1\n        /* \"src/kipu-bank-v2.sol\":16109:16124  return totalUSD */\n      swap2\n      pop\n      pop\n        /* \"src/kipu-bank-v2.sol\":15437:16132  function _getTotalDepositsUSD() private view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"src/kipu-bank-v2.sol\":14864:15332  function _normalizeToUSDC(address token, uint256 amount) private view returns (uint256) {... */\n    tag_175:\n        /* \"src/kipu-bank-v2.sol\":14943:14950  uint256 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":14963:14982  uint8 tokenDecimals */\n      dup1\n        /* \"src/kipu-bank-v2.sol\":1899:1900  0 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":14985:15004  token == NATIVE_ETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/kipu-bank-v2.sol\":14985:14990  token */\n      dup5\n        /* \"src/kipu-bank-v2.sol\":14985:15004  token == NATIVE_ETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/kipu-bank-v2.sol\":14985:15044  token == NATIVE_ETH ? 18 : IERC20Metadata(token).decimals() */\n      tag_332\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":15027:15032  token */\n      dup4\n        /* \"src/kipu-bank-v2.sol\":15012:15042  IERC20Metadata(token).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"src/kipu-bank-v2.sol\":15012:15044  IERC20Metadata(token).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_334\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_334:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_335\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_335:\n        /* \"src/kipu-bank-v2.sol\":14985:15044  token == NATIVE_ETH ? 18 : IERC20Metadata(token).decimals() */\n      jump(tag_336)\n    tag_332:\n        /* \"src/kipu-bank-v2.sol\":15007:15009  18 */\n      0x12\n        /* \"src/kipu-bank-v2.sol\":14985:15044  token == NATIVE_ETH ? 18 : IERC20Metadata(token).decimals() */\n    tag_336:\n        /* \"src/kipu-bank-v2.sol\":14963:15044  uint8 tokenDecimals = token == NATIVE_ETH ? 18 : IERC20Metadata(token).decimals() */\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":1596:1597  6 */\n      0x06\n        /* \"src/kipu-bank-v2.sol\":15069:15098  tokenDecimals > USDC_DECIMALS */\n      0xff\n      and\n        /* \"src/kipu-bank-v2.sol\":15069:15082  tokenDecimals */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":15069:15098  tokenDecimals > USDC_DECIMALS */\n      0xff\n      and\n      gt\n        /* \"src/kipu-bank-v2.sol\":15065:15301  if (tokenDecimals > USDC_DECIMALS) {... */\n      iszero\n      tag_337\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":1596:1597  6 */\n      0x06\n        /* \"src/kipu-bank-v2.sol\":15137:15150  tokenDecimals */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":15137:15166  tokenDecimals - USDC_DECIMALS */\n      tag_338\n      swap2\n      swap1\n      tag_339\n      jump\t// in\n    tag_338:\n        /* \"src/kipu-bank-v2.sol\":15132:15134  10 */\n      0x0a\n        /* \"src/kipu-bank-v2.sol\":15132:15167  10**(tokenDecimals - USDC_DECIMALS) */\n      tag_340\n      swap2\n      swap1\n      tag_311\n      jump\t// in\n    tag_340:\n        /* \"src/kipu-bank-v2.sol\":15122:15128  amount */\n      dup4\n        /* \"src/kipu-bank-v2.sol\":15122:15168  amount / (10**(tokenDecimals - USDC_DECIMALS)) */\n      tag_341\n      swap2\n      swap1\n      tag_319\n      jump\t// in\n    tag_341:\n        /* \"src/kipu-bank-v2.sol\":15115:15168  return amount / (10**(tokenDecimals - USDC_DECIMALS)) */\n      swap2\n      pop\n      pop\n      jump(tag_331)\n        /* \"src/kipu-bank-v2.sol\":15065:15301  if (tokenDecimals > USDC_DECIMALS) {... */\n    tag_337:\n        /* \"src/kipu-bank-v2.sol\":1596:1597  6 */\n      0x06\n        /* \"src/kipu-bank-v2.sol\":15190:15219  tokenDecimals < USDC_DECIMALS */\n      0xff\n      and\n        /* \"src/kipu-bank-v2.sol\":15190:15203  tokenDecimals */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":15190:15219  tokenDecimals < USDC_DECIMALS */\n      0xff\n      and\n      lt\n        /* \"src/kipu-bank-v2.sol\":15186:15301  if (tokenDecimals < USDC_DECIMALS) {... */\n      iszero\n      tag_343\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":15274:15287  tokenDecimals */\n      dup1\n        /* \"src/kipu-bank-v2.sol\":1596:1597  6 */\n      0x06\n        /* \"src/kipu-bank-v2.sol\":15258:15287  USDC_DECIMALS - tokenDecimals */\n      tag_344\n      swap2\n      swap1\n      tag_339\n      jump\t// in\n    tag_344:\n        /* \"src/kipu-bank-v2.sol\":15253:15255  10 */\n      0x0a\n        /* \"src/kipu-bank-v2.sol\":15253:15288  10**(USDC_DECIMALS - tokenDecimals) */\n      tag_345\n      swap2\n      swap1\n      tag_311\n      jump\t// in\n    tag_345:\n        /* \"src/kipu-bank-v2.sol\":15243:15249  amount */\n      dup4\n        /* \"src/kipu-bank-v2.sol\":15243:15289  amount * (10**(USDC_DECIMALS - tokenDecimals)) */\n      tag_346\n      swap2\n      swap1\n      tag_314\n      jump\t// in\n    tag_346:\n        /* \"src/kipu-bank-v2.sol\":15236:15289  return amount * (10**(USDC_DECIMALS - tokenDecimals)) */\n      swap2\n      pop\n      pop\n      jump(tag_331)\n        /* \"src/kipu-bank-v2.sol\":15186:15301  if (tokenDecimals < USDC_DECIMALS) {... */\n    tag_343:\n        /* \"src/kipu-bank-v2.sol\":15318:15324  amount */\n      dup3\n        /* \"src/kipu-bank-v2.sol\":15311:15324  return amount */\n      swap2\n      pop\n      pop\n        /* \"src/kipu-bank-v2.sol\":14864:15332  function _normalizeToUSDC(address token, uint256 amount) private view returns (uint256) {... */\n    tag_331:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":806:810  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":844:869  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:840  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":822:869  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/kipu-bank-v2.sol\":16381:16929  function _denormalizeFromUSDC(address token, uint256 normalizedAmount) ... */\n    tag_187:\n        /* \"src/kipu-bank-v2.sol\":16504:16511  uint256 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":16530:16549  uint8 tokenDecimals */\n      dup1\n        /* \"src/kipu-bank-v2.sol\":1899:1900  0 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":16552:16571  token == NATIVE_ETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/kipu-bank-v2.sol\":16552:16557  token */\n      dup5\n        /* \"src/kipu-bank-v2.sol\":16552:16571  token == NATIVE_ETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/kipu-bank-v2.sol\":16552:16611  token == NATIVE_ETH ? 18 : IERC20Metadata(token).decimals() */\n      tag_349\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":16594:16599  token */\n      dup4\n        /* \"src/kipu-bank-v2.sol\":16579:16609  IERC20Metadata(token).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"src/kipu-bank-v2.sol\":16579:16611  IERC20Metadata(token).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_351\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_351:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_352\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_352:\n        /* \"src/kipu-bank-v2.sol\":16552:16611  token == NATIVE_ETH ? 18 : IERC20Metadata(token).decimals() */\n      jump(tag_353)\n    tag_349:\n        /* \"src/kipu-bank-v2.sol\":16574:16576  18 */\n      0x12\n        /* \"src/kipu-bank-v2.sol\":16552:16611  token == NATIVE_ETH ? 18 : IERC20Metadata(token).decimals() */\n    tag_353:\n        /* \"src/kipu-bank-v2.sol\":16530:16611  uint8 tokenDecimals = token == NATIVE_ETH ? 18 : IERC20Metadata(token).decimals() */\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":1596:1597  6 */\n      0x06\n        /* \"src/kipu-bank-v2.sol\":16636:16665  tokenDecimals > USDC_DECIMALS */\n      0xff\n      and\n        /* \"src/kipu-bank-v2.sol\":16636:16649  tokenDecimals */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":16636:16665  tokenDecimals > USDC_DECIMALS */\n      0xff\n      and\n      gt\n        /* \"src/kipu-bank-v2.sol\":16632:16888  if (tokenDecimals > USDC_DECIMALS) {... */\n      iszero\n      tag_354\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":1596:1597  6 */\n      0x06\n        /* \"src/kipu-bank-v2.sol\":16714:16727  tokenDecimals */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":16714:16743  tokenDecimals - USDC_DECIMALS */\n      tag_355\n      swap2\n      swap1\n      tag_339\n      jump\t// in\n    tag_355:\n        /* \"src/kipu-bank-v2.sol\":16709:16711  10 */\n      0x0a\n        /* \"src/kipu-bank-v2.sol\":16709:16744  10**(tokenDecimals - USDC_DECIMALS) */\n      tag_356\n      swap2\n      swap1\n      tag_311\n      jump\t// in\n    tag_356:\n        /* \"src/kipu-bank-v2.sol\":16689:16705  normalizedAmount */\n      dup4\n        /* \"src/kipu-bank-v2.sol\":16689:16745  normalizedAmount * (10**(tokenDecimals - USDC_DECIMALS)) */\n      tag_357\n      swap2\n      swap1\n      tag_314\n      jump\t// in\n    tag_357:\n        /* \"src/kipu-bank-v2.sol\":16682:16745  return normalizedAmount * (10**(tokenDecimals - USDC_DECIMALS)) */\n      swap2\n      pop\n      pop\n      jump(tag_348)\n        /* \"src/kipu-bank-v2.sol\":16632:16888  if (tokenDecimals > USDC_DECIMALS) {... */\n    tag_354:\n        /* \"src/kipu-bank-v2.sol\":1596:1597  6 */\n      0x06\n        /* \"src/kipu-bank-v2.sol\":16767:16796  tokenDecimals < USDC_DECIMALS */\n      0xff\n      and\n        /* \"src/kipu-bank-v2.sol\":16767:16780  tokenDecimals */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":16767:16796  tokenDecimals < USDC_DECIMALS */\n      0xff\n      and\n      lt\n        /* \"src/kipu-bank-v2.sol\":16763:16888  if (tokenDecimals < USDC_DECIMALS) {... */\n      iszero\n      tag_359\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":16861:16874  tokenDecimals */\n      dup1\n        /* \"src/kipu-bank-v2.sol\":1596:1597  6 */\n      0x06\n        /* \"src/kipu-bank-v2.sol\":16845:16874  USDC_DECIMALS - tokenDecimals */\n      tag_360\n      swap2\n      swap1\n      tag_339\n      jump\t// in\n    tag_360:\n        /* \"src/kipu-bank-v2.sol\":16840:16842  10 */\n      0x0a\n        /* \"src/kipu-bank-v2.sol\":16840:16875  10**(USDC_DECIMALS - tokenDecimals) */\n      tag_361\n      swap2\n      swap1\n      tag_311\n      jump\t// in\n    tag_361:\n        /* \"src/kipu-bank-v2.sol\":16820:16836  normalizedAmount */\n      dup4\n        /* \"src/kipu-bank-v2.sol\":16820:16876  normalizedAmount / (10**(USDC_DECIMALS - tokenDecimals)) */\n      tag_362\n      swap2\n      swap1\n      tag_319\n      jump\t// in\n    tag_362:\n        /* \"src/kipu-bank-v2.sol\":16813:16876  return normalizedAmount / (10**(USDC_DECIMALS - tokenDecimals)) */\n      swap2\n      pop\n      pop\n      jump(tag_348)\n        /* \"src/kipu-bank-v2.sol\":16763:16888  if (tokenDecimals < USDC_DECIMALS) {... */\n    tag_359:\n        /* \"src/kipu-bank-v2.sol\":16905:16921  normalizedAmount */\n      dup3\n        /* \"src/kipu-bank-v2.sol\":16898:16921  return normalizedAmount */\n      swap2\n      pop\n      pop\n        /* \"src/kipu-bank-v2.sol\":16381:16929  function _denormalizeFromUSDC(address token, uint256 normalizedAmount) ... */\n    tag_348:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      tag_364\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3252:3256  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      tag_365\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3268  _msgSender */\n      tag_244\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      jump\t// in\n    tag_365:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3251  _checkRole */\n      tag_366\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_364:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      tag_368\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n      tag_114\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      jump\t// in\n    tag_368:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n      tag_369\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      tag_370\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n      tag_244\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      jump\t// in\n    tag_370:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n      swap1\n      pop\n      jump(tag_367)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n    tag_369:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_367:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2709  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2720  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n      tag_373\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2743:2773  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      0x3ee5aeb500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n    tag_373:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2865  _status */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2875  _status = ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_375\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_376\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_377\n      jump\t// in\n    tag_376:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_378\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_375:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3075  _status */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6786:6790  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      tag_382\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6814:6818  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6820:6827  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6813  hasRole */\n      tag_114\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      jump\t// in\n    tag_382:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n      iszero\n      tag_383\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6876:6881  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6850  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6851:6855  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6864  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6865:6872  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6881  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      tag_384\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6937  _msgSender */\n      tag_244\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      jump\t// in\n    tag_384:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6918:6925  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6912:6916  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6961:6965  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6954:6965  return true */\n      swap1\n      pop\n      jump(tag_381)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n    tag_383:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7003:7008  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6996:7008  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_381:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/kipu-bank-v2.sol\":12256:13419  function _withdraw(address token, uint256 amount) private {... */\n    tag_268:\n        /* \"src/kipu-bank-v2.sol\":12344:12368  uint256 normalizedAmount */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":12371:12402  _normalizeToUSDC(token, amount) */\n      tag_387\n        /* \"src/kipu-bank-v2.sol\":12388:12393  token */\n      dup4\n        /* \"src/kipu-bank-v2.sol\":12395:12401  amount */\n      dup4\n        /* \"src/kipu-bank-v2.sol\":12371:12387  _normalizeToUSDC */\n      tag_175\n        /* \"src/kipu-bank-v2.sol\":12371:12402  _normalizeToUSDC(token, amount) */\n      jump\t// in\n    tag_387:\n        /* \"src/kipu-bank-v2.sol\":12344:12402  uint256 normalizedAmount = _normalizeToUSDC(token, amount) */\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":12413:12432  uint256 userBalance */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":12435:12445  s_deposits */\n      0x02\n        /* \"src/kipu-bank-v2.sol\":12435:12457  s_deposits[msg.sender] */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":12446:12456  msg.sender */\n      caller\n        /* \"src/kipu-bank-v2.sol\":12435:12457  s_deposits[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/kipu-bank-v2.sol\":12435:12464  s_deposits[msg.sender][token] */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":12458:12463  token */\n      dup6\n        /* \"src/kipu-bank-v2.sol\":12435:12464  s_deposits[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/kipu-bank-v2.sol\":12413:12464  uint256 userBalance = s_deposits[msg.sender][token] */\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":12508:12519  userBalance */\n      dup1\n        /* \"src/kipu-bank-v2.sol\":12489:12505  normalizedAmount */\n      dup3\n        /* \"src/kipu-bank-v2.sol\":12489:12519  normalizedAmount > userBalance */\n      gt\n        /* \"src/kipu-bank-v2.sol\":12485:12615  if (normalizedAmount > userBalance) {... */\n      iszero\n      tag_388\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":12573:12589  normalizedAmount */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":12591:12602  userBalance */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":12543:12603  KipuBank__InsufficientBalance(normalizedAmount, userBalance) */\n      mload(0x40)\n      0x61965c4e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_389\n      swap3\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_389:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/kipu-bank-v2.sol\":12485:12615  if (normalizedAmount > userBalance) {... */\n    tag_388:\n        /* \"src/kipu-bank-v2.sol\":12627:12643  uint256 usdValue */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":12646:12673  _getUSDValue(token, amount) */\n      tag_390\n        /* \"src/kipu-bank-v2.sol\":12659:12664  token */\n      dup6\n        /* \"src/kipu-bank-v2.sol\":12666:12672  amount */\n      dup6\n        /* \"src/kipu-bank-v2.sol\":12646:12658  _getUSDValue */\n      tag_164\n        /* \"src/kipu-bank-v2.sol\":12646:12673  _getUSDValue(token, amount) */\n      jump\t// in\n    tag_390:\n        /* \"src/kipu-bank-v2.sol\":12627:12673  uint256 usdValue = _getUSDValue(token, amount) */\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":12710:12734  i_withdrawalThresholdUSD */\n      immutable(\"0xf586532c52cafa07782ab6085737addf284f0cc1dede3aa9b2bdba9d5551b7a5\")\n        /* \"src/kipu-bank-v2.sol\":12699:12707  usdValue */\n      dup2\n        /* \"src/kipu-bank-v2.sol\":12699:12734  usdValue > i_withdrawalThresholdUSD */\n      gt\n        /* \"src/kipu-bank-v2.sol\":12695:12892  if (usdValue > i_withdrawalThresholdUSD) {... */\n      iszero\n      tag_391\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":12814:12822  usdValue */\n      dup1\n        /* \"src/kipu-bank-v2.sol\":12841:12865  i_withdrawalThresholdUSD */\n      immutable(\"0xf586532c52cafa07782ab6085737addf284f0cc1dede3aa9b2bdba9d5551b7a5\")\n        /* \"src/kipu-bank-v2.sol\":12758:12880  KipuBank__WithdrawalThresholdExceeded(... */\n      mload(0x40)\n      0x2d05fcba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_392\n      swap3\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_392:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/kipu-bank-v2.sol\":12695:12892  if (usdValue > i_withdrawalThresholdUSD) {... */\n    tag_391:\n        /* \"src/kipu-bank-v2.sol\":12957:12973  normalizedAmount */\n      dup3\n        /* \"src/kipu-bank-v2.sol\":12924:12934  s_deposits */\n      0x02\n        /* \"src/kipu-bank-v2.sol\":12924:12946  s_deposits[msg.sender] */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":12935:12945  msg.sender */\n      caller\n        /* \"src/kipu-bank-v2.sol\":12924:12946  s_deposits[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/kipu-bank-v2.sol\":12924:12953  s_deposits[msg.sender][token] */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":12947:12952  token */\n      dup8\n        /* \"src/kipu-bank-v2.sol\":12924:12953  s_deposits[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/kipu-bank-v2.sol\":12924:12973  s_deposits[msg.sender][token] -= normalizedAmount */\n      dup3\n      dup3\n      sload\n      tag_393\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_393:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/kipu-bank-v2.sol\":13010:13026  normalizedAmount */\n      dup3\n        /* \"src/kipu-bank-v2.sol\":12984:12999  s_totalDeposits */\n      0x03\n        /* \"src/kipu-bank-v2.sol\":12984:13006  s_totalDeposits[token] */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":13000:13005  token */\n      dup8\n        /* \"src/kipu-bank-v2.sol\":12984:13006  s_totalDeposits[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/kipu-bank-v2.sol\":12984:13026  s_totalDeposits[token] -= normalizedAmount */\n      dup3\n      dup3\n      sload\n      tag_394\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_394:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/kipu-bank-v2.sol\":13037:13054  s_withdrawalCount */\n      0x07\n      0x00\n        /* \"src/kipu-bank-v2.sol\":13037:13056  s_withdrawalCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_395\n      swap1\n      tag_179\n      jump\t// in\n    tag_395:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"src/kipu-bank-v2.sol\":1899:1900  0 */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":13098:13117  token == NATIVE_ETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/kipu-bank-v2.sol\":13098:13103  token */\n      dup6\n        /* \"src/kipu-bank-v2.sol\":13098:13117  token == NATIVE_ETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/kipu-bank-v2.sol\":13094:13343  if (token == NATIVE_ETH) {... */\n      tag_396\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":13135:13147  bool success */\n      0x00\n        /* \"src/kipu-bank-v2.sol\":13153:13163  msg.sender */\n      caller\n        /* \"src/kipu-bank-v2.sol\":13153:13168  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/kipu-bank-v2.sol\":13176:13182  amount */\n      dup6\n        /* \"src/kipu-bank-v2.sol\":13153:13187  msg.sender.call{value: amount}(\"\") */\n      mload(0x40)\n      tag_397\n      swap1\n      tag_398\n      jump\t// in\n    tag_397:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_401\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_400)\n    tag_401:\n      0x60\n      swap2\n      pop\n    tag_400:\n      pop\n        /* \"src/kipu-bank-v2.sol\":13134:13187  (bool success, ) = msg.sender.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"src/kipu-bank-v2.sol\":13207:13214  success */\n      dup1\n        /* \"src/kipu-bank-v2.sol\":13202:13252  if (!success) revert KipuBank__ETHTransferFailed() */\n      tag_402\n      jumpi\n        /* \"src/kipu-bank-v2.sol\":13223:13252  KipuBank__ETHTransferFailed() */\n      mload(0x40)\n      0xe35d8600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/kipu-bank-v2.sol\":13202:13252  if (!success) revert KipuBank__ETHTransferFailed() */\n    tag_402:\n        /* \"src/kipu-bank-v2.sol\":13119:13264  {... */\n      pop\n        /* \"src/kipu-bank-v2.sol\":13094:13343  if (token == NATIVE_ETH) {... */\n      jump(tag_403)\n    tag_396:\n        /* \"src/kipu-bank-v2.sol\":13285:13331  IERC20(token).safeTransfer(msg.sender, amount) */\n      tag_404\n        /* \"src/kipu-bank-v2.sol\":13312:13322  msg.sender */\n      caller\n        /* \"src/kipu-bank-v2.sol\":13324:13330  amount */\n      dup6\n        /* \"src/kipu-bank-v2.sol\":13292:13297  token */\n      dup8\n        /* \"src/kipu-bank-v2.sol\":13285:13311  IERC20(token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_405\n      swap1\n        /* \"src/kipu-bank-v2.sol\":13285:13331  IERC20(token).safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_404:\n        /* \"src/kipu-bank-v2.sol\":13094:13343  if (token == NATIVE_ETH) {... */\n    tag_403:\n        /* \"src/kipu-bank-v2.sol\":13387:13392  token */\n      dup5\n        /* \"src/kipu-bank-v2.sol\":13360:13411  WithdrawalMade(msg.sender, token, amount, usdValue) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/kipu-bank-v2.sol\":13375:13385  msg.sender */\n      caller\n        /* \"src/kipu-bank-v2.sol\":13360:13411  WithdrawalMade(msg.sender, token, amount, usdValue) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xde1d532173c6de1e3937c7af1cb92745c738980729f53ac451a725f929f3b798\n        /* \"src/kipu-bank-v2.sol\":13394:13400  amount */\n      dup7\n        /* \"src/kipu-bank-v2.sol\":13402:13410  usdValue */\n      dup5\n        /* \"src/kipu-bank-v2.sol\":13360:13411  WithdrawalMade(msg.sender, token, amount, usdValue) */\n      mload(0x40)\n      tag_406\n      swap3\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_406:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/kipu-bank-v2.sol\":12314:13419  {... */\n      pop\n      pop\n      pop\n        /* \"src/kipu-bank-v2.sol\":12256:13419  function _withdraw(address token, uint256 amount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_366:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      tag_408\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3504:3508  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3510:3517  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3503  hasRole */\n      tag_114\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      jump\t// in\n    tag_408:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_409\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3574:3581  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3583:3587  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_410\n      swap3\n      swap2\n      swap1\n      tag_411\n      jump\t// in\n    tag_410:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_409:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_378:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_413\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_413:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_414\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_415)\n    tag_414:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_415:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_416\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_417\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_417:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_416:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_405:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_419\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_420\n      swap3\n      swap2\n      swap1\n      tag_421\n      jump\t// in\n    tag_420:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_378\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_419:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_423:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_425:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_426:\n        /* \"#utility.yul\":561:584   */\n      tag_478\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_425\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_479\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_479:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_427:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_481\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_426\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_43:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_484\n      tag_423\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":833:952   */\n    tag_483:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_485\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_427\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_428:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_429:\n        /* \"#utility.yul\":1268:1289   */\n      tag_488\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_428\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_46:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_490\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_429\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1644   */\n    tag_430:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1595:1637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1588:1593   */\n      dup3\n        /* \"#utility.yul\":1584:1638   */\n      and\n        /* \"#utility.yul\":1573:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1650:1746   */\n    tag_431:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1716:1740   */\n      tag_493\n        /* \"#utility.yul\":1734:1739   */\n      dup3\n        /* \"#utility.yul\":1716:1740   */\n      tag_430\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":1705:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1650:1746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1752:1874   */\n    tag_432:\n        /* \"#utility.yul\":1825:1849   */\n      tag_495\n        /* \"#utility.yul\":1843:1848   */\n      dup2\n        /* \"#utility.yul\":1825:1849   */\n      tag_431\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":1818:1823   */\n      dup2\n        /* \"#utility.yul\":1815:1850   */\n      eq\n        /* \"#utility.yul\":1805:1868   */\n      tag_496\n      jumpi\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1861:1862   */\n      dup1\n        /* \"#utility.yul\":1854:1866   */\n      revert\n        /* \"#utility.yul\":1805:1868   */\n    tag_496:\n        /* \"#utility.yul\":1752:1874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2019   */\n    tag_433:\n        /* \"#utility.yul\":1926:1931   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1951:1971   */\n      calldataload\n        /* \"#utility.yul\":1942:1971   */\n      swap1\n      pop\n        /* \"#utility.yul\":1980:2013   */\n      tag_498\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1980:2013   */\n      tag_432\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":1880:2019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2025:2354   */\n    tag_50:\n        /* \"#utility.yul\":2084:2090   */\n      0x00\n        /* \"#utility.yul\":2133:2135   */\n      0x20\n        /* \"#utility.yul\":2121:2130   */\n      dup3\n        /* \"#utility.yul\":2112:2119   */\n      dup5\n        /* \"#utility.yul\":2108:2131   */\n      sub\n        /* \"#utility.yul\":2104:2136   */\n      slt\n        /* \"#utility.yul\":2101:2220   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":2139:2218   */\n      tag_501\n      tag_423\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":2101:2220   */\n    tag_500:\n        /* \"#utility.yul\":2259:2260   */\n      0x00\n        /* \"#utility.yul\":2284:2337   */\n      tag_502\n        /* \"#utility.yul\":2329:2336   */\n      dup5\n        /* \"#utility.yul\":2320:2326   */\n      dup3\n        /* \"#utility.yul\":2309:2318   */\n      dup6\n        /* \"#utility.yul\":2305:2327   */\n      add\n        /* \"#utility.yul\":2284:2337   */\n      tag_433\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":2274:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2230:2347   */\n      pop\n        /* \"#utility.yul\":2025:2354   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2360:2437   */\n    tag_434:\n        /* \"#utility.yul\":2397:2404   */\n      0x00\n        /* \"#utility.yul\":2426:2431   */\n      dup2\n        /* \"#utility.yul\":2415:2431   */\n      swap1\n      pop\n        /* \"#utility.yul\":2360:2437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2443:2561   */\n    tag_435:\n        /* \"#utility.yul\":2530:2554   */\n      tag_505\n        /* \"#utility.yul\":2548:2553   */\n      dup2\n        /* \"#utility.yul\":2530:2554   */\n      tag_434\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":2525:2528   */\n      dup3\n        /* \"#utility.yul\":2518:2555   */\n      mstore\n        /* \"#utility.yul\":2443:2561   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2567:2789   */\n    tag_53:\n        /* \"#utility.yul\":2660:2664   */\n      0x00\n        /* \"#utility.yul\":2698:2700   */\n      0x20\n        /* \"#utility.yul\":2687:2696   */\n      dup3\n        /* \"#utility.yul\":2683:2701   */\n      add\n        /* \"#utility.yul\":2675:2701   */\n      swap1\n      pop\n        /* \"#utility.yul\":2711:2782   */\n      tag_507\n        /* \"#utility.yul\":2779:2780   */\n      0x00\n        /* \"#utility.yul\":2768:2777   */\n      dup4\n        /* \"#utility.yul\":2764:2781   */\n      add\n        /* \"#utility.yul\":2755:2761   */\n      dup5\n        /* \"#utility.yul\":2711:2782   */\n      tag_435\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":2567:2789   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2872   */\n    tag_436:\n        /* \"#utility.yul\":2832:2839   */\n      0x00\n        /* \"#utility.yul\":2861:2866   */\n      dup2\n        /* \"#utility.yul\":2850:2866   */\n      swap1\n      pop\n        /* \"#utility.yul\":2795:2872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2878:3000   */\n    tag_437:\n        /* \"#utility.yul\":2951:2975   */\n      tag_510\n        /* \"#utility.yul\":2969:2974   */\n      dup2\n        /* \"#utility.yul\":2951:2975   */\n      tag_436\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":2944:2949   */\n      dup2\n        /* \"#utility.yul\":2941:2976   */\n      eq\n        /* \"#utility.yul\":2931:2994   */\n      tag_511\n      jumpi\n        /* \"#utility.yul\":2990:2991   */\n      0x00\n        /* \"#utility.yul\":2987:2988   */\n      dup1\n        /* \"#utility.yul\":2980:2992   */\n      revert\n        /* \"#utility.yul\":2931:2994   */\n    tag_511:\n        /* \"#utility.yul\":2878:3000   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3006:3145   */\n    tag_438:\n        /* \"#utility.yul\":3052:3057   */\n      0x00\n        /* \"#utility.yul\":3090:3096   */\n      dup2\n        /* \"#utility.yul\":3077:3097   */\n      calldataload\n        /* \"#utility.yul\":3068:3097   */\n      swap1\n      pop\n        /* \"#utility.yul\":3106:3139   */\n      tag_513\n        /* \"#utility.yul\":3133:3138   */\n      dup2\n        /* \"#utility.yul\":3106:3139   */\n      tag_437\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":3006:3145   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3151:3480   */\n    tag_65:\n        /* \"#utility.yul\":3210:3216   */\n      0x00\n        /* \"#utility.yul\":3259:3261   */\n      0x20\n        /* \"#utility.yul\":3247:3256   */\n      dup3\n        /* \"#utility.yul\":3238:3245   */\n      dup5\n        /* \"#utility.yul\":3234:3257   */\n      sub\n        /* \"#utility.yul\":3230:3262   */\n      slt\n        /* \"#utility.yul\":3227:3346   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":3265:3344   */\n      tag_516\n      tag_423\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":3227:3346   */\n    tag_515:\n        /* \"#utility.yul\":3385:3386   */\n      0x00\n        /* \"#utility.yul\":3410:3463   */\n      tag_517\n        /* \"#utility.yul\":3455:3462   */\n      dup5\n        /* \"#utility.yul\":3446:3452   */\n      dup3\n        /* \"#utility.yul\":3435:3444   */\n      dup6\n        /* \"#utility.yul\":3431:3453   */\n      add\n        /* \"#utility.yul\":3410:3463   */\n      tag_438\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":3400:3463   */\n      swap2\n      pop\n        /* \"#utility.yul\":3356:3473   */\n      pop\n        /* \"#utility.yul\":3151:3480   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3486:3604   */\n    tag_439:\n        /* \"#utility.yul\":3573:3597   */\n      tag_519\n        /* \"#utility.yul\":3591:3596   */\n      dup2\n        /* \"#utility.yul\":3573:3597   */\n      tag_436\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":3568:3571   */\n      dup3\n        /* \"#utility.yul\":3561:3598   */\n      mstore\n        /* \"#utility.yul\":3486:3604   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3610:3832   */\n    tag_68:\n        /* \"#utility.yul\":3703:3707   */\n      0x00\n        /* \"#utility.yul\":3741:3743   */\n      0x20\n        /* \"#utility.yul\":3730:3739   */\n      dup3\n        /* \"#utility.yul\":3726:3744   */\n      add\n        /* \"#utility.yul\":3718:3744   */\n      swap1\n      pop\n        /* \"#utility.yul\":3754:3825   */\n      tag_521\n        /* \"#utility.yul\":3822:3823   */\n      0x00\n        /* \"#utility.yul\":3811:3820   */\n      dup4\n        /* \"#utility.yul\":3807:3824   */\n      add\n        /* \"#utility.yul\":3798:3804   */\n      dup5\n        /* \"#utility.yul\":3754:3825   */\n      tag_439\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":3610:3832   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3838:4312   */\n    tag_76:\n        /* \"#utility.yul\":3906:3912   */\n      0x00\n        /* \"#utility.yul\":3914:3920   */\n      dup1\n        /* \"#utility.yul\":3963:3965   */\n      0x40\n        /* \"#utility.yul\":3951:3960   */\n      dup4\n        /* \"#utility.yul\":3942:3949   */\n      dup6\n        /* \"#utility.yul\":3938:3961   */\n      sub\n        /* \"#utility.yul\":3934:3966   */\n      slt\n        /* \"#utility.yul\":3931:4050   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":3969:4048   */\n      tag_524\n      tag_423\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":3931:4050   */\n    tag_523:\n        /* \"#utility.yul\":4089:4090   */\n      0x00\n        /* \"#utility.yul\":4114:4167   */\n      tag_525\n        /* \"#utility.yul\":4159:4166   */\n      dup6\n        /* \"#utility.yul\":4150:4156   */\n      dup3\n        /* \"#utility.yul\":4139:4148   */\n      dup7\n        /* \"#utility.yul\":4135:4157   */\n      add\n        /* \"#utility.yul\":4114:4167   */\n      tag_438\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":4104:4167   */\n      swap3\n      pop\n        /* \"#utility.yul\":4060:4177   */\n      pop\n        /* \"#utility.yul\":4216:4218   */\n      0x20\n        /* \"#utility.yul\":4242:4295   */\n      tag_526\n        /* \"#utility.yul\":4287:4294   */\n      dup6\n        /* \"#utility.yul\":4278:4284   */\n      dup3\n        /* \"#utility.yul\":4267:4276   */\n      dup7\n        /* \"#utility.yul\":4263:4285   */\n      add\n        /* \"#utility.yul\":4242:4295   */\n      tag_433\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":4232:4295   */\n      swap2\n      pop\n        /* \"#utility.yul\":4187:4305   */\n      pop\n        /* \"#utility.yul\":3838:4312   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4318:4440   */\n    tag_440:\n        /* \"#utility.yul\":4391:4415   */\n      tag_528\n        /* \"#utility.yul\":4409:4414   */\n      dup2\n        /* \"#utility.yul\":4391:4415   */\n      tag_434\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":4384:4389   */\n      dup2\n        /* \"#utility.yul\":4381:4416   */\n      eq\n        /* \"#utility.yul\":4371:4434   */\n      tag_529\n      jumpi\n        /* \"#utility.yul\":4430:4431   */\n      0x00\n        /* \"#utility.yul\":4427:4428   */\n      dup1\n        /* \"#utility.yul\":4420:4432   */\n      revert\n        /* \"#utility.yul\":4371:4434   */\n    tag_529:\n        /* \"#utility.yul\":4318:4440   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4446:4585   */\n    tag_441:\n        /* \"#utility.yul\":4492:4497   */\n      0x00\n        /* \"#utility.yul\":4530:4536   */\n      dup2\n        /* \"#utility.yul\":4517:4537   */\n      calldataload\n        /* \"#utility.yul\":4508:4537   */\n      swap1\n      pop\n        /* \"#utility.yul\":4546:4579   */\n      tag_531\n        /* \"#utility.yul\":4573:4578   */\n      dup2\n        /* \"#utility.yul\":4546:4579   */\n      tag_440\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":4446:4585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4591:5065   */\n    tag_81:\n        /* \"#utility.yul\":4659:4665   */\n      0x00\n        /* \"#utility.yul\":4667:4673   */\n      dup1\n        /* \"#utility.yul\":4716:4718   */\n      0x40\n        /* \"#utility.yul\":4704:4713   */\n      dup4\n        /* \"#utility.yul\":4695:4702   */\n      dup6\n        /* \"#utility.yul\":4691:4714   */\n      sub\n        /* \"#utility.yul\":4687:4719   */\n      slt\n        /* \"#utility.yul\":4684:4803   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":4722:4801   */\n      tag_534\n      tag_423\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":4684:4803   */\n    tag_533:\n        /* \"#utility.yul\":4842:4843   */\n      0x00\n        /* \"#utility.yul\":4867:4920   */\n      tag_535\n        /* \"#utility.yul\":4912:4919   */\n      dup6\n        /* \"#utility.yul\":4903:4909   */\n      dup3\n        /* \"#utility.yul\":4892:4901   */\n      dup7\n        /* \"#utility.yul\":4888:4910   */\n      add\n        /* \"#utility.yul\":4867:4920   */\n      tag_433\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":4857:4920   */\n      swap3\n      pop\n        /* \"#utility.yul\":4813:4930   */\n      pop\n        /* \"#utility.yul\":4969:4971   */\n      0x20\n        /* \"#utility.yul\":4995:5048   */\n      tag_536\n        /* \"#utility.yul\":5040:5047   */\n      dup6\n        /* \"#utility.yul\":5031:5037   */\n      dup3\n        /* \"#utility.yul\":5020:5029   */\n      dup7\n        /* \"#utility.yul\":5016:5038   */\n      add\n        /* \"#utility.yul\":4995:5048   */\n      tag_441\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":4985:5048   */\n      swap2\n      pop\n        /* \"#utility.yul\":4940:5058   */\n      pop\n        /* \"#utility.yul\":4591:5065   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5071:5189   */\n    tag_442:\n        /* \"#utility.yul\":5158:5182   */\n      tag_538\n        /* \"#utility.yul\":5176:5181   */\n      dup2\n        /* \"#utility.yul\":5158:5182   */\n      tag_431\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":5153:5156   */\n      dup3\n        /* \"#utility.yul\":5146:5183   */\n      mstore\n        /* \"#utility.yul\":5071:5189   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5195:5417   */\n    tag_92:\n        /* \"#utility.yul\":5288:5292   */\n      0x00\n        /* \"#utility.yul\":5326:5328   */\n      0x20\n        /* \"#utility.yul\":5315:5324   */\n      dup3\n        /* \"#utility.yul\":5311:5329   */\n      add\n        /* \"#utility.yul\":5303:5329   */\n      swap1\n      pop\n        /* \"#utility.yul\":5339:5410   */\n      tag_540\n        /* \"#utility.yul\":5407:5408   */\n      0x00\n        /* \"#utility.yul\":5396:5405   */\n      dup4\n        /* \"#utility.yul\":5392:5409   */\n      add\n        /* \"#utility.yul\":5383:5389   */\n      dup5\n        /* \"#utility.yul\":5339:5410   */\n      tag_442\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":5195:5417   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5423:5897   */\n    tag_96:\n        /* \"#utility.yul\":5491:5497   */\n      0x00\n        /* \"#utility.yul\":5499:5505   */\n      dup1\n        /* \"#utility.yul\":5548:5550   */\n      0x40\n        /* \"#utility.yul\":5536:5545   */\n      dup4\n        /* \"#utility.yul\":5527:5534   */\n      dup6\n        /* \"#utility.yul\":5523:5546   */\n      sub\n        /* \"#utility.yul\":5519:5551   */\n      slt\n        /* \"#utility.yul\":5516:5635   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":5554:5633   */\n      tag_543\n      tag_423\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":5516:5635   */\n    tag_542:\n        /* \"#utility.yul\":5674:5675   */\n      0x00\n        /* \"#utility.yul\":5699:5752   */\n      tag_544\n        /* \"#utility.yul\":5744:5751   */\n      dup6\n        /* \"#utility.yul\":5735:5741   */\n      dup3\n        /* \"#utility.yul\":5724:5733   */\n      dup7\n        /* \"#utility.yul\":5720:5742   */\n      add\n        /* \"#utility.yul\":5699:5752   */\n      tag_433\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":5689:5752   */\n      swap3\n      pop\n        /* \"#utility.yul\":5645:5762   */\n      pop\n        /* \"#utility.yul\":5801:5803   */\n      0x20\n        /* \"#utility.yul\":5827:5880   */\n      tag_545\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5863:5869   */\n      dup3\n        /* \"#utility.yul\":5852:5861   */\n      dup7\n        /* \"#utility.yul\":5848:5870   */\n      add\n        /* \"#utility.yul\":5827:5880   */\n      tag_433\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":5817:5880   */\n      swap2\n      pop\n        /* \"#utility.yul\":5772:5890   */\n      pop\n        /* \"#utility.yul\":5423:5897   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5903:6017   */\n    tag_443:\n        /* \"#utility.yul\":5970:5976   */\n      0x00\n        /* \"#utility.yul\":6004:6009   */\n      dup2\n        /* \"#utility.yul\":5998:6010   */\n      mload\n        /* \"#utility.yul\":5988:6010   */\n      swap1\n      pop\n        /* \"#utility.yul\":5903:6017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6023:6207   */\n    tag_444:\n        /* \"#utility.yul\":6122:6133   */\n      0x00\n        /* \"#utility.yul\":6156:6162   */\n      dup3\n        /* \"#utility.yul\":6151:6154   */\n      dup3\n        /* \"#utility.yul\":6144:6163   */\n      mstore\n        /* \"#utility.yul\":6196:6200   */\n      0x20\n        /* \"#utility.yul\":6191:6194   */\n      dup3\n        /* \"#utility.yul\":6187:6201   */\n      add\n        /* \"#utility.yul\":6172:6201   */\n      swap1\n      pop\n        /* \"#utility.yul\":6023:6207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6213:6345   */\n    tag_445:\n        /* \"#utility.yul\":6280:6284   */\n      0x00\n        /* \"#utility.yul\":6303:6306   */\n      dup2\n        /* \"#utility.yul\":6295:6306   */\n      swap1\n      pop\n        /* \"#utility.yul\":6333:6337   */\n      0x20\n        /* \"#utility.yul\":6328:6331   */\n      dup3\n        /* \"#utility.yul\":6324:6338   */\n      add\n        /* \"#utility.yul\":6316:6338   */\n      swap1\n      pop\n        /* \"#utility.yul\":6213:6345   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6351:6459   */\n    tag_446:\n        /* \"#utility.yul\":6428:6452   */\n      tag_550\n        /* \"#utility.yul\":6446:6451   */\n      dup2\n        /* \"#utility.yul\":6428:6452   */\n      tag_431\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":6423:6426   */\n      dup3\n        /* \"#utility.yul\":6416:6453   */\n      mstore\n        /* \"#utility.yul\":6351:6459   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6465:6644   */\n    tag_447:\n        /* \"#utility.yul\":6534:6544   */\n      0x00\n        /* \"#utility.yul\":6555:6601   */\n      tag_552\n        /* \"#utility.yul\":6597:6600   */\n      dup4\n        /* \"#utility.yul\":6589:6595   */\n      dup4\n        /* \"#utility.yul\":6555:6601   */\n      tag_446\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":6633:6637   */\n      0x20\n        /* \"#utility.yul\":6628:6631   */\n      dup4\n        /* \"#utility.yul\":6624:6638   */\n      add\n        /* \"#utility.yul\":6610:6638   */\n      swap1\n      pop\n        /* \"#utility.yul\":6465:6644   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6650:6763   */\n    tag_448:\n        /* \"#utility.yul\":6720:6724   */\n      0x00\n        /* \"#utility.yul\":6752:6756   */\n      0x20\n        /* \"#utility.yul\":6747:6750   */\n      dup3\n        /* \"#utility.yul\":6743:6757   */\n      add\n        /* \"#utility.yul\":6735:6757   */\n      swap1\n      pop\n        /* \"#utility.yul\":6650:6763   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6799:7531   */\n    tag_449:\n        /* \"#utility.yul\":6918:6921   */\n      0x00\n        /* \"#utility.yul\":6947:7001   */\n      tag_555\n        /* \"#utility.yul\":6995:7000   */\n      dup3\n        /* \"#utility.yul\":6947:7001   */\n      tag_443\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":7017:7103   */\n      tag_556\n        /* \"#utility.yul\":7096:7102   */\n      dup2\n        /* \"#utility.yul\":7091:7094   */\n      dup6\n        /* \"#utility.yul\":7017:7103   */\n      tag_444\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":7010:7103   */\n      swap4\n      pop\n        /* \"#utility.yul\":7127:7183   */\n      tag_557\n        /* \"#utility.yul\":7177:7182   */\n      dup4\n        /* \"#utility.yul\":7127:7183   */\n      tag_445\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":7206:7213   */\n      dup1\n        /* \"#utility.yul\":7237:7238   */\n      0x00\n        /* \"#utility.yul\":7222:7506   */\n    tag_558:\n        /* \"#utility.yul\":7247:7253   */\n      dup4\n        /* \"#utility.yul\":7244:7245   */\n      dup2\n        /* \"#utility.yul\":7241:7254   */\n      lt\n        /* \"#utility.yul\":7222:7506   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":7323:7329   */\n      dup2\n        /* \"#utility.yul\":7317:7330   */\n      mload\n        /* \"#utility.yul\":7350:7413   */\n      tag_561\n        /* \"#utility.yul\":7409:7412   */\n      dup9\n        /* \"#utility.yul\":7394:7407   */\n      dup3\n        /* \"#utility.yul\":7350:7413   */\n      tag_447\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":7343:7413   */\n      swap8\n      pop\n        /* \"#utility.yul\":7436:7496   */\n      tag_562\n        /* \"#utility.yul\":7489:7495   */\n      dup4\n        /* \"#utility.yul\":7436:7496   */\n      tag_448\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":7426:7496   */\n      swap3\n      pop\n        /* \"#utility.yul\":7282:7506   */\n      pop\n        /* \"#utility.yul\":7269:7270   */\n      0x01\n        /* \"#utility.yul\":7266:7267   */\n      dup2\n        /* \"#utility.yul\":7262:7271   */\n      add\n        /* \"#utility.yul\":7257:7271   */\n      swap1\n      pop\n        /* \"#utility.yul\":7222:7506   */\n      jump(tag_558)\n    tag_560:\n        /* \"#utility.yul\":7226:7240   */\n      pop\n        /* \"#utility.yul\":7522:7525   */\n      dup6\n        /* \"#utility.yul\":7515:7525   */\n      swap4\n      pop\n        /* \"#utility.yul\":6923:7531   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6799:7531   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7537:7910   */\n    tag_140:\n        /* \"#utility.yul\":7680:7684   */\n      0x00\n        /* \"#utility.yul\":7718:7720   */\n      0x20\n        /* \"#utility.yul\":7707:7716   */\n      dup3\n        /* \"#utility.yul\":7703:7721   */\n      add\n        /* \"#utility.yul\":7695:7721   */\n      swap1\n      pop\n        /* \"#utility.yul\":7767:7776   */\n      dup2\n        /* \"#utility.yul\":7761:7765   */\n      dup2\n        /* \"#utility.yul\":7757:7777   */\n      sub\n        /* \"#utility.yul\":7753:7754   */\n      0x00\n        /* \"#utility.yul\":7742:7751   */\n      dup4\n        /* \"#utility.yul\":7738:7755   */\n      add\n        /* \"#utility.yul\":7731:7778   */\n      mstore\n        /* \"#utility.yul\":7795:7903   */\n      tag_564\n        /* \"#utility.yul\":7898:7902   */\n      dup2\n        /* \"#utility.yul\":7889:7895   */\n      dup5\n        /* \"#utility.yul\":7795:7903   */\n      tag_449\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":7787:7903   */\n      swap1\n      pop\n        /* \"#utility.yul\":7537:7910   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7916:8245   */\n    tag_158:\n        /* \"#utility.yul\":7975:7981   */\n      0x00\n        /* \"#utility.yul\":8024:8026   */\n      0x20\n        /* \"#utility.yul\":8012:8021   */\n      dup3\n        /* \"#utility.yul\":8003:8010   */\n      dup5\n        /* \"#utility.yul\":7999:8022   */\n      sub\n        /* \"#utility.yul\":7995:8027   */\n      slt\n        /* \"#utility.yul\":7992:8111   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":8030:8109   */\n      tag_567\n      tag_423\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":7992:8111   */\n    tag_566:\n        /* \"#utility.yul\":8150:8151   */\n      0x00\n        /* \"#utility.yul\":8175:8228   */\n      tag_568\n        /* \"#utility.yul\":8220:8227   */\n      dup5\n        /* \"#utility.yul\":8211:8217   */\n      dup3\n        /* \"#utility.yul\":8200:8209   */\n      dup6\n        /* \"#utility.yul\":8196:8218   */\n      add\n        /* \"#utility.yul\":8175:8228   */\n      tag_441\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":8165:8228   */\n      swap2\n      pop\n        /* \"#utility.yul\":8121:8238   */\n      pop\n        /* \"#utility.yul\":7916:8245   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8251:8431   */\n    tag_450:\n        /* \"#utility.yul\":8299:8376   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8296:8297   */\n      0x00\n        /* \"#utility.yul\":8289:8377   */\n      mstore\n        /* \"#utility.yul\":8396:8400   */\n      0x11\n        /* \"#utility.yul\":8393:8394   */\n      0x04\n        /* \"#utility.yul\":8386:8401   */\n      mstore\n        /* \"#utility.yul\":8420:8424   */\n      0x24\n        /* \"#utility.yul\":8417:8418   */\n      0x00\n        /* \"#utility.yul\":8410:8425   */\n      revert\n        /* \"#utility.yul\":8437:8628   */\n    tag_168:\n        /* \"#utility.yul\":8477:8480   */\n      0x00\n        /* \"#utility.yul\":8496:8516   */\n      tag_571\n        /* \"#utility.yul\":8514:8515   */\n      dup3\n        /* \"#utility.yul\":8496:8516   */\n      tag_434\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":8491:8516   */\n      swap2\n      pop\n        /* \"#utility.yul\":8530:8550   */\n      tag_572\n        /* \"#utility.yul\":8548:8549   */\n      dup4\n        /* \"#utility.yul\":8530:8550   */\n      tag_434\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":8525:8550   */\n      swap3\n      pop\n        /* \"#utility.yul\":8573:8574   */\n      dup3\n        /* \"#utility.yul\":8570:8571   */\n      dup3\n        /* \"#utility.yul\":8566:8575   */\n      add\n        /* \"#utility.yul\":8559:8575   */\n      swap1\n      pop\n        /* \"#utility.yul\":8594:8597   */\n      dup1\n        /* \"#utility.yul\":8591:8592   */\n      dup3\n        /* \"#utility.yul\":8588:8598   */\n      gt\n        /* \"#utility.yul\":8585:8621   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":8601:8619   */\n      tag_574\n      tag_450\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":8585:8621   */\n    tag_573:\n        /* \"#utility.yul\":8437:8628   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8634:8828   */\n    tag_171:\n        /* \"#utility.yul\":8674:8678   */\n      0x00\n        /* \"#utility.yul\":8694:8714   */\n      tag_576\n        /* \"#utility.yul\":8712:8713   */\n      dup3\n        /* \"#utility.yul\":8694:8714   */\n      tag_434\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":8689:8714   */\n      swap2\n      pop\n        /* \"#utility.yul\":8728:8748   */\n      tag_577\n        /* \"#utility.yul\":8746:8747   */\n      dup4\n        /* \"#utility.yul\":8728:8748   */\n      tag_434\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":8723:8748   */\n      swap3\n      pop\n        /* \"#utility.yul\":8772:8773   */\n      dup3\n        /* \"#utility.yul\":8769:8770   */\n      dup3\n        /* \"#utility.yul\":8765:8774   */\n      sub\n        /* \"#utility.yul\":8757:8774   */\n      swap1\n      pop\n        /* \"#utility.yul\":8796:8797   */\n      dup2\n        /* \"#utility.yul\":8790:8794   */\n      dup2\n        /* \"#utility.yul\":8787:8798   */\n      gt\n        /* \"#utility.yul\":8784:8821   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":8801:8819   */\n      tag_579\n      tag_450\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":8784:8821   */\n    tag_578:\n        /* \"#utility.yul\":8634:8828   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8834:9166   */\n    tag_173:\n        /* \"#utility.yul\":8955:8959   */\n      0x00\n        /* \"#utility.yul\":8993:8995   */\n      0x40\n        /* \"#utility.yul\":8982:8991   */\n      dup3\n        /* \"#utility.yul\":8978:8996   */\n      add\n        /* \"#utility.yul\":8970:8996   */\n      swap1\n      pop\n        /* \"#utility.yul\":9006:9077   */\n      tag_581\n        /* \"#utility.yul\":9074:9075   */\n      0x00\n        /* \"#utility.yul\":9063:9072   */\n      dup4\n        /* \"#utility.yul\":9059:9076   */\n      add\n        /* \"#utility.yul\":9050:9056   */\n      dup6\n        /* \"#utility.yul\":9006:9077   */\n      tag_435\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":9087:9159   */\n      tag_582\n        /* \"#utility.yul\":9155:9157   */\n      0x20\n        /* \"#utility.yul\":9144:9153   */\n      dup4\n        /* \"#utility.yul\":9140:9158   */\n      add\n        /* \"#utility.yul\":9131:9137   */\n      dup5\n        /* \"#utility.yul\":9087:9159   */\n      tag_435\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":8834:9166   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9172:9405   */\n    tag_179:\n        /* \"#utility.yul\":9211:9214   */\n      0x00\n        /* \"#utility.yul\":9234:9258   */\n      tag_584\n        /* \"#utility.yul\":9252:9257   */\n      dup3\n        /* \"#utility.yul\":9234:9258   */\n      tag_434\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":9225:9258   */\n      swap2\n      pop\n        /* \"#utility.yul\":9280:9346   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9273:9278   */\n      dup3\n        /* \"#utility.yul\":9270:9347   */\n      sub\n        /* \"#utility.yul\":9267:9370   */\n      tag_585\n      jumpi\n        /* \"#utility.yul\":9350:9368   */\n      tag_586\n      tag_450\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":9267:9370   */\n    tag_585:\n        /* \"#utility.yul\":9397:9398   */\n      0x01\n        /* \"#utility.yul\":9390:9395   */\n      dup3\n        /* \"#utility.yul\":9386:9399   */\n      add\n        /* \"#utility.yul\":9379:9399   */\n      swap1\n      pop\n        /* \"#utility.yul\":9172:9405   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9411:9496   */\n    tag_451:\n        /* \"#utility.yul\":9456:9463   */\n      0x00\n        /* \"#utility.yul\":9485:9490   */\n      dup2\n        /* \"#utility.yul\":9474:9490   */\n      swap1\n      pop\n        /* \"#utility.yul\":9411:9496   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9502:9562   */\n    tag_452:\n        /* \"#utility.yul\":9530:9533   */\n      0x00\n        /* \"#utility.yul\":9551:9556   */\n      dup2\n        /* \"#utility.yul\":9544:9556   */\n      swap1\n      pop\n        /* \"#utility.yul\":9502:9562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9568:9726   */\n    tag_453:\n        /* \"#utility.yul\":9626:9635   */\n      0x00\n        /* \"#utility.yul\":9659:9720   */\n      tag_590\n        /* \"#utility.yul\":9677:9719   */\n      tag_591\n        /* \"#utility.yul\":9686:9718   */\n      tag_592\n        /* \"#utility.yul\":9712:9717   */\n      dup5\n        /* \"#utility.yul\":9686:9718   */\n      tag_451\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":9677:9719   */\n      tag_452\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":9659:9720   */\n      tag_434\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":9646:9720   */\n      swap1\n      pop\n        /* \"#utility.yul\":9568:9726   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9732:9879   */\n    tag_454:\n        /* \"#utility.yul\":9827:9872   */\n      tag_594\n        /* \"#utility.yul\":9866:9871   */\n      dup2\n        /* \"#utility.yul\":9827:9872   */\n      tag_453\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":9822:9825   */\n      dup3\n        /* \"#utility.yul\":9815:9873   */\n      mstore\n        /* \"#utility.yul\":9732:9879   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9885:10233   */\n    tag_202:\n        /* \"#utility.yul\":10014:10018   */\n      0x00\n        /* \"#utility.yul\":10052:10054   */\n      0x40\n        /* \"#utility.yul\":10041:10050   */\n      dup3\n        /* \"#utility.yul\":10037:10055   */\n      add\n        /* \"#utility.yul\":10029:10055   */\n      swap1\n      pop\n        /* \"#utility.yul\":10065:10144   */\n      tag_596\n        /* \"#utility.yul\":10141:10142   */\n      0x00\n        /* \"#utility.yul\":10130:10139   */\n      dup4\n        /* \"#utility.yul\":10126:10143   */\n      add\n        /* \"#utility.yul\":10117:10123   */\n      dup6\n        /* \"#utility.yul\":10065:10144   */\n      tag_454\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":10154:10226   */\n      tag_597\n        /* \"#utility.yul\":10222:10224   */\n      0x20\n        /* \"#utility.yul\":10211:10220   */\n      dup4\n        /* \"#utility.yul\":10207:10225   */\n      add\n        /* \"#utility.yul\":10198:10204   */\n      dup5\n        /* \"#utility.yul\":10154:10226   */\n      tag_435\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":9885:10233   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10239:10419   */\n    tag_208:\n        /* \"#utility.yul\":10287:10364   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10284:10285   */\n      0x00\n        /* \"#utility.yul\":10277:10365   */\n      mstore\n        /* \"#utility.yul\":10384:10388   */\n      0x32\n        /* \"#utility.yul\":10381:10382   */\n      0x04\n        /* \"#utility.yul\":10374:10389   */\n      mstore\n        /* \"#utility.yul\":10408:10412   */\n      0x24\n        /* \"#utility.yul\":10405:10406   */\n      0x00\n        /* \"#utility.yul\":10398:10413   */\n      revert\n        /* \"#utility.yul\":10425:10605   */\n    tag_220:\n        /* \"#utility.yul\":10473:10550   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10470:10471   */\n      0x00\n        /* \"#utility.yul\":10463:10551   */\n      mstore\n        /* \"#utility.yul\":10570:10574   */\n      0x31\n        /* \"#utility.yul\":10567:10568   */\n      0x04\n        /* \"#utility.yul\":10560:10575   */\n      mstore\n        /* \"#utility.yul\":10594:10598   */\n      0x24\n        /* \"#utility.yul\":10591:10592   */\n      0x00\n        /* \"#utility.yul\":10584:10599   */\n      revert\n        /* \"#utility.yul\":10611:10716   */\n    tag_455:\n        /* \"#utility.yul\":10647:10654   */\n      0x00\n        /* \"#utility.yul\":10687:10709   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":10680:10685   */\n      dup3\n        /* \"#utility.yul\":10676:10710   */\n      and\n        /* \"#utility.yul\":10665:10710   */\n      swap1\n      pop\n        /* \"#utility.yul\":10611:10716   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10722:10842   */\n    tag_456:\n        /* \"#utility.yul\":10794:10817   */\n      tag_602\n        /* \"#utility.yul\":10811:10816   */\n      dup2\n        /* \"#utility.yul\":10794:10817   */\n      tag_455\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":10787:10792   */\n      dup2\n        /* \"#utility.yul\":10784:10818   */\n      eq\n        /* \"#utility.yul\":10774:10836   */\n      tag_603\n      jumpi\n        /* \"#utility.yul\":10832:10833   */\n      0x00\n        /* \"#utility.yul\":10829:10830   */\n      dup1\n        /* \"#utility.yul\":10822:10834   */\n      revert\n        /* \"#utility.yul\":10774:10836   */\n    tag_603:\n        /* \"#utility.yul\":10722:10842   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10848:10989   */\n    tag_457:\n        /* \"#utility.yul\":10904:10909   */\n      0x00\n        /* \"#utility.yul\":10935:10941   */\n      dup2\n        /* \"#utility.yul\":10929:10942   */\n      mload\n        /* \"#utility.yul\":10920:10942   */\n      swap1\n      pop\n        /* \"#utility.yul\":10951:10983   */\n      tag_605\n        /* \"#utility.yul\":10977:10982   */\n      dup2\n        /* \"#utility.yul\":10951:10983   */\n      tag_456\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":10848:10989   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10995:11071   */\n    tag_458:\n        /* \"#utility.yul\":11031:11038   */\n      0x00\n        /* \"#utility.yul\":11060:11065   */\n      dup2\n        /* \"#utility.yul\":11049:11065   */\n      swap1\n      pop\n        /* \"#utility.yul\":10995:11071   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11077:11197   */\n    tag_459:\n        /* \"#utility.yul\":11149:11172   */\n      tag_608\n        /* \"#utility.yul\":11166:11171   */\n      dup2\n        /* \"#utility.yul\":11149:11172   */\n      tag_458\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":11142:11147   */\n      dup2\n        /* \"#utility.yul\":11139:11173   */\n      eq\n        /* \"#utility.yul\":11129:11191   */\n      tag_609\n      jumpi\n        /* \"#utility.yul\":11187:11188   */\n      0x00\n        /* \"#utility.yul\":11184:11185   */\n      dup1\n        /* \"#utility.yul\":11177:11189   */\n      revert\n        /* \"#utility.yul\":11129:11191   */\n    tag_609:\n        /* \"#utility.yul\":11077:11197   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11203:11344   */\n    tag_460:\n        /* \"#utility.yul\":11259:11264   */\n      0x00\n        /* \"#utility.yul\":11290:11296   */\n      dup2\n        /* \"#utility.yul\":11284:11297   */\n      mload\n        /* \"#utility.yul\":11275:11297   */\n      swap1\n      pop\n        /* \"#utility.yul\":11306:11338   */\n      tag_611\n        /* \"#utility.yul\":11332:11337   */\n      dup2\n        /* \"#utility.yul\":11306:11338   */\n      tag_459\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":11203:11344   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11350:11493   */\n    tag_461:\n        /* \"#utility.yul\":11407:11412   */\n      0x00\n        /* \"#utility.yul\":11438:11444   */\n      dup2\n        /* \"#utility.yul\":11432:11445   */\n      mload\n        /* \"#utility.yul\":11423:11445   */\n      swap1\n      pop\n        /* \"#utility.yul\":11454:11487   */\n      tag_613\n        /* \"#utility.yul\":11481:11486   */\n      dup2\n        /* \"#utility.yul\":11454:11487   */\n      tag_440\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":11350:11493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11499:12470   */\n    tag_299:\n        /* \"#utility.yul\":11602:11608   */\n      0x00\n        /* \"#utility.yul\":11610:11616   */\n      dup1\n        /* \"#utility.yul\":11618:11624   */\n      0x00\n        /* \"#utility.yul\":11626:11632   */\n      dup1\n        /* \"#utility.yul\":11634:11640   */\n      0x00\n        /* \"#utility.yul\":11683:11686   */\n      0xa0\n        /* \"#utility.yul\":11671:11680   */\n      dup7\n        /* \"#utility.yul\":11662:11669   */\n      dup9\n        /* \"#utility.yul\":11658:11681   */\n      sub\n        /* \"#utility.yul\":11654:11687   */\n      slt\n        /* \"#utility.yul\":11651:11771   */\n      iszero\n      tag_615\n      jumpi\n        /* \"#utility.yul\":11690:11769   */\n      tag_616\n      tag_423\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":11651:11771   */\n    tag_615:\n        /* \"#utility.yul\":11810:11811   */\n      0x00\n        /* \"#utility.yul\":11835:11898   */\n      tag_617\n        /* \"#utility.yul\":11890:11897   */\n      dup9\n        /* \"#utility.yul\":11881:11887   */\n      dup3\n        /* \"#utility.yul\":11870:11879   */\n      dup10\n        /* \"#utility.yul\":11866:11888   */\n      add\n        /* \"#utility.yul\":11835:11898   */\n      tag_457\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":11825:11898   */\n      swap6\n      pop\n        /* \"#utility.yul\":11781:11908   */\n      pop\n        /* \"#utility.yul\":11947:11949   */\n      0x20\n        /* \"#utility.yul\":11973:12036   */\n      tag_618\n        /* \"#utility.yul\":12028:12035   */\n      dup9\n        /* \"#utility.yul\":12019:12025   */\n      dup3\n        /* \"#utility.yul\":12008:12017   */\n      dup10\n        /* \"#utility.yul\":12004:12026   */\n      add\n        /* \"#utility.yul\":11973:12036   */\n      tag_460\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":11963:12036   */\n      swap5\n      pop\n        /* \"#utility.yul\":11918:12046   */\n      pop\n        /* \"#utility.yul\":12085:12087   */\n      0x40\n        /* \"#utility.yul\":12111:12175   */\n      tag_619\n        /* \"#utility.yul\":12167:12174   */\n      dup9\n        /* \"#utility.yul\":12158:12164   */\n      dup3\n        /* \"#utility.yul\":12147:12156   */\n      dup10\n        /* \"#utility.yul\":12143:12165   */\n      add\n        /* \"#utility.yul\":12111:12175   */\n      tag_461\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":12101:12175   */\n      swap4\n      pop\n        /* \"#utility.yul\":12056:12185   */\n      pop\n        /* \"#utility.yul\":12224:12226   */\n      0x60\n        /* \"#utility.yul\":12250:12314   */\n      tag_620\n        /* \"#utility.yul\":12306:12313   */\n      dup9\n        /* \"#utility.yul\":12297:12303   */\n      dup3\n        /* \"#utility.yul\":12286:12295   */\n      dup10\n        /* \"#utility.yul\":12282:12304   */\n      add\n        /* \"#utility.yul\":12250:12314   */\n      tag_461\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":12240:12314   */\n      swap3\n      pop\n        /* \"#utility.yul\":12195:12324   */\n      pop\n        /* \"#utility.yul\":12363:12366   */\n      0x80\n        /* \"#utility.yul\":12390:12453   */\n      tag_621\n        /* \"#utility.yul\":12445:12452   */\n      dup9\n        /* \"#utility.yul\":12436:12442   */\n      dup3\n        /* \"#utility.yul\":12425:12434   */\n      dup10\n        /* \"#utility.yul\":12421:12443   */\n      add\n        /* \"#utility.yul\":12390:12453   */\n      tag_457\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":12380:12453   */\n      swap2\n      pop\n        /* \"#utility.yul\":12334:12463   */\n      pop\n        /* \"#utility.yul\":11499:12470   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12476:12562   */\n    tag_462:\n        /* \"#utility.yul\":12511:12518   */\n      0x00\n        /* \"#utility.yul\":12551:12555   */\n      0xff\n        /* \"#utility.yul\":12544:12549   */\n      dup3\n        /* \"#utility.yul\":12540:12556   */\n      and\n        /* \"#utility.yul\":12529:12556   */\n      swap1\n      pop\n        /* \"#utility.yul\":12476:12562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12568:12686   */\n    tag_463:\n        /* \"#utility.yul\":12639:12661   */\n      tag_624\n        /* \"#utility.yul\":12655:12660   */\n      dup2\n        /* \"#utility.yul\":12639:12661   */\n      tag_462\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":12632:12637   */\n      dup2\n        /* \"#utility.yul\":12629:12662   */\n      eq\n        /* \"#utility.yul\":12619:12680   */\n      tag_625\n      jumpi\n        /* \"#utility.yul\":12676:12677   */\n      0x00\n        /* \"#utility.yul\":12673:12674   */\n      dup1\n        /* \"#utility.yul\":12666:12678   */\n      revert\n        /* \"#utility.yul\":12619:12680   */\n    tag_625:\n        /* \"#utility.yul\":12568:12686   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12692:12831   */\n    tag_464:\n        /* \"#utility.yul\":12747:12752   */\n      0x00\n        /* \"#utility.yul\":12778:12784   */\n      dup2\n        /* \"#utility.yul\":12772:12785   */\n      mload\n        /* \"#utility.yul\":12763:12785   */\n      swap1\n      pop\n        /* \"#utility.yul\":12794:12825   */\n      tag_627\n        /* \"#utility.yul\":12819:12824   */\n      dup2\n        /* \"#utility.yul\":12794:12825   */\n      tag_463\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":12692:12831   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12837:13184   */\n    tag_305:\n        /* \"#utility.yul\":12905:12911   */\n      0x00\n        /* \"#utility.yul\":12954:12956   */\n      0x20\n        /* \"#utility.yul\":12942:12951   */\n      dup3\n        /* \"#utility.yul\":12933:12940   */\n      dup5\n        /* \"#utility.yul\":12929:12952   */\n      sub\n        /* \"#utility.yul\":12925:12957   */\n      slt\n        /* \"#utility.yul\":12922:13041   */\n      iszero\n      tag_629\n      jumpi\n        /* \"#utility.yul\":12960:13039   */\n      tag_630\n      tag_423\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":12922:13041   */\n    tag_629:\n        /* \"#utility.yul\":13080:13081   */\n      0x00\n        /* \"#utility.yul\":13105:13167   */\n      tag_631\n        /* \"#utility.yul\":13159:13166   */\n      dup5\n        /* \"#utility.yul\":13150:13156   */\n      dup3\n        /* \"#utility.yul\":13139:13148   */\n      dup6\n        /* \"#utility.yul\":13135:13157   */\n      add\n        /* \"#utility.yul\":13105:13167   */\n      tag_464\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":13095:13167   */\n      swap2\n      pop\n        /* \"#utility.yul\":13051:13177   */\n      pop\n        /* \"#utility.yul\":12837:13184   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13190:13292   */\n    tag_465:\n        /* \"#utility.yul\":13232:13240   */\n      0x00\n        /* \"#utility.yul\":13279:13284   */\n      dup2\n        /* \"#utility.yul\":13276:13277   */\n      0x01\n        /* \"#utility.yul\":13272:13285   */\n      shr\n        /* \"#utility.yul\":13251:13285   */\n      swap1\n      pop\n        /* \"#utility.yul\":13190:13292   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13298:14146   */\n    tag_466:\n        /* \"#utility.yul\":13359:13364   */\n      0x00\n        /* \"#utility.yul\":13366:13370   */\n      dup1\n        /* \"#utility.yul\":13390:13396   */\n      dup3\n        /* \"#utility.yul\":13381:13396   */\n      swap2\n      pop\n        /* \"#utility.yul\":13414:13419   */\n      dup4\n        /* \"#utility.yul\":13405:13419   */\n      swap1\n      pop\n        /* \"#utility.yul\":13428:14140   */\n    tag_634:\n        /* \"#utility.yul\":13449:13450   */\n      0x01\n        /* \"#utility.yul\":13439:13447   */\n      dup6\n        /* \"#utility.yul\":13436:13451   */\n      gt\n        /* \"#utility.yul\":13428:14140   */\n      iszero\n      tag_636\n      jumpi\n        /* \"#utility.yul\":13544:13548   */\n      dup1\n        /* \"#utility.yul\":13539:13542   */\n      dup7\n        /* \"#utility.yul\":13535:13549   */\n      div\n        /* \"#utility.yul\":13529:13533   */\n      dup2\n        /* \"#utility.yul\":13526:13550   */\n      gt\n        /* \"#utility.yul\":13523:13573   */\n      iszero\n      tag_637\n      jumpi\n        /* \"#utility.yul\":13553:13571   */\n      tag_638\n      tag_450\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":13523:13573   */\n    tag_637:\n        /* \"#utility.yul\":13603:13604   */\n      0x01\n        /* \"#utility.yul\":13593:13601   */\n      dup6\n        /* \"#utility.yul\":13589:13605   */\n      and\n        /* \"#utility.yul\":13586:14037   */\n      iszero\n      tag_639\n      jumpi\n        /* \"#utility.yul\":14018:14022   */\n      dup1\n        /* \"#utility.yul\":14011:14016   */\n      dup3\n        /* \"#utility.yul\":14007:14023   */\n      mul\n        /* \"#utility.yul\":13998:14023   */\n      swap2\n      pop\n        /* \"#utility.yul\":13586:14037   */\n    tag_639:\n        /* \"#utility.yul\":14068:14072   */\n      dup1\n        /* \"#utility.yul\":14062:14066   */\n      dup2\n        /* \"#utility.yul\":14058:14073   */\n      mul\n        /* \"#utility.yul\":14050:14073   */\n      swap1\n      pop\n        /* \"#utility.yul\":14098:14130   */\n      tag_640\n        /* \"#utility.yul\":14121:14129   */\n      dup6\n        /* \"#utility.yul\":14098:14130   */\n      tag_465\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":14086:14130   */\n      swap5\n      pop\n        /* \"#utility.yul\":13428:14140   */\n      jump(tag_634)\n    tag_636:\n        /* \"#utility.yul\":13298:14146   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14152:15225   */\n    tag_467:\n        /* \"#utility.yul\":14206:14211   */\n      0x00\n        /* \"#utility.yul\":14397:14405   */\n      dup3\n        /* \"#utility.yul\":14387:14427   */\n      tag_642\n      jumpi\n        /* \"#utility.yul\":14418:14419   */\n      0x01\n        /* \"#utility.yul\":14409:14419   */\n      swap1\n      pop\n        /* \"#utility.yul\":14420:14425   */\n      jump(tag_641)\n        /* \"#utility.yul\":14387:14427   */\n    tag_642:\n        /* \"#utility.yul\":14446:14450   */\n      dup2\n        /* \"#utility.yul\":14436:14472   */\n      tag_643\n      jumpi\n        /* \"#utility.yul\":14463:14464   */\n      0x00\n        /* \"#utility.yul\":14454:14464   */\n      swap1\n      pop\n        /* \"#utility.yul\":14465:14470   */\n      jump(tag_641)\n        /* \"#utility.yul\":14436:14472   */\n    tag_643:\n        /* \"#utility.yul\":14532:14536   */\n      dup2\n        /* \"#utility.yul\":14580:14581   */\n      0x01\n        /* \"#utility.yul\":14575:14602   */\n      dup2\n      eq\n      tag_645\n      jumpi\n        /* \"#utility.yul\":14616:14617   */\n      0x02\n        /* \"#utility.yul\":14611:14802   */\n      dup2\n      eq\n      tag_646\n      jumpi\n        /* \"#utility.yul\":14525:14802   */\n      jump(tag_644)\n        /* \"#utility.yul\":14575:14602   */\n    tag_645:\n        /* \"#utility.yul\":14593:14594   */\n      0x01\n        /* \"#utility.yul\":14584:14594   */\n      swap2\n      pop\n        /* \"#utility.yul\":14595:14600   */\n      pop\n      jump(tag_641)\n        /* \"#utility.yul\":14611:14802   */\n    tag_646:\n        /* \"#utility.yul\":14656:14659   */\n      0xff\n        /* \"#utility.yul\":14646:14654   */\n      dup5\n        /* \"#utility.yul\":14643:14660   */\n      gt\n        /* \"#utility.yul\":14640:14683   */\n      iszero\n      tag_647\n      jumpi\n        /* \"#utility.yul\":14663:14681   */\n      tag_648\n      tag_450\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":14640:14683   */\n    tag_647:\n        /* \"#utility.yul\":14712:14720   */\n      dup4\n        /* \"#utility.yul\":14709:14710   */\n      0x02\n        /* \"#utility.yul\":14705:14721   */\n      exp\n        /* \"#utility.yul\":14696:14721   */\n      swap2\n      pop\n        /* \"#utility.yul\":14747:14750   */\n      dup5\n        /* \"#utility.yul\":14740:14745   */\n      dup3\n        /* \"#utility.yul\":14737:14751   */\n      gt\n        /* \"#utility.yul\":14734:14774   */\n      iszero\n      tag_649\n      jumpi\n        /* \"#utility.yul\":14754:14772   */\n      tag_650\n      tag_450\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":14734:14774   */\n    tag_649:\n        /* \"#utility.yul\":14787:14792   */\n      pop\n      jump(tag_641)\n        /* \"#utility.yul\":14525:14802   */\n    tag_644:\n      pop\n        /* \"#utility.yul\":14911:14913   */\n      0x20\n        /* \"#utility.yul\":14901:14909   */\n      dup4\n        /* \"#utility.yul\":14898:14914   */\n      lt\n        /* \"#utility.yul\":14892:14895   */\n      0x0133\n        /* \"#utility.yul\":14886:14890   */\n      dup4\n        /* \"#utility.yul\":14883:14896   */\n      lt\n        /* \"#utility.yul\":14879:14915   */\n      and\n        /* \"#utility.yul\":14861:14863   */\n      0x4e\n        /* \"#utility.yul\":14851:14859   */\n      dup5\n        /* \"#utility.yul\":14848:14864   */\n      lt\n        /* \"#utility.yul\":14843:14845   */\n      0x0b\n        /* \"#utility.yul\":14837:14841   */\n      dup5\n        /* \"#utility.yul\":14834:14846   */\n      lt\n        /* \"#utility.yul\":14830:14865   */\n      and\n        /* \"#utility.yul\":14814:14925   */\n      or\n        /* \"#utility.yul\":14811:15057   */\n      iszero\n      tag_651\n      jumpi\n        /* \"#utility.yul\":14967:14975   */\n      dup3\n        /* \"#utility.yul\":14961:14965   */\n      dup3\n        /* \"#utility.yul\":14957:14976   */\n      exp\n        /* \"#utility.yul\":14948:14976   */\n      swap1\n      pop\n        /* \"#utility.yul\":15002:15005   */\n      dup4\n        /* \"#utility.yul\":14995:15000   */\n      dup2\n        /* \"#utility.yul\":14992:15006   */\n      gt\n        /* \"#utility.yul\":14989:15029   */\n      iszero\n      tag_652\n      jumpi\n        /* \"#utility.yul\":15009:15027   */\n      tag_653\n      tag_450\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":14989:15029   */\n    tag_652:\n        /* \"#utility.yul\":15042:15047   */\n      jump(tag_641)\n        /* \"#utility.yul\":14811:15057   */\n    tag_651:\n        /* \"#utility.yul\":15082:15124   */\n      tag_654\n        /* \"#utility.yul\":15120:15123   */\n      dup5\n        /* \"#utility.yul\":15110:15118   */\n      dup5\n        /* \"#utility.yul\":15104:15108   */\n      dup5\n        /* \"#utility.yul\":15101:15102   */\n      0x01\n        /* \"#utility.yul\":15082:15124   */\n      tag_466\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":15067:15124   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":15156:15160   */\n      dup2\n        /* \"#utility.yul\":15151:15154   */\n      dup5\n        /* \"#utility.yul\":15147:15161   */\n      div\n        /* \"#utility.yul\":15140:15145   */\n      dup2\n        /* \"#utility.yul\":15137:15162   */\n      gt\n        /* \"#utility.yul\":15134:15185   */\n      iszero\n      tag_655\n      jumpi\n        /* \"#utility.yul\":15165:15183   */\n      tag_656\n      tag_450\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":15134:15185   */\n    tag_655:\n        /* \"#utility.yul\":15214:15218   */\n      dup2\n        /* \"#utility.yul\":15207:15212   */\n      dup2\n        /* \"#utility.yul\":15203:15219   */\n      mul\n        /* \"#utility.yul\":15194:15219   */\n      swap1\n      pop\n        /* \"#utility.yul\":14152:15225   */\n    tag_641:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15231:15512   */\n    tag_311:\n        /* \"#utility.yul\":15289:15294   */\n      0x00\n        /* \"#utility.yul\":15313:15336   */\n      tag_658\n        /* \"#utility.yul\":15331:15335   */\n      dup3\n        /* \"#utility.yul\":15313:15336   */\n      tag_434\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":15305:15336   */\n      swap2\n      pop\n        /* \"#utility.yul\":15357:15382   */\n      tag_659\n        /* \"#utility.yul\":15373:15381   */\n      dup4\n        /* \"#utility.yul\":15357:15382   */\n      tag_462\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":15345:15382   */\n      swap3\n      pop\n        /* \"#utility.yul\":15401:15505   */\n      tag_660\n        /* \"#utility.yul\":15438:15504   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15428:15436   */\n      dup5\n        /* \"#utility.yul\":15422:15426   */\n      dup5\n        /* \"#utility.yul\":15401:15505   */\n      tag_467\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":15392:15505   */\n      swap1\n      pop\n        /* \"#utility.yul\":15231:15512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15518:15928   */\n    tag_314:\n        /* \"#utility.yul\":15558:15565   */\n      0x00\n        /* \"#utility.yul\":15581:15601   */\n      tag_662\n        /* \"#utility.yul\":15599:15600   */\n      dup3\n        /* \"#utility.yul\":15581:15601   */\n      tag_434\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":15576:15601   */\n      swap2\n      pop\n        /* \"#utility.yul\":15615:15635   */\n      tag_663\n        /* \"#utility.yul\":15633:15634   */\n      dup4\n        /* \"#utility.yul\":15615:15635   */\n      tag_434\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":15610:15635   */\n      swap3\n      pop\n        /* \"#utility.yul\":15670:15671   */\n      dup3\n        /* \"#utility.yul\":15667:15668   */\n      dup3\n        /* \"#utility.yul\":15663:15672   */\n      mul\n        /* \"#utility.yul\":15692:15722   */\n      tag_664\n        /* \"#utility.yul\":15710:15721   */\n      dup2\n        /* \"#utility.yul\":15692:15722   */\n      tag_434\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":15681:15722   */\n      swap2\n      pop\n        /* \"#utility.yul\":15871:15872   */\n      dup3\n        /* \"#utility.yul\":15862:15869   */\n      dup3\n        /* \"#utility.yul\":15858:15873   */\n      div\n        /* \"#utility.yul\":15855:15856   */\n      dup5\n        /* \"#utility.yul\":15852:15874   */\n      eq\n        /* \"#utility.yul\":15832:15833   */\n      dup4\n        /* \"#utility.yul\":15825:15834   */\n      iszero\n        /* \"#utility.yul\":15805:15888   */\n      or\n        /* \"#utility.yul\":15782:15921   */\n      tag_665\n      jumpi\n        /* \"#utility.yul\":15901:15919   */\n      tag_666\n      tag_450\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":15782:15921   */\n    tag_665:\n        /* \"#utility.yul\":15566:15928   */\n      pop\n        /* \"#utility.yul\":15518:15928   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15934:16114   */\n    tag_468:\n        /* \"#utility.yul\":15982:16059   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15979:15980   */\n      0x00\n        /* \"#utility.yul\":15972:16060   */\n      mstore\n        /* \"#utility.yul\":16079:16083   */\n      0x12\n        /* \"#utility.yul\":16076:16077   */\n      0x04\n        /* \"#utility.yul\":16069:16084   */\n      mstore\n        /* \"#utility.yul\":16103:16107   */\n      0x24\n        /* \"#utility.yul\":16100:16101   */\n      0x00\n        /* \"#utility.yul\":16093:16108   */\n      revert\n        /* \"#utility.yul\":16120:16305   */\n    tag_319:\n        /* \"#utility.yul\":16160:16161   */\n      0x00\n        /* \"#utility.yul\":16177:16197   */\n      tag_669\n        /* \"#utility.yul\":16195:16196   */\n      dup3\n        /* \"#utility.yul\":16177:16197   */\n      tag_434\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":16172:16197   */\n      swap2\n      pop\n        /* \"#utility.yul\":16211:16231   */\n      tag_670\n        /* \"#utility.yul\":16229:16230   */\n      dup4\n        /* \"#utility.yul\":16211:16231   */\n      tag_434\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":16206:16231   */\n      swap3\n      pop\n        /* \"#utility.yul\":16250:16251   */\n      dup3\n        /* \"#utility.yul\":16240:16275   */\n      tag_671\n      jumpi\n        /* \"#utility.yul\":16255:16273   */\n      tag_672\n      tag_468\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":16240:16275   */\n    tag_671:\n        /* \"#utility.yul\":16297:16298   */\n      dup3\n        /* \"#utility.yul\":16294:16295   */\n      dup3\n        /* \"#utility.yul\":16290:16299   */\n      div\n        /* \"#utility.yul\":16285:16299   */\n      swap1\n      pop\n        /* \"#utility.yul\":16120:16305   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16311:16502   */\n    tag_339:\n        /* \"#utility.yul\":16349:16353   */\n      0x00\n        /* \"#utility.yul\":16369:16387   */\n      tag_674\n        /* \"#utility.yul\":16385:16386   */\n      dup3\n        /* \"#utility.yul\":16369:16387   */\n      tag_462\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":16364:16387   */\n      swap2\n      pop\n        /* \"#utility.yul\":16401:16419   */\n      tag_675\n        /* \"#utility.yul\":16417:16418   */\n      dup4\n        /* \"#utility.yul\":16401:16419   */\n      tag_462\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":16396:16419   */\n      swap3\n      pop\n        /* \"#utility.yul\":16443:16444   */\n      dup3\n        /* \"#utility.yul\":16440:16441   */\n      dup3\n        /* \"#utility.yul\":16436:16445   */\n      sub\n        /* \"#utility.yul\":16428:16445   */\n      swap1\n      pop\n        /* \"#utility.yul\":16467:16471   */\n      0xff\n        /* \"#utility.yul\":16461:16465   */\n      dup2\n        /* \"#utility.yul\":16458:16472   */\n      gt\n        /* \"#utility.yul\":16455:16495   */\n      iszero\n      tag_676\n      jumpi\n        /* \"#utility.yul\":16475:16493   */\n      tag_677\n      tag_450\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":16455:16495   */\n    tag_676:\n        /* \"#utility.yul\":16311:16502   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16508:16950   */\n    tag_377:\n        /* \"#utility.yul\":16657:16661   */\n      0x00\n        /* \"#utility.yul\":16695:16697   */\n      0x60\n        /* \"#utility.yul\":16684:16693   */\n      dup3\n        /* \"#utility.yul\":16680:16698   */\n      add\n        /* \"#utility.yul\":16672:16698   */\n      swap1\n      pop\n        /* \"#utility.yul\":16708:16779   */\n      tag_679\n        /* \"#utility.yul\":16776:16777   */\n      0x00\n        /* \"#utility.yul\":16765:16774   */\n      dup4\n        /* \"#utility.yul\":16761:16778   */\n      add\n        /* \"#utility.yul\":16752:16758   */\n      dup7\n        /* \"#utility.yul\":16708:16779   */\n      tag_442\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":16789:16861   */\n      tag_680\n        /* \"#utility.yul\":16857:16859   */\n      0x20\n        /* \"#utility.yul\":16846:16855   */\n      dup4\n        /* \"#utility.yul\":16842:16860   */\n      add\n        /* \"#utility.yul\":16833:16839   */\n      dup6\n        /* \"#utility.yul\":16789:16861   */\n      tag_442\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":16871:16943   */\n      tag_681\n        /* \"#utility.yul\":16939:16941   */\n      0x40\n        /* \"#utility.yul\":16928:16937   */\n      dup4\n        /* \"#utility.yul\":16924:16942   */\n      add\n        /* \"#utility.yul\":16915:16921   */\n      dup5\n        /* \"#utility.yul\":16871:16943   */\n      tag_435\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":16508:16950   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16956:17103   */\n    tag_469:\n        /* \"#utility.yul\":17057:17068   */\n      0x00\n        /* \"#utility.yul\":17094:17097   */\n      dup2\n        /* \"#utility.yul\":17079:17097   */\n      swap1\n      pop\n        /* \"#utility.yul\":16956:17103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17109:17223   */\n    tag_470:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17229:17627   */\n    tag_471:\n        /* \"#utility.yul\":17388:17391   */\n      0x00\n        /* \"#utility.yul\":17409:17492   */\n      tag_685\n        /* \"#utility.yul\":17490:17491   */\n      0x00\n        /* \"#utility.yul\":17485:17488   */\n      dup4\n        /* \"#utility.yul\":17409:17492   */\n      tag_469\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":17402:17492   */\n      swap2\n      pop\n        /* \"#utility.yul\":17501:17594   */\n      tag_686\n        /* \"#utility.yul\":17590:17593   */\n      dup3\n        /* \"#utility.yul\":17501:17594   */\n      tag_470\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":17619:17620   */\n      0x00\n        /* \"#utility.yul\":17614:17617   */\n      dup3\n        /* \"#utility.yul\":17610:17621   */\n      add\n        /* \"#utility.yul\":17603:17621   */\n      swap1\n      pop\n        /* \"#utility.yul\":17229:17627   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17633:18012   */\n    tag_398:\n        /* \"#utility.yul\":17817:17820   */\n      0x00\n        /* \"#utility.yul\":17839:17986   */\n      tag_688\n        /* \"#utility.yul\":17982:17985   */\n      dup3\n        /* \"#utility.yul\":17839:17986   */\n      tag_471\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":17832:17986   */\n      swap2\n      pop\n        /* \"#utility.yul\":18003:18006   */\n      dup2\n        /* \"#utility.yul\":17996:18006   */\n      swap1\n      pop\n        /* \"#utility.yul\":17633:18012   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18018:18350   */\n    tag_411:\n        /* \"#utility.yul\":18139:18143   */\n      0x00\n        /* \"#utility.yul\":18177:18179   */\n      0x40\n        /* \"#utility.yul\":18166:18175   */\n      dup3\n        /* \"#utility.yul\":18162:18180   */\n      add\n        /* \"#utility.yul\":18154:18180   */\n      swap1\n      pop\n        /* \"#utility.yul\":18190:18261   */\n      tag_690\n        /* \"#utility.yul\":18258:18259   */\n      0x00\n        /* \"#utility.yul\":18247:18256   */\n      dup4\n        /* \"#utility.yul\":18243:18260   */\n      add\n        /* \"#utility.yul\":18234:18240   */\n      dup6\n        /* \"#utility.yul\":18190:18261   */\n      tag_442\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":18271:18343   */\n      tag_691\n        /* \"#utility.yul\":18339:18341   */\n      0x20\n        /* \"#utility.yul\":18328:18337   */\n      dup4\n        /* \"#utility.yul\":18324:18342   */\n      add\n        /* \"#utility.yul\":18315:18321   */\n      dup5\n        /* \"#utility.yul\":18271:18343   */\n      tag_439\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":18018:18350   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18356:18688   */\n    tag_421:\n        /* \"#utility.yul\":18477:18481   */\n      0x00\n        /* \"#utility.yul\":18515:18517   */\n      0x40\n        /* \"#utility.yul\":18504:18513   */\n      dup3\n        /* \"#utility.yul\":18500:18518   */\n      add\n        /* \"#utility.yul\":18492:18518   */\n      swap1\n      pop\n        /* \"#utility.yul\":18528:18599   */\n      tag_693\n        /* \"#utility.yul\":18596:18597   */\n      0x00\n        /* \"#utility.yul\":18585:18594   */\n      dup4\n        /* \"#utility.yul\":18581:18598   */\n      add\n        /* \"#utility.yul\":18572:18578   */\n      dup6\n        /* \"#utility.yul\":18528:18599   */\n      tag_442\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":18609:18681   */\n      tag_694\n        /* \"#utility.yul\":18677:18679   */\n      0x20\n        /* \"#utility.yul\":18666:18675   */\n      dup4\n        /* \"#utility.yul\":18662:18680   */\n      add\n        /* \"#utility.yul\":18653:18659   */\n      dup5\n        /* \"#utility.yul\":18609:18681   */\n      tag_435\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":18356:18688   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201a1340fcc7905c0fe5a981bd436cf7777761ce3224a107b20c4292f3acb8482564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1109": {
									"entryPoint": null,
									"id": 1109,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1396": {
									"entryPoint": null,
									"id": 1396,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_grantRole_303": {
									"entryPoint": 435,
									"id": 303,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1069": {
									"entryPoint": 779,
									"id": 1069,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_127": {
									"entryPoint": 680,
									"id": 127,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_address_fromMemory": {
									"entryPoint": 931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 786,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1871:13",
										"nodeType": "YulBlock",
										"src": "0:1871:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:32:13",
													"nodeType": "YulBlock",
													"src": "379:32:13",
													"statements": [
														{
															"nativeSrc": "389:16:13",
															"nodeType": "YulAssignment",
															"src": "389:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:13",
																"nodeType": "YulIdentifier",
																"src": "400:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:77:13"
											},
											{
												"body": {
													"nativeSrc": "460:79:13",
													"nodeType": "YulBlock",
													"src": "460:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:13",
																"nodeType": "YulBlock",
																"src": "517:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:13",
																					"nodeType": "YulLiteral",
																					"src": "526:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:13",
																					"nodeType": "YulLiteral",
																					"src": "529:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:13"
																			},
																			"nativeSrc": "519:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:13"
																		},
																		"nativeSrc": "519:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:13"
																				},
																				"nativeSrc": "490:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:13"
																		},
																		"nativeSrc": "480:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:13"
																},
																"nativeSrc": "473:43:13",
																"nodeType": "YulFunctionCall",
																"src": "473:43:13"
															},
															"nativeSrc": "470:63:13",
															"nodeType": "YulIf",
															"src": "470:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:13",
														"nodeType": "YulTypedName",
														"src": "453:5:13",
														"type": ""
													}
												],
												"src": "417:122:13"
											},
											{
												"body": {
													"nativeSrc": "608:80:13",
													"nodeType": "YulBlock",
													"src": "608:80:13",
													"statements": [
														{
															"nativeSrc": "618:22:13",
															"nodeType": "YulAssignment",
															"src": "618:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:13"
																},
																"nativeSrc": "627:13:13",
																"nodeType": "YulFunctionCall",
																"src": "627:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:13"
																},
																"nativeSrc": "649:33:13",
																"nodeType": "YulFunctionCall",
																"src": "649:33:13"
															},
															"nativeSrc": "649:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:13",
														"nodeType": "YulTypedName",
														"src": "586:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:13",
														"nodeType": "YulTypedName",
														"src": "594:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:13",
														"nodeType": "YulTypedName",
														"src": "602:5:13",
														"type": ""
													}
												],
												"src": "545:143:13"
											},
											{
												"body": {
													"nativeSrc": "739:81:13",
													"nodeType": "YulBlock",
													"src": "739:81:13",
													"statements": [
														{
															"nativeSrc": "749:65:13",
															"nodeType": "YulAssignment",
															"src": "749:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "764:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "771:42:13",
																		"nodeType": "YulLiteral",
																		"src": "771:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "760:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:13"
																},
																"nativeSrc": "760:54:13",
																"nodeType": "YulFunctionCall",
																"src": "760:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "749:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "694:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "721:5:13",
														"nodeType": "YulTypedName",
														"src": "721:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "731:7:13",
														"nodeType": "YulTypedName",
														"src": "731:7:13",
														"type": ""
													}
												],
												"src": "694:126:13"
											},
											{
												"body": {
													"nativeSrc": "871:51:13",
													"nodeType": "YulBlock",
													"src": "871:51:13",
													"statements": [
														{
															"nativeSrc": "881:35:13",
															"nodeType": "YulAssignment",
															"src": "881:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "910:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "910:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "892:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "892:17:13"
																},
																"nativeSrc": "892:24:13",
																"nodeType": "YulFunctionCall",
																"src": "892:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "881:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "881:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "826:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "853:5:13",
														"nodeType": "YulTypedName",
														"src": "853:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "863:7:13",
														"nodeType": "YulTypedName",
														"src": "863:7:13",
														"type": ""
													}
												],
												"src": "826:96:13"
											},
											{
												"body": {
													"nativeSrc": "971:79:13",
													"nodeType": "YulBlock",
													"src": "971:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:13",
																"nodeType": "YulBlock",
																"src": "1028:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:13"
																			},
																			"nativeSrc": "1030:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:13"
																		},
																		"nativeSrc": "1030:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1001:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:13"
																				},
																				"nativeSrc": "1001:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:13"
																		},
																		"nativeSrc": "991:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:13"
																},
																"nativeSrc": "984:43:13",
																"nodeType": "YulFunctionCall",
																"src": "984:43:13"
															},
															"nativeSrc": "981:63:13",
															"nodeType": "YulIf",
															"src": "981:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "928:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:13",
														"nodeType": "YulTypedName",
														"src": "964:5:13",
														"type": ""
													}
												],
												"src": "928:122:13"
											},
											{
												"body": {
													"nativeSrc": "1119:80:13",
													"nodeType": "YulBlock",
													"src": "1119:80:13",
													"statements": [
														{
															"nativeSrc": "1129:22:13",
															"nodeType": "YulAssignment",
															"src": "1129:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:13"
																},
																"nativeSrc": "1138:13:13",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1160:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:13"
																},
																"nativeSrc": "1160:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:13"
															},
															"nativeSrc": "1160:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1056:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:13",
														"nodeType": "YulTypedName",
														"src": "1097:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:13",
														"nodeType": "YulTypedName",
														"src": "1105:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:13",
														"nodeType": "YulTypedName",
														"src": "1113:5:13",
														"type": ""
													}
												],
												"src": "1056:143:13"
											},
											{
												"body": {
													"nativeSrc": "1316:552:13",
													"nodeType": "YulBlock",
													"src": "1316:552:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1362:83:13",
																"nodeType": "YulBlock",
																"src": "1362:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1364:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:13"
																			},
																			"nativeSrc": "1364:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:13"
																		},
																		"nativeSrc": "1364:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1337:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1333:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:13"
																		},
																		"nativeSrc": "1333:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1358:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1329:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:13"
																},
																"nativeSrc": "1329:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1329:32:13"
															},
															"nativeSrc": "1326:119:13",
															"nodeType": "YulIf",
															"src": "1326:119:13"
														},
														{
															"nativeSrc": "1455:128:13",
															"nodeType": "YulBlock",
															"src": "1455:128:13",
															"statements": [
																{
																	"nativeSrc": "1470:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1484:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1474:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1499:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1499:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1545:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1556:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1541:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:13"
																				},
																				"nativeSrc": "1541:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1565:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1509:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:13"
																		},
																		"nativeSrc": "1509:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1499:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1593:129:13",
															"nodeType": "YulBlock",
															"src": "1593:129:13",
															"statements": [
																{
																	"nativeSrc": "1608:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1622:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1612:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1638:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1638:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1684:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1695:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1680:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:13"
																				},
																				"nativeSrc": "1680:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1704:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1648:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:13"
																		},
																		"nativeSrc": "1648:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1638:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1732:129:13",
															"nodeType": "YulBlock",
															"src": "1732:129:13",
															"statements": [
																{
																	"nativeSrc": "1747:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1761:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1751:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1777:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1777:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1823:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1834:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1819:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:13"
																				},
																				"nativeSrc": "1819:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1843:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1787:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:13"
																		},
																		"nativeSrc": "1787:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1777:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address_fromMemory",
												"nativeSrc": "1205:663:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1270:9:13",
														"nodeType": "YulTypedName",
														"src": "1270:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1281:7:13",
														"nodeType": "YulTypedName",
														"src": "1281:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1293:6:13",
														"nodeType": "YulTypedName",
														"src": "1293:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1301:6:13",
														"nodeType": "YulTypedName",
														"src": "1301:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1309:6:13",
														"nodeType": "YulTypedName",
														"src": "1309:6:13",
														"type": ""
													}
												],
												"src": "1205:663:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x34AC CODESIZE SUB DUP1 PUSH2 0x34AC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 DUP4 EQ DUP1 PUSH2 0x45 JUMPI POP PUSH0 DUP3 EQ JUMPDEST ISZERO PUSH2 0x7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F36295200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH2 0x9E PUSH0 DUP1 SHL CALLER PUSH2 0x1B3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xCF PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x1B3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x4 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH0 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH2 0x3F3 JUMP JUMPDEST PUSH0 PUSH2 0x1C4 DUP4 DUP4 PUSH2 0x2A8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x29E JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x23B PUSH2 0x30B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x2A2 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x328 DUP2 PUSH2 0x316 JUMP JUMPDEST DUP2 EQ PUSH2 0x332 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x343 DUP2 PUSH2 0x31F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x372 DUP3 PUSH2 0x349 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x382 DUP2 PUSH2 0x368 JUMP JUMPDEST DUP2 EQ PUSH2 0x38C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x39D DUP2 PUSH2 0x379 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3BA JUMPI PUSH2 0x3B9 PUSH2 0x312 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3C7 DUP7 DUP3 DUP8 ADD PUSH2 0x335 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3D8 DUP7 DUP3 DUP8 ADD PUSH2 0x335 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3E9 DUP7 DUP3 DUP8 ADD PUSH2 0x38F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x306E PUSH2 0x43E PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x685 ADD MSTORE DUP2 DUP2 PUSH2 0x6BA ADD MSTORE DUP2 DUP2 PUSH2 0x969 ADD MSTORE DUP2 DUP2 PUSH2 0x992 ADD MSTORE PUSH2 0x9CA ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x1545 ADD MSTORE DUP2 DUP2 PUSH2 0x21AD ADD MSTORE PUSH2 0x21D6 ADD MSTORE PUSH2 0x306E PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x184 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83E397B8 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0xD15F58FB GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x5D5 JUMPI DUP1 PUSH4 0xE62615C6 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0xF14210A6 EQ PUSH2 0x639 JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x661 JUMPI PUSH2 0x195 JUMP JUMPDEST DUP1 PUSH4 0xD15F58FB EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xD3C7C2C7 EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0xD4FAC45D EQ PUSH2 0x599 JUMPI PUSH2 0x195 JUMP JUMPDEST DUP1 PUSH4 0x83E397B8 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0x9E281A98 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4C7 JUMPI DUP1 PUSH4 0xB2343B1C EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0xCAC2E25F EQ PUSH2 0x51B JUMPI PUSH2 0x195 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x5B6CCA80 GT PUSH2 0x117 JUMPI DUP1 PUSH4 0x5B6CCA80 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x5CCF7AC4 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x75151B63 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x40F JUMPI PUSH2 0x195 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x338B5DEA EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x347 JUMPI PUSH2 0x195 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x251CFA1 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x8133237 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xCCEE433 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x2BA8D939 EQ PUSH2 0x2CF JUMPI PUSH2 0x195 JUMP JUMPDEST CALLDATASIZE PUSH2 0x195 JUMPI PUSH2 0x193 PUSH0 CALLVALUE PUSH2 0x66B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x2AE871A500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x265F JUMP JUMPDEST PUSH2 0x893 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x26A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x2717 JUMP JUMPDEST PUSH2 0x90C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x95B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x27A6 JUMP JUMPDEST PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x2717 JUMP JUMPDEST PUSH2 0xA08 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0xDDF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x2861 JUMP JUMPDEST PUSH2 0xE01 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0xFC1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x2717 JUMP JUMPDEST PUSH2 0x103C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x28AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x28C7 JUMP JUMPDEST PUSH2 0x10A1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x2717 JUMP JUMPDEST PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x26A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x444 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x44D PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45A SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x26A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x2861 JUMP JUMPDEST PUSH2 0x146A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DB PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E8 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x505 PUSH2 0x1537 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x512 SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x526 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x52F PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x550 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x559 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x566 SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x583 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x29BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0x28C7 JUMP JUMPDEST PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CC SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0x1682 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x608 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x623 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x28C7 JUMP JUMPDEST PUSH2 0x16A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x630 SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x644 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x65F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65A SWAP2 SWAP1 PUSH2 0x29DC JUMP JUMPDEST PUSH2 0x1742 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x669 PUSH2 0x1798 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x676 DUP4 DUP4 PUSH2 0x17ED JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x681 PUSH2 0x1A74 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP3 DUP3 PUSH2 0x6B0 SWAP2 SWAP1 PUSH2 0x2A34 JUMP JUMPDEST GT ISZERO PUSH2 0x720 JUMPI DUP2 DUP2 PUSH32 0x0 PUSH2 0x6E3 SWAP2 SWAP1 PUSH2 0x2A67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x639847A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x717 SWAP3 SWAP2 SWAP1 PUSH2 0x2A9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x72B DUP6 DUP6 PUSH2 0x1B4D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x2A34 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x807 SWAP2 SWAP1 PUSH2 0x2A34 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x820 SWAP1 PUSH2 0x2AC1 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x57BAD7E3C9EFECF6E1F60BBD846B999E9DA4A409224287A8DF09779F2330135E DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x884 SWAP3 SWAP2 SWAP1 PUSH2 0x2A9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x905 JUMPI POP PUSH2 0x904 DUP3 PUSH2 0x1C7A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x954 DUP3 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x965 PUSH2 0x1A74 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 LT ISZERO PUSH2 0x9C0 JUMPI DUP1 PUSH32 0x0 PUSH2 0x9BB SWAP2 SWAP1 PUSH2 0x2A67 JUMP JUMPDEST PUSH2 0x9C2 JUMP JUMPDEST PUSH0 JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0xA32 DUP2 PUSH2 0x1E10 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAFE JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xF9968B3A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP2 SWAP1 PUSH2 0x28AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0xBBF JUMPI PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH32 0x61965C4E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB6 SWAP3 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH0 JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xD97 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC58 JUMPI PUSH2 0xC57 PUSH2 0x2B71 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD8A JUMPI PUSH1 0x5 PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP PUSH2 0xCAF SWAP2 SWAP1 PUSH2 0x2A67 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xCC0 JUMPI PUSH2 0xCBF PUSH2 0x2B71 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCFC JUMPI PUSH2 0xCFB PUSH2 0x2B71 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP1 SLOAD DUP1 PUSH2 0xD53 JUMPI PUSH2 0xD52 PUSH2 0x2B9E JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH2 0xD97 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xC20 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C910B69FE65A61F7531B9C5042B2329CA7179C77290AA7E2EB3AFA3C8511FD3 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xDE8 DUP3 PUSH2 0x9EC JUMP JUMPDEST PUSH2 0xDF1 DUP2 PUSH2 0x1E10 JUMP JUMPDEST PUSH2 0xDFB DUP4 DUP4 PUSH2 0x1E24 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xE09 PUSH2 0x1F0D JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0xE42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F36295200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEB2 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xF9968B3A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA9 SWAP2 SWAP1 PUSH2 0x28AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF7E JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xF9968B3A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF75 SWAP2 SWAP1 PUSH2 0x28AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFAB CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F53 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xFB5 DUP3 DUP3 PUSH2 0x66B JUMP JUMPDEST PUSH2 0xFBD PUSH2 0x1FD5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xFC9 PUSH2 0x1FDE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x102D JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1037 DUP3 DUP3 PUSH2 0x1FE5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x10CB DUP2 PUSH2 0x1E10 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x113B JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xF9968B3A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1132 SWAP2 SWAP1 PUSH2 0x28AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1207 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xC2A2F47500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FE SWAP2 SWAP1 PUSH2 0x28AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDFFBD9DED1C09446F09377DE547142DCCE7DC541C8B0B028142B1EBA7026B9E7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x1402 PUSH2 0x1A74 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1472 PUSH2 0x1F0D JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0x14AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F36295200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x151B JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xF9968B3A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1512 SWAP2 SWAP1 PUSH2 0x28AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1525 DUP3 DUP3 PUSH2 0x20CE JUMP JUMPDEST PUSH2 0x152D PUSH2 0x1FD5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x15E8 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x159F JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x1679 DUP4 DUP3 PUSH2 0x1CE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x168B DUP3 PUSH2 0x9EC JUMP JUMPDEST PUSH2 0x1694 DUP2 PUSH2 0x1E10 JUMP JUMPDEST PUSH2 0x169E DUP4 DUP4 PUSH2 0x1FE5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH2 0x172C DUP5 DUP4 PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1738 DUP5 DUP3 PUSH2 0x17ED JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x174A PUSH2 0x1F0D JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0x1783 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F36295200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x178D PUSH0 DUP3 PUSH2 0x20CE JUMP JUMPDEST PUSH2 0x1795 PUSH2 0x1FD5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x17A0 PUSH2 0x1F0D JUMP JUMPDEST PUSH0 CALLVALUE SUB PUSH2 0x17D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F36295200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17E3 PUSH0 CALLVALUE PUSH2 0x66B JUMP JUMPDEST PUSH2 0x17EB PUSH2 0x1FD5 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1898 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18BC SWAP2 SWAP1 PUSH2 0x2C51 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP2 SGT PUSH2 0x18FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x804B984B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19A1 JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1978 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x199C SWAP2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x12 JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19F0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A14 SWAP2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH2 0x1A23 SWAP2 SWAP1 PUSH2 0x2E58 JUMP JUMPDEST DUP3 PUSH1 0xA PUSH2 0x1A30 SWAP2 SWAP1 PUSH2 0x2E58 JUMP JUMPDEST PUSH2 0x1A3A SWAP2 SWAP1 PUSH2 0x2EA2 JUMP JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0x1A48 SWAP2 SWAP1 PUSH2 0x2E58 JUMP JUMPDEST DUP5 DUP9 PUSH2 0x1A54 SWAP2 SWAP1 PUSH2 0x2EA2 JUMP JUMPDEST PUSH2 0x1A5E SWAP2 SWAP1 PUSH2 0x2EA2 JUMP JUMPDEST PUSH2 0x1A68 SWAP2 SWAP1 PUSH2 0x2F10 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1B45 JUMPI PUSH0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1A9D JUMPI PUSH2 0x1A9C PUSH2 0x2B71 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x1B36 JUMPI PUSH0 PUSH2 0x1B1B DUP4 DUP4 PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B27 DUP4 DUP3 PUSH2 0x17ED JUMP JUMPDEST DUP6 PUSH2 0x1B32 SWAP2 SWAP1 PUSH2 0x2A34 JUMP JUMPDEST SWAP5 POP POP JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1A7B JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BF4 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BCB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BEF SWAP2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST PUSH2 0x1BF7 JUMP JUMPDEST PUSH1 0x12 JUMPDEST SWAP1 POP PUSH1 0x6 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND GT ISZERO PUSH2 0x1C34 JUMPI PUSH1 0x6 DUP2 PUSH2 0x1C15 SWAP2 SWAP1 PUSH2 0x2F40 JUMP JUMPDEST PUSH1 0xA PUSH2 0x1C21 SWAP2 SWAP1 PUSH2 0x2E58 JUMP JUMPDEST DUP4 PUSH2 0x1C2C SWAP2 SWAP1 PUSH2 0x2F10 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x6 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x1C6F JUMPI DUP1 PUSH1 0x6 PUSH2 0x1C50 SWAP2 SWAP1 PUSH2 0x2F40 JUMP JUMPDEST PUSH1 0xA PUSH2 0x1C5C SWAP2 SWAP1 PUSH2 0x2E58 JUMP JUMPDEST DUP4 PUSH2 0x1C67 SWAP2 SWAP1 PUSH2 0x2EA2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C74 JUMP JUMPDEST DUP3 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D8A JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D61 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D85 SWAP2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST PUSH2 0x1D8D JUMP JUMPDEST PUSH1 0x12 JUMPDEST SWAP1 POP PUSH1 0x6 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND GT ISZERO PUSH2 0x1DCA JUMPI PUSH1 0x6 DUP2 PUSH2 0x1DAB SWAP2 SWAP1 PUSH2 0x2F40 JUMP JUMPDEST PUSH1 0xA PUSH2 0x1DB7 SWAP2 SWAP1 PUSH2 0x2E58 JUMP JUMPDEST DUP4 PUSH2 0x1DC2 SWAP2 SWAP1 PUSH2 0x2EA2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1E0A JUMP JUMPDEST PUSH1 0x6 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x1E05 JUMPI DUP1 PUSH1 0x6 PUSH2 0x1DE6 SWAP2 SWAP1 PUSH2 0x2F40 JUMP JUMPDEST PUSH1 0xA PUSH2 0x1DF2 SWAP2 SWAP1 PUSH2 0x2E58 JUMP JUMPDEST DUP4 PUSH2 0x1DFD SWAP2 SWAP1 PUSH2 0x2F10 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1E0A JUMP JUMPDEST DUP3 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E21 DUP2 PUSH2 0x1E1C PUSH2 0x1FDE JUMP JUMPDEST PUSH2 0x249B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1E2F DUP4 DUP4 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x1F03 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1EA0 PUSH2 0x1FDE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1F07 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1F49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1FCF DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1F88 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x24EC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1FF0 DUP4 DUP4 PUSH2 0x1407 JUMP JUMPDEST ISZERO PUSH2 0x20C4 JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2061 PUSH2 0x1FDE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x20C8 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20D9 DUP4 DUP4 PUSH2 0x1B4D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x219E JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x61965C4E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2195 SWAP3 SWAP2 SWAP1 PUSH2 0x2A9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x21A9 DUP6 DUP6 PUSH2 0x17ED JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 GT ISZERO PUSH2 0x2232 JUMPI DUP1 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x2D05FCBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2229 SWAP3 SWAP2 SWAP1 PUSH2 0x2A9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x22B9 SWAP2 SWAP1 PUSH2 0x2A67 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x230C SWAP2 SWAP1 PUSH2 0x2A67 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2325 SWAP1 PUSH2 0x2AC1 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2401 JUMPI PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x2382 SWAP1 PUSH2 0x2FD6 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x23BC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23C1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x23FB JUMPI PUSH1 0x40 MLOAD PUSH31 0xE35D8600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x242D JUMP JUMPDEST PUSH2 0x242C CALLER DUP6 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2587 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDE1D532173C6DE1E3937C7AF1CB92745C738980729F53AC451A725F929F3B798 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0x248C SWAP3 SWAP2 SWAP1 PUSH2 0x2A9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x24A5 DUP3 DUP3 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x24E8 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24DF SWAP3 SWAP2 SWAP1 PUSH2 0x2FEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x250B JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x2524 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x253F JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2581 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2578 SWAP2 SWAP1 PUSH2 0x28AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2601 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x25BA SWAP3 SWAP2 SWAP1 PUSH2 0x3011 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x24EC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x263E DUP2 PUSH2 0x260A JUMP JUMPDEST DUP2 EQ PUSH2 0x2648 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2659 DUP2 PUSH2 0x2635 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2674 JUMPI PUSH2 0x2673 PUSH2 0x2606 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2681 DUP5 DUP3 DUP6 ADD PUSH2 0x264B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x269E DUP2 PUSH2 0x268A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26B7 PUSH0 DUP4 ADD DUP5 PUSH2 0x2695 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x26E6 DUP3 PUSH2 0x26BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F6 DUP2 PUSH2 0x26DC JUMP JUMPDEST DUP2 EQ PUSH2 0x2700 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2711 DUP2 PUSH2 0x26ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x272C JUMPI PUSH2 0x272B PUSH2 0x2606 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2739 DUP5 DUP3 DUP6 ADD PUSH2 0x2703 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2754 DUP2 PUSH2 0x2742 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x276D PUSH0 DUP4 ADD DUP5 PUSH2 0x274B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2785 DUP2 PUSH2 0x2773 JUMP JUMPDEST DUP2 EQ PUSH2 0x278F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27A0 DUP2 PUSH2 0x277C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27BB JUMPI PUSH2 0x27BA PUSH2 0x2606 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27C8 DUP5 DUP3 DUP6 ADD PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27DA DUP2 PUSH2 0x2773 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27F3 PUSH0 DUP4 ADD DUP5 PUSH2 0x27D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x280F JUMPI PUSH2 0x280E PUSH2 0x2606 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x281C DUP6 DUP3 DUP7 ADD PUSH2 0x2792 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x282D DUP6 DUP3 DUP7 ADD PUSH2 0x2703 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2840 DUP2 PUSH2 0x2742 JUMP JUMPDEST DUP2 EQ PUSH2 0x284A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x285B DUP2 PUSH2 0x2837 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2877 JUMPI PUSH2 0x2876 PUSH2 0x2606 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2884 DUP6 DUP3 DUP7 ADD PUSH2 0x2703 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2895 DUP6 DUP3 DUP7 ADD PUSH2 0x284D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x28A8 DUP2 PUSH2 0x26DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28C1 PUSH0 DUP4 ADD DUP5 PUSH2 0x289F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28DD JUMPI PUSH2 0x28DC PUSH2 0x2606 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28EA DUP6 DUP3 DUP7 ADD PUSH2 0x2703 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x28FB DUP6 DUP3 DUP7 ADD PUSH2 0x2703 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2937 DUP2 PUSH2 0x26DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2948 DUP4 DUP4 PUSH2 0x292E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x296A DUP3 PUSH2 0x2905 JUMP JUMPDEST PUSH2 0x2974 DUP2 DUP6 PUSH2 0x290F JUMP JUMPDEST SWAP4 POP PUSH2 0x297F DUP4 PUSH2 0x291F JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x29AF JUMPI DUP2 MLOAD PUSH2 0x2996 DUP9 DUP3 PUSH2 0x293D JUMP JUMPDEST SWAP8 POP PUSH2 0x29A1 DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2982 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29D4 DUP2 DUP5 PUSH2 0x2960 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29F1 JUMPI PUSH2 0x29F0 PUSH2 0x2606 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29FE DUP5 DUP3 DUP6 ADD PUSH2 0x284D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2A3E DUP3 PUSH2 0x2742 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A49 DUP4 PUSH2 0x2742 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A61 JUMPI PUSH2 0x2A60 PUSH2 0x2A07 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A71 DUP3 PUSH2 0x2742 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A7C DUP4 PUSH2 0x2742 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2A94 JUMPI PUSH2 0x2A93 PUSH2 0x2A07 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2AAD PUSH0 DUP4 ADD DUP6 PUSH2 0x274B JUMP JUMPDEST PUSH2 0x2ABA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x274B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2ACB DUP3 PUSH2 0x2742 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2AFD JUMPI PUSH2 0x2AFC PUSH2 0x2A07 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2B34 PUSH2 0x2B2F PUSH2 0x2B2A DUP5 PUSH2 0x2B08 JUMP JUMPDEST PUSH2 0x2B11 JUMP JUMPDEST PUSH2 0x2742 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B44 DUP2 PUSH2 0x2B1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B5D PUSH0 DUP4 ADD DUP6 PUSH2 0x2B3B JUMP JUMPDEST PUSH2 0x2B6A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x274B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BE9 DUP2 PUSH2 0x2BCB JUMP JUMPDEST DUP2 EQ PUSH2 0x2BF3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C04 DUP2 PUSH2 0x2BE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C1C DUP2 PUSH2 0x2C0A JUMP JUMPDEST DUP2 EQ PUSH2 0x2C26 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C37 DUP2 PUSH2 0x2C13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C4B DUP2 PUSH2 0x2837 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2C6A JUMPI PUSH2 0x2C69 PUSH2 0x2606 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C77 DUP9 DUP3 DUP10 ADD PUSH2 0x2BF6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2C88 DUP9 DUP3 DUP10 ADD PUSH2 0x2C29 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2C99 DUP9 DUP3 DUP10 ADD PUSH2 0x2C3D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2CAA DUP9 DUP3 DUP10 ADD PUSH2 0x2C3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2CBB DUP9 DUP3 DUP10 ADD PUSH2 0x2BF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CDD DUP2 PUSH2 0x2CC8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2CF8 DUP2 PUSH2 0x2CD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D13 JUMPI PUSH2 0x2D12 PUSH2 0x2606 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D20 DUP5 DUP3 DUP6 ADD PUSH2 0x2CEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x2D7E JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x2D5A JUMPI PUSH2 0x2D59 PUSH2 0x2A07 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x2D69 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2D77 DUP6 PUSH2 0x2D29 JUMP JUMPDEST SWAP5 POP PUSH2 0x2D3E JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2D96 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2E51 JUMP JUMPDEST DUP2 PUSH2 0x2DA3 JUMPI PUSH0 SWAP1 POP PUSH2 0x2E51 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2DB9 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2DC3 JUMPI PUSH2 0x2DF2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2E51 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2DD5 JUMPI PUSH2 0x2DD4 PUSH2 0x2A07 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x2DEC JUMPI PUSH2 0x2DEB PUSH2 0x2A07 JUMP JUMPDEST JUMPDEST POP PUSH2 0x2E51 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2E27 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2E22 JUMPI PUSH2 0x2E21 PUSH2 0x2A07 JUMP JUMPDEST JUMPDEST PUSH2 0x2E51 JUMP JUMPDEST PUSH2 0x2E34 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2D35 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2E4B JUMPI PUSH2 0x2E4A PUSH2 0x2A07 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2E62 DUP3 PUSH2 0x2742 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E6D DUP4 PUSH2 0x2CC8 JUMP JUMPDEST SWAP3 POP PUSH2 0x2E9A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2D87 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2EAC DUP3 PUSH2 0x2742 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EB7 DUP4 PUSH2 0x2742 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2EC5 DUP2 PUSH2 0x2742 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2EDC JUMPI PUSH2 0x2EDB PUSH2 0x2A07 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2F1A DUP3 PUSH2 0x2742 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F25 DUP4 PUSH2 0x2742 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2F35 JUMPI PUSH2 0x2F34 PUSH2 0x2EE3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2F4A DUP3 PUSH2 0x2CC8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F55 DUP4 PUSH2 0x2CC8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x2F6E JUMPI PUSH2 0x2F6D PUSH2 0x2A07 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2F87 PUSH0 DUP4 ADD DUP7 PUSH2 0x289F JUMP JUMPDEST PUSH2 0x2F94 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x289F JUMP JUMPDEST PUSH2 0x2FA1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x274B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x2FC1 PUSH0 DUP4 PUSH2 0x2FA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FCC DUP3 PUSH2 0x2FB3 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2FE0 DUP3 PUSH2 0x2FB6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2FFD PUSH0 DUP4 ADD DUP6 PUSH2 0x289F JUMP JUMPDEST PUSH2 0x300A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x27D1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3024 PUSH0 DUP4 ADD DUP6 PUSH2 0x289F JUMP JUMPDEST PUSH2 0x3031 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x274B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE SGT BLOCKHASH 0xFC 0xC7 SWAP1 TLOAD 0xF 0xE5 0xA9 DUP2 0xBD NUMBER PUSH13 0xF7777761CE3224A107B20C4292 RETURN 0xAC 0xB8 BASEFEE 0x25 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "513:19062:12:-:0;;;5788:788;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1857:1:9;2061:7;:21;;;;6033:1:12;6006:23;:28;:48;;;;6053:1;6038:11;:16;6006:48;6002:110;;;6078:22;;;;;;;;;;;;;;6002:110;6151:23;6124:50;;;;;;6200:11;6185:26;;;;;;6292:42;2241:4:1;6303:18:12;;6323:10;6292;;;:42;;:::i;:::-;;6345:34;923:23;6368:10;6345;;;:34;;:::i;:::-;;6509:13;6460:12;:24;1899:1;6460:24;;;;;;;;;;;;;;;;:63;;;;;;;;;;;;;;;;;;6534:17;1899:1;6534:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5788:788;;;513:19062;;6155:316:1;6232:4;6253:22;6261:4;6267:7;6253;;;:22;;:::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;;;:12;;:::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;2830:136::-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;88:117:13:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:96::-;863:7;892:24;910:5;892:24;:::i;:::-;881:35;;826:96;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;513:19062:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_ROLE_1213": {
									"entryPoint": 5077,
									"id": 1213,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_76": {
									"entryPoint": 5425,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1407": {
									"entryPoint": null,
									"id": 1407,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1415": {
									"entryPoint": null,
									"id": 1415,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1015": {
									"entryPoint": 9452,
									"id": 1015,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_140": {
									"entryPoint": 7696,
									"id": 140,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_161": {
									"entryPoint": 9371,
									"id": 161,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_denormalizeFromUSDC_2109": {
									"entryPoint": 7395,
									"id": 2109,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_deposit_1760": {
									"entryPoint": 1643,
									"id": 1760,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_getTotalDepositsUSD_2053": {
									"entryPoint": 6772,
									"id": 2053,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getUSDValue_1940": {
									"entryPoint": 6125,
									"id": 1940,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_grantRole_303": {
									"entryPoint": 7716,
									"id": 303,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1069": {
									"entryPoint": 8158,
									"id": 1069,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_1144": {
									"entryPoint": 8149,
									"id": 1144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_1136": {
									"entryPoint": 7949,
									"id": 1136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_normalizeToUSDC_1996": {
									"entryPoint": 6989,
									"id": 1996,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_revokeRole_341": {
									"entryPoint": 8165,
									"id": 341,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_withdraw_1869": {
									"entryPoint": 8398,
									"id": 1869,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addTokenSupport_1605": {
									"entryPoint": 4257,
									"id": 1605,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@depositETH_1436": {
									"entryPoint": 6040,
									"id": 1436,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositToken_1497": {
									"entryPoint": 3585,
									"id": 1497,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getAvailableBankCapUSD_2211": {
									"entryPoint": 2395,
									"id": 2211,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getBalanceUSD_2164": {
									"entryPoint": 5796,
									"id": 2164,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getBalance_2133": {
									"entryPoint": 5618,
									"id": 2133,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getPriceFeed_2258": {
									"entryPoint": 4156,
									"id": 2258,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleAdmin_175": {
									"entryPoint": 2540,
									"id": 175,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getSupportedTokens_2221": {
									"entryPoint": 5479,
									"id": 2221,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTotalDepositsUSD_2190": {
									"entryPoint": 5113,
									"id": 2190,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTotalDeposits_2180": {
									"entryPoint": 2316,
									"id": 2180,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_194": {
									"entryPoint": 3551,
									"id": 194,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_127": {
									"entryPoint": 5127,
									"id": 127,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@i_bankCapUSD_1219": {
									"entryPoint": 2504,
									"id": 1219,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@i_withdrawalThresholdUSD_1216": {
									"entryPoint": 5443,
									"id": 1216,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isTokenSupported_2242": {
									"entryPoint": 4929,
									"id": 2242,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@removeTokenSupport_1692": {
									"entryPoint": 2568,
									"id": 1692,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceRole_236": {
									"entryPoint": 4033,
									"id": 236,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_213": {
									"entryPoint": 5762,
									"id": 213,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@s_depositCount_1259": {
									"entryPoint": 5437,
									"id": 1259,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_withdrawalCount_1262": {
									"entryPoint": 5431,
									"id": 1262,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_665": {
									"entryPoint": 8019,
									"id": 665,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_638": {
									"entryPoint": 9607,
									"id": 638,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@supportsInterface_109": {
									"entryPoint": 2195,
									"id": 109,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1179": {
									"entryPoint": 7290,
									"id": 1179,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@withdrawETH_1518": {
									"entryPoint": 5954,
									"id": 1518,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawToken_1549": {
									"entryPoint": 5226,
									"id": 1549,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 9987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 10130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 9803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 11305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 10317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 11325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 11254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 11498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 10007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 10439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 10337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 10150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 10233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 9823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 10716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 11345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 11518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 10557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 10542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 10399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 10592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 9877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 10193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 11067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 12214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 10059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 12246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 10414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 12148,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 12266,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 12305,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 10684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 9892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 10208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_0_by_1_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11082,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 10074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10906,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 10527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 10501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 10580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 10511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 12201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 12048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 11573,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 11864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 11655,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 11938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint8": {
									"entryPoint": 12096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 9948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 10099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 9738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 11274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 11016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 10050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 11464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 11211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 11034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 11025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 10945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10759,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 12003,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 11166,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 11121,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9734,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 11561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 12211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 10108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 9781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 11283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 11476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 11232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:18691:13",
										"nodeType": "YulBlock",
										"src": "0:18691:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "378:105:13",
													"nodeType": "YulBlock",
													"src": "378:105:13",
													"statements": [
														{
															"nativeSrc": "388:89:13",
															"nodeType": "YulAssignment",
															"src": "388:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:13",
																		"nodeType": "YulLiteral",
																		"src": "410:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:13"
																},
																"nativeSrc": "399:78:13",
																"nodeType": "YulFunctionCall",
																"src": "399:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:13",
														"nodeType": "YulTypedName",
														"src": "360:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:13",
														"nodeType": "YulTypedName",
														"src": "370:7:13",
														"type": ""
													}
												],
												"src": "334:149:13"
											},
											{
												"body": {
													"nativeSrc": "531:78:13",
													"nodeType": "YulBlock",
													"src": "531:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:13",
																"nodeType": "YulBlock",
																"src": "587:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:13",
																					"nodeType": "YulLiteral",
																					"src": "596:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:13",
																					"nodeType": "YulLiteral",
																					"src": "599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:13"
																			},
																			"nativeSrc": "589:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:13"
																		},
																		"nativeSrc": "589:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:13"
																				},
																				"nativeSrc": "561:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:13"
																		},
																		"nativeSrc": "551:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:13"
																},
																"nativeSrc": "544:42:13",
																"nodeType": "YulFunctionCall",
																"src": "544:42:13"
															},
															"nativeSrc": "541:62:13",
															"nodeType": "YulIf",
															"src": "541:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:13",
														"nodeType": "YulTypedName",
														"src": "524:5:13",
														"type": ""
													}
												],
												"src": "489:120:13"
											},
											{
												"body": {
													"nativeSrc": "666:86:13",
													"nodeType": "YulBlock",
													"src": "666:86:13",
													"statements": [
														{
															"nativeSrc": "676:29:13",
															"nodeType": "YulAssignment",
															"src": "676:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:13"
																},
																"nativeSrc": "685:20:13",
																"nodeType": "YulFunctionCall",
																"src": "685:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:13"
																},
																"nativeSrc": "714:32:13",
																"nodeType": "YulFunctionCall",
																"src": "714:32:13"
															},
															"nativeSrc": "714:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:13",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:13",
														"nodeType": "YulTypedName",
														"src": "652:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:13",
														"nodeType": "YulTypedName",
														"src": "660:5:13",
														"type": ""
													}
												],
												"src": "615:137:13"
											},
											{
												"body": {
													"nativeSrc": "823:262:13",
													"nodeType": "YulBlock",
													"src": "823:262:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:13",
																"nodeType": "YulBlock",
																"src": "869:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:13"
																			},
																			"nativeSrc": "871:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:13"
																		},
																		"nativeSrc": "871:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:13"
																		},
																		"nativeSrc": "840:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:13",
																		"nodeType": "YulLiteral",
																		"src": "865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:13"
																},
																"nativeSrc": "836:32:13",
																"nodeType": "YulFunctionCall",
																"src": "836:32:13"
															},
															"nativeSrc": "833:119:13",
															"nodeType": "YulIf",
															"src": "833:119:13"
														},
														{
															"nativeSrc": "962:116:13",
															"nodeType": "YulBlock",
															"src": "962:116:13",
															"statements": [
																{
																	"nativeSrc": "977:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:13",
																		"nodeType": "YulLiteral",
																		"src": "991:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:13",
																			"nodeType": "YulTypedName",
																			"src": "981:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:13",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nativeSrc": "1036:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:13"
																		},
																		"nativeSrc": "1016:52:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:13",
														"nodeType": "YulTypedName",
														"src": "793:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:13",
														"nodeType": "YulTypedName",
														"src": "804:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:13",
														"nodeType": "YulTypedName",
														"src": "816:6:13",
														"type": ""
													}
												],
												"src": "758:327:13"
											},
											{
												"body": {
													"nativeSrc": "1133:48:13",
													"nodeType": "YulBlock",
													"src": "1133:48:13",
													"statements": [
														{
															"nativeSrc": "1143:32:13",
															"nodeType": "YulAssignment",
															"src": "1143:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:13"
																		},
																		"nativeSrc": "1161:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:13"
																},
																"nativeSrc": "1154:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:13",
														"nodeType": "YulTypedName",
														"src": "1115:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:13",
														"nodeType": "YulTypedName",
														"src": "1125:7:13",
														"type": ""
													}
												],
												"src": "1091:90:13"
											},
											{
												"body": {
													"nativeSrc": "1246:50:13",
													"nodeType": "YulBlock",
													"src": "1246:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:13"
																		},
																		"nativeSrc": "1268:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:13"
																},
																"nativeSrc": "1256:34:13",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:13"
															},
															"nativeSrc": "1256:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:13",
														"nodeType": "YulTypedName",
														"src": "1234:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:13",
														"nodeType": "YulTypedName",
														"src": "1241:3:13",
														"type": ""
													}
												],
												"src": "1187:109:13"
											},
											{
												"body": {
													"nativeSrc": "1394:118:13",
													"nodeType": "YulBlock",
													"src": "1394:118:13",
													"statements": [
														{
															"nativeSrc": "1404:26:13",
															"nodeType": "YulAssignment",
															"src": "1404:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:13"
																},
																"nativeSrc": "1412:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:13"
																		},
																		"nativeSrc": "1487:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:13"
																},
																"nativeSrc": "1440:65:13",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:13"
															},
															"nativeSrc": "1440:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:13",
														"nodeType": "YulTypedName",
														"src": "1366:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:13",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:13",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1302:210:13"
											},
											{
												"body": {
													"nativeSrc": "1563:81:13",
													"nodeType": "YulBlock",
													"src": "1563:81:13",
													"statements": [
														{
															"nativeSrc": "1573:65:13",
															"nodeType": "YulAssignment",
															"src": "1573:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1588:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1588:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1595:42:13",
																		"nodeType": "YulLiteral",
																		"src": "1595:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1584:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:13"
																},
																"nativeSrc": "1584:54:13",
																"nodeType": "YulFunctionCall",
																"src": "1584:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1518:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:13",
														"nodeType": "YulTypedName",
														"src": "1545:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:13",
														"nodeType": "YulTypedName",
														"src": "1555:7:13",
														"type": ""
													}
												],
												"src": "1518:126:13"
											},
											{
												"body": {
													"nativeSrc": "1695:51:13",
													"nodeType": "YulBlock",
													"src": "1695:51:13",
													"statements": [
														{
															"nativeSrc": "1705:35:13",
															"nodeType": "YulAssignment",
															"src": "1705:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1734:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1734:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1716:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "1716:17:13"
																},
																"nativeSrc": "1716:24:13",
																"nodeType": "YulFunctionCall",
																"src": "1716:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1705:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1650:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1677:5:13",
														"nodeType": "YulTypedName",
														"src": "1677:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1687:7:13",
														"nodeType": "YulTypedName",
														"src": "1687:7:13",
														"type": ""
													}
												],
												"src": "1650:96:13"
											},
											{
												"body": {
													"nativeSrc": "1795:79:13",
													"nodeType": "YulBlock",
													"src": "1795:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1852:16:13",
																"nodeType": "YulBlock",
																"src": "1852:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1861:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1864:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1854:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:13"
																			},
																			"nativeSrc": "1854:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1854:12:13"
																		},
																		"nativeSrc": "1854:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1818:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1818:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1843:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1825:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:13"
																				},
																				"nativeSrc": "1825:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1815:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1815:2:13"
																		},
																		"nativeSrc": "1815:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1815:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1808:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:13"
																},
																"nativeSrc": "1808:43:13",
																"nodeType": "YulFunctionCall",
																"src": "1808:43:13"
															},
															"nativeSrc": "1805:63:13",
															"nodeType": "YulIf",
															"src": "1805:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1752:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1788:5:13",
														"nodeType": "YulTypedName",
														"src": "1788:5:13",
														"type": ""
													}
												],
												"src": "1752:122:13"
											},
											{
												"body": {
													"nativeSrc": "1932:87:13",
													"nodeType": "YulBlock",
													"src": "1932:87:13",
													"statements": [
														{
															"nativeSrc": "1942:29:13",
															"nodeType": "YulAssignment",
															"src": "1942:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1964:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1951:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1951:12:13"
																},
																"nativeSrc": "1951:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1951:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1942:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1942:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2007:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2007:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1980:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1980:26:13"
																},
																"nativeSrc": "1980:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1980:33:13"
															},
															"nativeSrc": "1980:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1980:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1880:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1910:6:13",
														"nodeType": "YulTypedName",
														"src": "1910:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1918:3:13",
														"nodeType": "YulTypedName",
														"src": "1918:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1926:5:13",
														"nodeType": "YulTypedName",
														"src": "1926:5:13",
														"type": ""
													}
												],
												"src": "1880:139:13"
											},
											{
												"body": {
													"nativeSrc": "2091:263:13",
													"nodeType": "YulBlock",
													"src": "2091:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2137:83:13",
																"nodeType": "YulBlock",
																"src": "2137:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2139:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2139:77:13"
																			},
																			"nativeSrc": "2139:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2139:79:13"
																		},
																		"nativeSrc": "2139:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2139:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2112:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2112:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2121:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2121:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2108:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2108:3:13"
																		},
																		"nativeSrc": "2108:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2108:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2133:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2133:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2104:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:13"
																},
																"nativeSrc": "2104:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2104:32:13"
															},
															"nativeSrc": "2101:119:13",
															"nodeType": "YulIf",
															"src": "2101:119:13"
														},
														{
															"nativeSrc": "2230:117:13",
															"nodeType": "YulBlock",
															"src": "2230:117:13",
															"statements": [
																{
																	"nativeSrc": "2245:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2245:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2259:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2259:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2249:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2249:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2274:63:13",
																	"nodeType": "YulAssignment",
																	"src": "2274:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2309:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2309:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2320:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2320:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2305:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2305:3:13"
																				},
																				"nativeSrc": "2305:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2305:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2329:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2329:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2284:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "2284:20:13"
																		},
																		"nativeSrc": "2284:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2284:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2274:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2274:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2025:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2061:9:13",
														"nodeType": "YulTypedName",
														"src": "2061:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2072:7:13",
														"nodeType": "YulTypedName",
														"src": "2072:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2084:6:13",
														"nodeType": "YulTypedName",
														"src": "2084:6:13",
														"type": ""
													}
												],
												"src": "2025:329:13"
											},
											{
												"body": {
													"nativeSrc": "2405:32:13",
													"nodeType": "YulBlock",
													"src": "2405:32:13",
													"statements": [
														{
															"nativeSrc": "2415:16:13",
															"nodeType": "YulAssignment",
															"src": "2415:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "2426:5:13",
																"nodeType": "YulIdentifier",
																"src": "2426:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2415:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2415:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2360:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2387:5:13",
														"nodeType": "YulTypedName",
														"src": "2387:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2397:7:13",
														"nodeType": "YulTypedName",
														"src": "2397:7:13",
														"type": ""
													}
												],
												"src": "2360:77:13"
											},
											{
												"body": {
													"nativeSrc": "2508:53:13",
													"nodeType": "YulBlock",
													"src": "2508:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2525:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2525:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2548:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2548:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2530:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "2530:17:13"
																		},
																		"nativeSrc": "2530:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2530:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2518:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2518:6:13"
																},
																"nativeSrc": "2518:37:13",
																"nodeType": "YulFunctionCall",
																"src": "2518:37:13"
															},
															"nativeSrc": "2518:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "2518:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2443:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2496:5:13",
														"nodeType": "YulTypedName",
														"src": "2496:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2503:3:13",
														"nodeType": "YulTypedName",
														"src": "2503:3:13",
														"type": ""
													}
												],
												"src": "2443:118:13"
											},
											{
												"body": {
													"nativeSrc": "2665:124:13",
													"nodeType": "YulBlock",
													"src": "2665:124:13",
													"statements": [
														{
															"nativeSrc": "2675:26:13",
															"nodeType": "YulAssignment",
															"src": "2675:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2687:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2687:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2698:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2698:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2683:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2683:3:13"
																},
																"nativeSrc": "2683:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2683:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2675:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2675:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2755:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2755:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2768:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2768:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2779:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2779:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2764:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2764:3:13"
																		},
																		"nativeSrc": "2764:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2764:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2711:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "2711:43:13"
																},
																"nativeSrc": "2711:71:13",
																"nodeType": "YulFunctionCall",
																"src": "2711:71:13"
															},
															"nativeSrc": "2711:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "2711:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2567:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2637:9:13",
														"nodeType": "YulTypedName",
														"src": "2637:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2649:6:13",
														"nodeType": "YulTypedName",
														"src": "2649:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2660:4:13",
														"nodeType": "YulTypedName",
														"src": "2660:4:13",
														"type": ""
													}
												],
												"src": "2567:222:13"
											},
											{
												"body": {
													"nativeSrc": "2840:32:13",
													"nodeType": "YulBlock",
													"src": "2840:32:13",
													"statements": [
														{
															"nativeSrc": "2850:16:13",
															"nodeType": "YulAssignment",
															"src": "2850:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "2861:5:13",
																"nodeType": "YulIdentifier",
																"src": "2861:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2850:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2850:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "2795:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2822:5:13",
														"nodeType": "YulTypedName",
														"src": "2822:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2832:7:13",
														"nodeType": "YulTypedName",
														"src": "2832:7:13",
														"type": ""
													}
												],
												"src": "2795:77:13"
											},
											{
												"body": {
													"nativeSrc": "2921:79:13",
													"nodeType": "YulBlock",
													"src": "2921:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2978:16:13",
																"nodeType": "YulBlock",
																"src": "2978:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2987:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2987:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2990:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2990:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2980:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2980:6:13"
																			},
																			"nativeSrc": "2980:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2980:12:13"
																		},
																		"nativeSrc": "2980:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2980:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2944:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2944:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2969:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2969:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "2951:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "2951:17:13"
																				},
																				"nativeSrc": "2951:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2951:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2941:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2941:2:13"
																		},
																		"nativeSrc": "2941:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2941:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2934:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2934:6:13"
																},
																"nativeSrc": "2934:43:13",
																"nodeType": "YulFunctionCall",
																"src": "2934:43:13"
															},
															"nativeSrc": "2931:63:13",
															"nodeType": "YulIf",
															"src": "2931:63:13"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "2878:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2914:5:13",
														"nodeType": "YulTypedName",
														"src": "2914:5:13",
														"type": ""
													}
												],
												"src": "2878:122:13"
											},
											{
												"body": {
													"nativeSrc": "3058:87:13",
													"nodeType": "YulBlock",
													"src": "3058:87:13",
													"statements": [
														{
															"nativeSrc": "3068:29:13",
															"nodeType": "YulAssignment",
															"src": "3068:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3090:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3090:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3077:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3077:12:13"
																},
																"nativeSrc": "3077:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3077:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3068:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3068:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3133:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3133:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "3106:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3106:26:13"
																},
																"nativeSrc": "3106:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3106:33:13"
															},
															"nativeSrc": "3106:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3106:33:13"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "3006:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3036:6:13",
														"nodeType": "YulTypedName",
														"src": "3036:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3044:3:13",
														"nodeType": "YulTypedName",
														"src": "3044:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3052:5:13",
														"nodeType": "YulTypedName",
														"src": "3052:5:13",
														"type": ""
													}
												],
												"src": "3006:139:13"
											},
											{
												"body": {
													"nativeSrc": "3217:263:13",
													"nodeType": "YulBlock",
													"src": "3217:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3263:83:13",
																"nodeType": "YulBlock",
																"src": "3263:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3265:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3265:77:13"
																			},
																			"nativeSrc": "3265:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3265:79:13"
																		},
																		"nativeSrc": "3265:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3265:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3238:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3238:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3247:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3247:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3234:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3234:3:13"
																		},
																		"nativeSrc": "3234:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3234:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3259:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3259:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3230:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3230:3:13"
																},
																"nativeSrc": "3230:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3230:32:13"
															},
															"nativeSrc": "3227:119:13",
															"nodeType": "YulIf",
															"src": "3227:119:13"
														},
														{
															"nativeSrc": "3356:117:13",
															"nodeType": "YulBlock",
															"src": "3356:117:13",
															"statements": [
																{
																	"nativeSrc": "3371:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3371:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3385:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3385:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3375:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3375:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3400:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3400:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3435:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3435:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3446:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3446:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3431:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3431:3:13"
																				},
																				"nativeSrc": "3431:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3431:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3455:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3455:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3410:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3410:20:13"
																		},
																		"nativeSrc": "3410:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3410:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3400:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3400:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "3151:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:13",
														"nodeType": "YulTypedName",
														"src": "3187:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3198:7:13",
														"nodeType": "YulTypedName",
														"src": "3198:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3210:6:13",
														"nodeType": "YulTypedName",
														"src": "3210:6:13",
														"type": ""
													}
												],
												"src": "3151:329:13"
											},
											{
												"body": {
													"nativeSrc": "3551:53:13",
													"nodeType": "YulBlock",
													"src": "3551:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3568:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3568:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3591:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3591:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "3573:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "3573:17:13"
																		},
																		"nativeSrc": "3573:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3573:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3561:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3561:6:13"
																},
																"nativeSrc": "3561:37:13",
																"nodeType": "YulFunctionCall",
																"src": "3561:37:13"
															},
															"nativeSrc": "3561:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "3561:37:13"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "3486:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3539:5:13",
														"nodeType": "YulTypedName",
														"src": "3539:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3546:3:13",
														"nodeType": "YulTypedName",
														"src": "3546:3:13",
														"type": ""
													}
												],
												"src": "3486:118:13"
											},
											{
												"body": {
													"nativeSrc": "3708:124:13",
													"nodeType": "YulBlock",
													"src": "3708:124:13",
													"statements": [
														{
															"nativeSrc": "3718:26:13",
															"nodeType": "YulAssignment",
															"src": "3718:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3730:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3730:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3726:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3726:3:13"
																},
																"nativeSrc": "3726:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3726:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3718:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3718:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3798:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3798:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3811:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3811:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3822:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3822:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3807:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3807:3:13"
																		},
																		"nativeSrc": "3807:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3807:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "3754:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "3754:43:13"
																},
																"nativeSrc": "3754:71:13",
																"nodeType": "YulFunctionCall",
																"src": "3754:71:13"
															},
															"nativeSrc": "3754:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "3754:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "3610:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3680:9:13",
														"nodeType": "YulTypedName",
														"src": "3680:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3692:6:13",
														"nodeType": "YulTypedName",
														"src": "3692:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3703:4:13",
														"nodeType": "YulTypedName",
														"src": "3703:4:13",
														"type": ""
													}
												],
												"src": "3610:222:13"
											},
											{
												"body": {
													"nativeSrc": "3921:391:13",
													"nodeType": "YulBlock",
													"src": "3921:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3967:83:13",
																"nodeType": "YulBlock",
																"src": "3967:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3969:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3969:77:13"
																			},
																			"nativeSrc": "3969:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3969:79:13"
																		},
																		"nativeSrc": "3969:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3969:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3942:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3942:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3951:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3951:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3938:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3938:3:13"
																		},
																		"nativeSrc": "3938:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3938:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3963:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3963:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3934:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3934:3:13"
																},
																"nativeSrc": "3934:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3934:32:13"
															},
															"nativeSrc": "3931:119:13",
															"nodeType": "YulIf",
															"src": "3931:119:13"
														},
														{
															"nativeSrc": "4060:117:13",
															"nodeType": "YulBlock",
															"src": "4060:117:13",
															"statements": [
																{
																	"nativeSrc": "4075:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4075:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4089:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4089:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4079:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4079:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4104:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4104:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4139:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4139:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4150:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4150:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4135:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4135:3:13"
																				},
																				"nativeSrc": "4135:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4135:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4159:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4159:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "4114:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4114:20:13"
																		},
																		"nativeSrc": "4114:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4114:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4104:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4104:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4187:118:13",
															"nodeType": "YulBlock",
															"src": "4187:118:13",
															"statements": [
																{
																	"nativeSrc": "4202:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4202:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4216:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4216:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4206:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4206:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4232:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4232:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4267:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4267:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4278:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4278:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4263:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4263:3:13"
																				},
																				"nativeSrc": "4263:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4263:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4287:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4287:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4242:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4242:20:13"
																		},
																		"nativeSrc": "4242:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4242:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4232:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4232:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "3838:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3883:9:13",
														"nodeType": "YulTypedName",
														"src": "3883:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3894:7:13",
														"nodeType": "YulTypedName",
														"src": "3894:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3906:6:13",
														"nodeType": "YulTypedName",
														"src": "3906:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3914:6:13",
														"nodeType": "YulTypedName",
														"src": "3914:6:13",
														"type": ""
													}
												],
												"src": "3838:474:13"
											},
											{
												"body": {
													"nativeSrc": "4361:79:13",
													"nodeType": "YulBlock",
													"src": "4361:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4418:16:13",
																"nodeType": "YulBlock",
																"src": "4418:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4427:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4427:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4430:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4430:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4420:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4420:6:13"
																			},
																			"nativeSrc": "4420:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4420:12:13"
																		},
																		"nativeSrc": "4420:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4420:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4384:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4384:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4409:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4409:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4391:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "4391:17:13"
																				},
																				"nativeSrc": "4391:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4391:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4381:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4381:2:13"
																		},
																		"nativeSrc": "4381:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4381:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4374:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4374:6:13"
																},
																"nativeSrc": "4374:43:13",
																"nodeType": "YulFunctionCall",
																"src": "4374:43:13"
															},
															"nativeSrc": "4371:63:13",
															"nodeType": "YulIf",
															"src": "4371:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "4318:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4354:5:13",
														"nodeType": "YulTypedName",
														"src": "4354:5:13",
														"type": ""
													}
												],
												"src": "4318:122:13"
											},
											{
												"body": {
													"nativeSrc": "4498:87:13",
													"nodeType": "YulBlock",
													"src": "4498:87:13",
													"statements": [
														{
															"nativeSrc": "4508:29:13",
															"nodeType": "YulAssignment",
															"src": "4508:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4530:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4530:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4517:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "4517:12:13"
																},
																"nativeSrc": "4517:20:13",
																"nodeType": "YulFunctionCall",
																"src": "4517:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4508:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4508:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4573:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4573:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4546:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "4546:26:13"
																},
																"nativeSrc": "4546:33:13",
																"nodeType": "YulFunctionCall",
																"src": "4546:33:13"
															},
															"nativeSrc": "4546:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "4546:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "4446:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4476:6:13",
														"nodeType": "YulTypedName",
														"src": "4476:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4484:3:13",
														"nodeType": "YulTypedName",
														"src": "4484:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4492:5:13",
														"nodeType": "YulTypedName",
														"src": "4492:5:13",
														"type": ""
													}
												],
												"src": "4446:139:13"
											},
											{
												"body": {
													"nativeSrc": "4674:391:13",
													"nodeType": "YulBlock",
													"src": "4674:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4720:83:13",
																"nodeType": "YulBlock",
																"src": "4720:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4722:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4722:77:13"
																			},
																			"nativeSrc": "4722:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4722:79:13"
																		},
																		"nativeSrc": "4722:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4722:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4695:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4695:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4704:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4704:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4691:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4691:3:13"
																		},
																		"nativeSrc": "4691:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4691:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4716:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4716:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4687:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4687:3:13"
																},
																"nativeSrc": "4687:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4687:32:13"
															},
															"nativeSrc": "4684:119:13",
															"nodeType": "YulIf",
															"src": "4684:119:13"
														},
														{
															"nativeSrc": "4813:117:13",
															"nodeType": "YulBlock",
															"src": "4813:117:13",
															"statements": [
																{
																	"nativeSrc": "4828:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4828:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4842:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4842:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4832:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4832:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4857:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4857:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4892:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4892:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4903:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4903:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4888:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4888:3:13"
																				},
																				"nativeSrc": "4888:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4888:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4912:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4912:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4867:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4867:20:13"
																		},
																		"nativeSrc": "4867:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4867:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4857:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4857:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4940:118:13",
															"nodeType": "YulBlock",
															"src": "4940:118:13",
															"statements": [
																{
																	"nativeSrc": "4955:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4955:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4969:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4969:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4959:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4959:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4985:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4985:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5020:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5020:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5031:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5031:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5016:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5016:3:13"
																				},
																				"nativeSrc": "5016:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5016:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5040:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5040:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4995:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4995:20:13"
																		},
																		"nativeSrc": "4995:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4995:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4985:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4985:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4591:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4636:9:13",
														"nodeType": "YulTypedName",
														"src": "4636:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4647:7:13",
														"nodeType": "YulTypedName",
														"src": "4647:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4659:6:13",
														"nodeType": "YulTypedName",
														"src": "4659:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4667:6:13",
														"nodeType": "YulTypedName",
														"src": "4667:6:13",
														"type": ""
													}
												],
												"src": "4591:474:13"
											},
											{
												"body": {
													"nativeSrc": "5136:53:13",
													"nodeType": "YulBlock",
													"src": "5136:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5153:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5153:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5176:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5176:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5158:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "5158:17:13"
																		},
																		"nativeSrc": "5158:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5158:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5146:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5146:6:13"
																},
																"nativeSrc": "5146:37:13",
																"nodeType": "YulFunctionCall",
																"src": "5146:37:13"
															},
															"nativeSrc": "5146:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "5146:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5071:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5124:5:13",
														"nodeType": "YulTypedName",
														"src": "5124:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5131:3:13",
														"nodeType": "YulTypedName",
														"src": "5131:3:13",
														"type": ""
													}
												],
												"src": "5071:118:13"
											},
											{
												"body": {
													"nativeSrc": "5293:124:13",
													"nodeType": "YulBlock",
													"src": "5293:124:13",
													"statements": [
														{
															"nativeSrc": "5303:26:13",
															"nodeType": "YulAssignment",
															"src": "5303:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5315:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5315:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5326:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5326:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5311:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5311:3:13"
																},
																"nativeSrc": "5311:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5311:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5303:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5303:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5383:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5383:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5396:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5396:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5407:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5407:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5392:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5392:3:13"
																		},
																		"nativeSrc": "5392:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5392:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5339:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5339:43:13"
																},
																"nativeSrc": "5339:71:13",
																"nodeType": "YulFunctionCall",
																"src": "5339:71:13"
															},
															"nativeSrc": "5339:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "5339:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5195:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5265:9:13",
														"nodeType": "YulTypedName",
														"src": "5265:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5277:6:13",
														"nodeType": "YulTypedName",
														"src": "5277:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5288:4:13",
														"nodeType": "YulTypedName",
														"src": "5288:4:13",
														"type": ""
													}
												],
												"src": "5195:222:13"
											},
											{
												"body": {
													"nativeSrc": "5506:391:13",
													"nodeType": "YulBlock",
													"src": "5506:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5552:83:13",
																"nodeType": "YulBlock",
																"src": "5552:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5554:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "5554:77:13"
																			},
																			"nativeSrc": "5554:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5554:79:13"
																		},
																		"nativeSrc": "5554:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5554:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5527:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5527:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5536:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5536:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5523:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5523:3:13"
																		},
																		"nativeSrc": "5523:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5523:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5519:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5519:3:13"
																},
																"nativeSrc": "5519:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5519:32:13"
															},
															"nativeSrc": "5516:119:13",
															"nodeType": "YulIf",
															"src": "5516:119:13"
														},
														{
															"nativeSrc": "5645:117:13",
															"nodeType": "YulBlock",
															"src": "5645:117:13",
															"statements": [
																{
																	"nativeSrc": "5660:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5660:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5674:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5674:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5664:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5664:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5689:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5689:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5724:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5724:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5735:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5735:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5720:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5720:3:13"
																				},
																				"nativeSrc": "5720:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5720:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5744:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5744:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5699:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5699:20:13"
																		},
																		"nativeSrc": "5699:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5699:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5689:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5689:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5772:118:13",
															"nodeType": "YulBlock",
															"src": "5772:118:13",
															"statements": [
																{
																	"nativeSrc": "5787:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5787:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5801:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5801:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5791:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5791:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5817:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5817:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5852:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5852:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5863:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5863:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5848:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5848:3:13"
																				},
																				"nativeSrc": "5848:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5848:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5827:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5827:20:13"
																		},
																		"nativeSrc": "5827:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5827:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5817:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5817:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5423:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5468:9:13",
														"nodeType": "YulTypedName",
														"src": "5468:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5479:7:13",
														"nodeType": "YulTypedName",
														"src": "5479:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5491:6:13",
														"nodeType": "YulTypedName",
														"src": "5491:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5499:6:13",
														"nodeType": "YulTypedName",
														"src": "5499:6:13",
														"type": ""
													}
												],
												"src": "5423:474:13"
											},
											{
												"body": {
													"nativeSrc": "5977:40:13",
													"nodeType": "YulBlock",
													"src": "5977:40:13",
													"statements": [
														{
															"nativeSrc": "5988:22:13",
															"nodeType": "YulAssignment",
															"src": "5988:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6004:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6004:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5998:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5998:5:13"
																},
																"nativeSrc": "5998:12:13",
																"nodeType": "YulFunctionCall",
																"src": "5998:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5988:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5988:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "5903:114:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5960:5:13",
														"nodeType": "YulTypedName",
														"src": "5960:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5970:6:13",
														"nodeType": "YulTypedName",
														"src": "5970:6:13",
														"type": ""
													}
												],
												"src": "5903:114:13"
											},
											{
												"body": {
													"nativeSrc": "6134:73:13",
													"nodeType": "YulBlock",
													"src": "6134:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6151:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6151:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6156:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6156:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6144:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6144:6:13"
																},
																"nativeSrc": "6144:19:13",
																"nodeType": "YulFunctionCall",
																"src": "6144:19:13"
															},
															"nativeSrc": "6144:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "6144:19:13"
														},
														{
															"nativeSrc": "6172:29:13",
															"nodeType": "YulAssignment",
															"src": "6172:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6191:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6191:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6196:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6196:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6187:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6187:3:13"
																},
																"nativeSrc": "6187:14:13",
																"nodeType": "YulFunctionCall",
																"src": "6187:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6172:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "6172:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6023:184:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6106:3:13",
														"nodeType": "YulTypedName",
														"src": "6106:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6111:6:13",
														"nodeType": "YulTypedName",
														"src": "6111:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6122:11:13",
														"nodeType": "YulTypedName",
														"src": "6122:11:13",
														"type": ""
													}
												],
												"src": "6023:184:13"
											},
											{
												"body": {
													"nativeSrc": "6285:60:13",
													"nodeType": "YulBlock",
													"src": "6285:60:13",
													"statements": [
														{
															"nativeSrc": "6295:11:13",
															"nodeType": "YulAssignment",
															"src": "6295:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "6303:3:13",
																"nodeType": "YulIdentifier",
																"src": "6303:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6295:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6295:4:13"
																}
															]
														},
														{
															"nativeSrc": "6316:22:13",
															"nodeType": "YulAssignment",
															"src": "6316:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6328:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6328:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6333:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6333:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6324:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6324:3:13"
																},
																"nativeSrc": "6324:14:13",
																"nodeType": "YulFunctionCall",
																"src": "6324:14:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6316:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6316:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "6213:132:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6272:3:13",
														"nodeType": "YulTypedName",
														"src": "6272:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6280:4:13",
														"nodeType": "YulTypedName",
														"src": "6280:4:13",
														"type": ""
													}
												],
												"src": "6213:132:13"
											},
											{
												"body": {
													"nativeSrc": "6406:53:13",
													"nodeType": "YulBlock",
													"src": "6406:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6423:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6423:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6446:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6446:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6428:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "6428:17:13"
																		},
																		"nativeSrc": "6428:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6428:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6416:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6416:6:13"
																},
																"nativeSrc": "6416:37:13",
																"nodeType": "YulFunctionCall",
																"src": "6416:37:13"
															},
															"nativeSrc": "6416:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "6416:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "6351:108:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6394:5:13",
														"nodeType": "YulTypedName",
														"src": "6394:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6401:3:13",
														"nodeType": "YulTypedName",
														"src": "6401:3:13",
														"type": ""
													}
												],
												"src": "6351:108:13"
											},
											{
												"body": {
													"nativeSrc": "6545:99:13",
													"nodeType": "YulBlock",
													"src": "6545:99:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6589:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6589:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6597:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6597:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nativeSrc": "6555:33:13",
																	"nodeType": "YulIdentifier",
																	"src": "6555:33:13"
																},
																"nativeSrc": "6555:46:13",
																"nodeType": "YulFunctionCall",
																"src": "6555:46:13"
															},
															"nativeSrc": "6555:46:13",
															"nodeType": "YulExpressionStatement",
															"src": "6555:46:13"
														},
														{
															"nativeSrc": "6610:28:13",
															"nodeType": "YulAssignment",
															"src": "6610:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6628:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6628:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6633:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6633:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6624:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6624:3:13"
																},
																"nativeSrc": "6624:14:13",
																"nodeType": "YulFunctionCall",
																"src": "6624:14:13"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "6610:10:13",
																	"nodeType": "YulIdentifier",
																	"src": "6610:10:13"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nativeSrc": "6465:179:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "6518:6:13",
														"nodeType": "YulTypedName",
														"src": "6518:6:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6526:3:13",
														"nodeType": "YulTypedName",
														"src": "6526:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "6534:10:13",
														"nodeType": "YulTypedName",
														"src": "6534:10:13",
														"type": ""
													}
												],
												"src": "6465:179:13"
											},
											{
												"body": {
													"nativeSrc": "6725:38:13",
													"nodeType": "YulBlock",
													"src": "6725:38:13",
													"statements": [
														{
															"nativeSrc": "6735:22:13",
															"nodeType": "YulAssignment",
															"src": "6735:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6747:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6747:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6752:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6752:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6743:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6743:3:13"
																},
																"nativeSrc": "6743:14:13",
																"nodeType": "YulFunctionCall",
																"src": "6743:14:13"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "6735:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6735:4:13"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "6650:113:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6712:3:13",
														"nodeType": "YulTypedName",
														"src": "6712:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "6720:4:13",
														"nodeType": "YulTypedName",
														"src": "6720:4:13",
														"type": ""
													}
												],
												"src": "6650:113:13"
											},
											{
												"body": {
													"nativeSrc": "6923:608:13",
													"nodeType": "YulBlock",
													"src": "6923:608:13",
													"statements": [
														{
															"nativeSrc": "6933:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6933:68:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6995:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6995:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "6947:47:13",
																	"nodeType": "YulIdentifier",
																	"src": "6947:47:13"
																},
																"nativeSrc": "6947:54:13",
																"nodeType": "YulFunctionCall",
																"src": "6947:54:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6937:6:13",
																	"nodeType": "YulTypedName",
																	"src": "6937:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7010:93:13",
															"nodeType": "YulAssignment",
															"src": "7010:93:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7091:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7091:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7096:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7096:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7017:73:13",
																	"nodeType": "YulIdentifier",
																	"src": "7017:73:13"
																},
																"nativeSrc": "7017:86:13",
																"nodeType": "YulFunctionCall",
																"src": "7017:86:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7010:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7010:3:13"
																}
															]
														},
														{
															"nativeSrc": "7112:71:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7112:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7177:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7177:5:13"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "7127:49:13",
																	"nodeType": "YulIdentifier",
																	"src": "7127:49:13"
																},
																"nativeSrc": "7127:56:13",
																"nodeType": "YulFunctionCall",
																"src": "7127:56:13"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "7116:7:13",
																	"nodeType": "YulTypedName",
																	"src": "7116:7:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7192:21:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7192:21:13",
															"value": {
																"name": "baseRef",
																"nativeSrc": "7206:7:13",
																"nodeType": "YulIdentifier",
																"src": "7206:7:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "7196:6:13",
																	"nodeType": "YulTypedName",
																	"src": "7196:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7282:224:13",
																"nodeType": "YulBlock",
																"src": "7282:224:13",
																"statements": [
																	{
																		"nativeSrc": "7296:34:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7296:34:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7323:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "7323:6:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7317:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "7317:5:13"
																			},
																			"nativeSrc": "7317:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7317:13:13"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "7300:13:13",
																				"nodeType": "YulTypedName",
																				"src": "7300:13:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7343:70:13",
																		"nodeType": "YulAssignment",
																		"src": "7343:70:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "7394:13:13",
																					"nodeType": "YulIdentifier",
																					"src": "7394:13:13"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "7409:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7409:3:13"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nativeSrc": "7350:43:13",
																				"nodeType": "YulIdentifier",
																				"src": "7350:43:13"
																			},
																			"nativeSrc": "7350:63:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7350:63:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "7343:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7343:3:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7426:70:13",
																		"nodeType": "YulAssignment",
																		"src": "7426:70:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7489:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "7489:6:13"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nativeSrc": "7436:52:13",
																				"nodeType": "YulIdentifier",
																				"src": "7436:52:13"
																			},
																			"nativeSrc": "7436:60:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7436:60:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7426:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7426:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7244:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7244:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7247:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7247:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7241:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7241:2:13"
																},
																"nativeSrc": "7241:13:13",
																"nodeType": "YulFunctionCall",
																"src": "7241:13:13"
															},
															"nativeSrc": "7222:284:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7255:18:13",
																"nodeType": "YulBlock",
																"src": "7255:18:13",
																"statements": [
																	{
																		"nativeSrc": "7257:14:13",
																		"nodeType": "YulAssignment",
																		"src": "7257:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7266:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "7266:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7269:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7269:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7262:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7262:3:13"
																			},
																			"nativeSrc": "7262:9:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7262:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7257:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "7257:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7226:14:13",
																"nodeType": "YulBlock",
																"src": "7226:14:13",
																"statements": [
																	{
																		"nativeSrc": "7228:10:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7228:10:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7237:1:13",
																			"nodeType": "YulLiteral",
																			"src": "7237:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "7232:1:13",
																				"nodeType": "YulTypedName",
																				"src": "7232:1:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7222:284:13"
														},
														{
															"nativeSrc": "7515:10:13",
															"nodeType": "YulAssignment",
															"src": "7515:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "7522:3:13",
																"nodeType": "YulIdentifier",
																"src": "7522:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7515:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7515:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6799:732:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6902:5:13",
														"nodeType": "YulTypedName",
														"src": "6902:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6909:3:13",
														"nodeType": "YulTypedName",
														"src": "6909:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6918:3:13",
														"nodeType": "YulTypedName",
														"src": "6918:3:13",
														"type": ""
													}
												],
												"src": "6799:732:13"
											},
											{
												"body": {
													"nativeSrc": "7685:225:13",
													"nodeType": "YulBlock",
													"src": "7685:225:13",
													"statements": [
														{
															"nativeSrc": "7695:26:13",
															"nodeType": "YulAssignment",
															"src": "7695:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7707:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7707:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7718:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7718:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7703:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7703:3:13"
																},
																"nativeSrc": "7703:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7703:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7695:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7695:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7742:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7742:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7753:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7753:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7738:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7738:3:13"
																		},
																		"nativeSrc": "7738:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7738:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7761:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "7761:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7767:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7767:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7757:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7757:3:13"
																		},
																		"nativeSrc": "7757:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7757:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7731:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7731:6:13"
																},
																"nativeSrc": "7731:47:13",
																"nodeType": "YulFunctionCall",
																"src": "7731:47:13"
															},
															"nativeSrc": "7731:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "7731:47:13"
														},
														{
															"nativeSrc": "7787:116:13",
															"nodeType": "YulAssignment",
															"src": "7787:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7889:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7889:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7898:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7898:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7795:93:13",
																	"nodeType": "YulIdentifier",
																	"src": "7795:93:13"
																},
																"nativeSrc": "7795:108:13",
																"nodeType": "YulFunctionCall",
																"src": "7795:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7787:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7787:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "7537:373:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7657:9:13",
														"nodeType": "YulTypedName",
														"src": "7657:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7669:6:13",
														"nodeType": "YulTypedName",
														"src": "7669:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7680:4:13",
														"nodeType": "YulTypedName",
														"src": "7680:4:13",
														"type": ""
													}
												],
												"src": "7537:373:13"
											},
											{
												"body": {
													"nativeSrc": "7982:263:13",
													"nodeType": "YulBlock",
													"src": "7982:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8028:83:13",
																"nodeType": "YulBlock",
																"src": "8028:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8030:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8030:77:13"
																			},
																			"nativeSrc": "8030:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8030:79:13"
																		},
																		"nativeSrc": "8030:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8030:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8003:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8003:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8012:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8012:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7999:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7999:3:13"
																		},
																		"nativeSrc": "7999:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7999:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8024:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8024:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7995:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7995:3:13"
																},
																"nativeSrc": "7995:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7995:32:13"
															},
															"nativeSrc": "7992:119:13",
															"nodeType": "YulIf",
															"src": "7992:119:13"
														},
														{
															"nativeSrc": "8121:117:13",
															"nodeType": "YulBlock",
															"src": "8121:117:13",
															"statements": [
																{
																	"nativeSrc": "8136:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8136:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8150:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8150:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8140:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8140:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8165:63:13",
																	"nodeType": "YulAssignment",
																	"src": "8165:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8200:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8200:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8211:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8211:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8196:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8196:3:13"
																				},
																				"nativeSrc": "8196:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8196:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8220:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8220:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8175:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "8175:20:13"
																		},
																		"nativeSrc": "8175:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8175:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8165:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8165:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "7916:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7952:9:13",
														"nodeType": "YulTypedName",
														"src": "7952:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7963:7:13",
														"nodeType": "YulTypedName",
														"src": "7963:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7975:6:13",
														"nodeType": "YulTypedName",
														"src": "7975:6:13",
														"type": ""
													}
												],
												"src": "7916:329:13"
											},
											{
												"body": {
													"nativeSrc": "8279:152:13",
													"nodeType": "YulBlock",
													"src": "8279:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8296:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8296:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8299:77:13",
																		"nodeType": "YulLiteral",
																		"src": "8299:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8289:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8289:6:13"
																},
																"nativeSrc": "8289:88:13",
																"nodeType": "YulFunctionCall",
																"src": "8289:88:13"
															},
															"nativeSrc": "8289:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "8289:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8393:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8393:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8396:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8396:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8386:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8386:6:13"
																},
																"nativeSrc": "8386:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8386:15:13"
															},
															"nativeSrc": "8386:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "8386:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8417:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8417:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8420:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8420:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8410:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8410:6:13"
																},
																"nativeSrc": "8410:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8410:15:13"
															},
															"nativeSrc": "8410:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "8410:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8251:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "8251:180:13"
											},
											{
												"body": {
													"nativeSrc": "8481:147:13",
													"nodeType": "YulBlock",
													"src": "8481:147:13",
													"statements": [
														{
															"nativeSrc": "8491:25:13",
															"nodeType": "YulAssignment",
															"src": "8491:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8514:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8514:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8496:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "8496:17:13"
																},
																"nativeSrc": "8496:20:13",
																"nodeType": "YulFunctionCall",
																"src": "8496:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8491:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "8491:1:13"
																}
															]
														},
														{
															"nativeSrc": "8525:25:13",
															"nodeType": "YulAssignment",
															"src": "8525:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8548:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8548:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8530:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "8530:17:13"
																},
																"nativeSrc": "8530:20:13",
																"nodeType": "YulFunctionCall",
																"src": "8530:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8525:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "8525:1:13"
																}
															]
														},
														{
															"nativeSrc": "8559:16:13",
															"nodeType": "YulAssignment",
															"src": "8559:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8570:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8570:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8573:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8573:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8566:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8566:3:13"
																},
																"nativeSrc": "8566:9:13",
																"nodeType": "YulFunctionCall",
																"src": "8566:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8559:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8559:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8599:22:13",
																"nodeType": "YulBlock",
																"src": "8599:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8601:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8601:16:13"
																			},
																			"nativeSrc": "8601:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8601:18:13"
																		},
																		"nativeSrc": "8601:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8601:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8591:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8591:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8594:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8594:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8588:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8588:2:13"
																},
																"nativeSrc": "8588:10:13",
																"nodeType": "YulFunctionCall",
																"src": "8588:10:13"
															},
															"nativeSrc": "8585:36:13",
															"nodeType": "YulIf",
															"src": "8585:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8437:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8468:1:13",
														"nodeType": "YulTypedName",
														"src": "8468:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8471:1:13",
														"nodeType": "YulTypedName",
														"src": "8471:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8477:3:13",
														"nodeType": "YulTypedName",
														"src": "8477:3:13",
														"type": ""
													}
												],
												"src": "8437:191:13"
											},
											{
												"body": {
													"nativeSrc": "8679:149:13",
													"nodeType": "YulBlock",
													"src": "8679:149:13",
													"statements": [
														{
															"nativeSrc": "8689:25:13",
															"nodeType": "YulAssignment",
															"src": "8689:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8712:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8712:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8694:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "8694:17:13"
																},
																"nativeSrc": "8694:20:13",
																"nodeType": "YulFunctionCall",
																"src": "8694:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8689:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "8689:1:13"
																}
															]
														},
														{
															"nativeSrc": "8723:25:13",
															"nodeType": "YulAssignment",
															"src": "8723:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8746:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8746:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8728:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "8728:17:13"
																},
																"nativeSrc": "8728:20:13",
																"nodeType": "YulFunctionCall",
																"src": "8728:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8723:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "8723:1:13"
																}
															]
														},
														{
															"nativeSrc": "8757:17:13",
															"nodeType": "YulAssignment",
															"src": "8757:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8769:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8769:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8772:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8772:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8765:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8765:3:13"
																},
																"nativeSrc": "8765:9:13",
																"nodeType": "YulFunctionCall",
																"src": "8765:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8757:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8757:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8799:22:13",
																"nodeType": "YulBlock",
																"src": "8799:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8801:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8801:16:13"
																			},
																			"nativeSrc": "8801:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8801:18:13"
																		},
																		"nativeSrc": "8801:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8801:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8790:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8790:4:13"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8796:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8796:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8787:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8787:2:13"
																},
																"nativeSrc": "8787:11:13",
																"nodeType": "YulFunctionCall",
																"src": "8787:11:13"
															},
															"nativeSrc": "8784:37:13",
															"nodeType": "YulIf",
															"src": "8784:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8634:194:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8665:1:13",
														"nodeType": "YulTypedName",
														"src": "8665:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8668:1:13",
														"nodeType": "YulTypedName",
														"src": "8668:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8674:4:13",
														"nodeType": "YulTypedName",
														"src": "8674:4:13",
														"type": ""
													}
												],
												"src": "8634:194:13"
											},
											{
												"body": {
													"nativeSrc": "8960:206:13",
													"nodeType": "YulBlock",
													"src": "8960:206:13",
													"statements": [
														{
															"nativeSrc": "8970:26:13",
															"nodeType": "YulAssignment",
															"src": "8970:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8982:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8982:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8993:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8993:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8978:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8978:3:13"
																},
																"nativeSrc": "8978:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8978:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8970:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8970:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9050:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9050:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9063:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9063:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9074:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9074:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9059:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9059:3:13"
																		},
																		"nativeSrc": "9059:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9059:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9006:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "9006:43:13"
																},
																"nativeSrc": "9006:71:13",
																"nodeType": "YulFunctionCall",
																"src": "9006:71:13"
															},
															"nativeSrc": "9006:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "9006:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9131:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9131:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9144:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9144:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9155:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9155:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9140:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9140:3:13"
																		},
																		"nativeSrc": "9140:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9140:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9087:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "9087:43:13"
																},
																"nativeSrc": "9087:72:13",
																"nodeType": "YulFunctionCall",
																"src": "9087:72:13"
															},
															"nativeSrc": "9087:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "9087:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8834:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8924:9:13",
														"nodeType": "YulTypedName",
														"src": "8924:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8936:6:13",
														"nodeType": "YulTypedName",
														"src": "8936:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8944:6:13",
														"nodeType": "YulTypedName",
														"src": "8944:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8955:4:13",
														"nodeType": "YulTypedName",
														"src": "8955:4:13",
														"type": ""
													}
												],
												"src": "8834:332:13"
											},
											{
												"body": {
													"nativeSrc": "9215:190:13",
													"nodeType": "YulBlock",
													"src": "9215:190:13",
													"statements": [
														{
															"nativeSrc": "9225:33:13",
															"nodeType": "YulAssignment",
															"src": "9225:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9252:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9252:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9234:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "9234:17:13"
																},
																"nativeSrc": "9234:24:13",
																"nodeType": "YulFunctionCall",
																"src": "9234:24:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9225:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9225:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9348:22:13",
																"nodeType": "YulBlock",
																"src": "9348:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9350:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "9350:16:13"
																			},
																			"nativeSrc": "9350:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9350:18:13"
																		},
																		"nativeSrc": "9350:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9350:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9273:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9273:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9280:66:13",
																		"nodeType": "YulLiteral",
																		"src": "9280:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9270:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9270:2:13"
																},
																"nativeSrc": "9270:77:13",
																"nodeType": "YulFunctionCall",
																"src": "9270:77:13"
															},
															"nativeSrc": "9267:103:13",
															"nodeType": "YulIf",
															"src": "9267:103:13"
														},
														{
															"nativeSrc": "9379:20:13",
															"nodeType": "YulAssignment",
															"src": "9379:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9390:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9390:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9397:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9397:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9386:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9386:3:13"
																},
																"nativeSrc": "9386:13:13",
																"nodeType": "YulFunctionCall",
																"src": "9386:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9379:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9379:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "9172:233:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9201:5:13",
														"nodeType": "YulTypedName",
														"src": "9201:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9211:3:13",
														"nodeType": "YulTypedName",
														"src": "9211:3:13",
														"type": ""
													}
												],
												"src": "9172:233:13"
											},
											{
												"body": {
													"nativeSrc": "9464:32:13",
													"nodeType": "YulBlock",
													"src": "9464:32:13",
													"statements": [
														{
															"nativeSrc": "9474:16:13",
															"nodeType": "YulAssignment",
															"src": "9474:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "9485:5:13",
																"nodeType": "YulIdentifier",
																"src": "9485:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9474:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "9474:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "9411:85:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9446:5:13",
														"nodeType": "YulTypedName",
														"src": "9446:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9456:7:13",
														"nodeType": "YulTypedName",
														"src": "9456:7:13",
														"type": ""
													}
												],
												"src": "9411:85:13"
											},
											{
												"body": {
													"nativeSrc": "9534:28:13",
													"nodeType": "YulBlock",
													"src": "9534:28:13",
													"statements": [
														{
															"nativeSrc": "9544:12:13",
															"nodeType": "YulAssignment",
															"src": "9544:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "9551:5:13",
																"nodeType": "YulIdentifier",
																"src": "9551:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9544:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9544:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "9502:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9520:5:13",
														"nodeType": "YulTypedName",
														"src": "9520:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9530:3:13",
														"nodeType": "YulTypedName",
														"src": "9530:3:13",
														"type": ""
													}
												],
												"src": "9502:60:13"
											},
											{
												"body": {
													"nativeSrc": "9636:90:13",
													"nodeType": "YulBlock",
													"src": "9636:90:13",
													"statements": [
														{
															"nativeSrc": "9646:74:13",
															"nodeType": "YulAssignment",
															"src": "9646:74:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9712:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "9712:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "9686:25:13",
																					"nodeType": "YulIdentifier",
																					"src": "9686:25:13"
																				},
																				"nativeSrc": "9686:32:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9686:32:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "9677:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "9677:8:13"
																		},
																		"nativeSrc": "9677:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9677:42:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9659:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "9659:17:13"
																},
																"nativeSrc": "9659:61:13",
																"nodeType": "YulFunctionCall",
																"src": "9659:61:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9646:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "9646:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "9568:158:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9616:5:13",
														"nodeType": "YulTypedName",
														"src": "9616:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9626:9:13",
														"nodeType": "YulTypedName",
														"src": "9626:9:13",
														"type": ""
													}
												],
												"src": "9568:158:13"
											},
											{
												"body": {
													"nativeSrc": "9805:74:13",
													"nodeType": "YulBlock",
													"src": "9805:74:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9822:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9822:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9866:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "9866:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "9827:38:13",
																			"nodeType": "YulIdentifier",
																			"src": "9827:38:13"
																		},
																		"nativeSrc": "9827:45:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9827:45:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9815:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9815:6:13"
																},
																"nativeSrc": "9815:58:13",
																"nodeType": "YulFunctionCall",
																"src": "9815:58:13"
															},
															"nativeSrc": "9815:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "9815:58:13"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "9732:147:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9793:5:13",
														"nodeType": "YulTypedName",
														"src": "9793:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9800:3:13",
														"nodeType": "YulTypedName",
														"src": "9800:3:13",
														"type": ""
													}
												],
												"src": "9732:147:13"
											},
											{
												"body": {
													"nativeSrc": "10019:214:13",
													"nodeType": "YulBlock",
													"src": "10019:214:13",
													"statements": [
														{
															"nativeSrc": "10029:26:13",
															"nodeType": "YulAssignment",
															"src": "10029:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10041:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10041:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10052:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10052:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10037:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10037:3:13"
																},
																"nativeSrc": "10037:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10037:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10029:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10029:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10117:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10117:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10130:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10130:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10141:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10141:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10126:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10126:3:13"
																		},
																		"nativeSrc": "10126:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10126:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "10065:51:13",
																	"nodeType": "YulIdentifier",
																	"src": "10065:51:13"
																},
																"nativeSrc": "10065:79:13",
																"nodeType": "YulFunctionCall",
																"src": "10065:79:13"
															},
															"nativeSrc": "10065:79:13",
															"nodeType": "YulExpressionStatement",
															"src": "10065:79:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10198:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10198:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10211:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10211:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10222:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10222:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10207:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10207:3:13"
																		},
																		"nativeSrc": "10207:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10207:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10154:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "10154:43:13"
																},
																"nativeSrc": "10154:72:13",
																"nodeType": "YulFunctionCall",
																"src": "10154:72:13"
															},
															"nativeSrc": "10154:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "10154:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_0_by_1_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9885:348:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9983:9:13",
														"nodeType": "YulTypedName",
														"src": "9983:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9995:6:13",
														"nodeType": "YulTypedName",
														"src": "9995:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10003:6:13",
														"nodeType": "YulTypedName",
														"src": "10003:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10014:4:13",
														"nodeType": "YulTypedName",
														"src": "10014:4:13",
														"type": ""
													}
												],
												"src": "9885:348:13"
											},
											{
												"body": {
													"nativeSrc": "10267:152:13",
													"nodeType": "YulBlock",
													"src": "10267:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10284:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10284:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10287:77:13",
																		"nodeType": "YulLiteral",
																		"src": "10287:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10277:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10277:6:13"
																},
																"nativeSrc": "10277:88:13",
																"nodeType": "YulFunctionCall",
																"src": "10277:88:13"
															},
															"nativeSrc": "10277:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "10277:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10381:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10381:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10384:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10384:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10374:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10374:6:13"
																},
																"nativeSrc": "10374:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10374:15:13"
															},
															"nativeSrc": "10374:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "10374:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10405:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10405:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10408:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10408:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10398:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10398:6:13"
																},
																"nativeSrc": "10398:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10398:15:13"
															},
															"nativeSrc": "10398:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "10398:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "10239:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "10239:180:13"
											},
											{
												"body": {
													"nativeSrc": "10453:152:13",
													"nodeType": "YulBlock",
													"src": "10453:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10470:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10470:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10473:77:13",
																		"nodeType": "YulLiteral",
																		"src": "10473:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10463:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10463:6:13"
																},
																"nativeSrc": "10463:88:13",
																"nodeType": "YulFunctionCall",
																"src": "10463:88:13"
															},
															"nativeSrc": "10463:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "10463:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10567:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10567:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10570:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10570:4:13",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10560:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10560:6:13"
																},
																"nativeSrc": "10560:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10560:15:13"
															},
															"nativeSrc": "10560:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "10560:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10591:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10591:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10594:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10594:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10584:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10584:6:13"
																},
																"nativeSrc": "10584:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10584:15:13"
															},
															"nativeSrc": "10584:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "10584:15:13"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "10425:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "10425:180:13"
											},
											{
												"body": {
													"nativeSrc": "10655:61:13",
													"nodeType": "YulBlock",
													"src": "10655:61:13",
													"statements": [
														{
															"nativeSrc": "10665:45:13",
															"nodeType": "YulAssignment",
															"src": "10665:45:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10680:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10680:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10687:22:13",
																		"nodeType": "YulLiteral",
																		"src": "10687:22:13",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10676:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10676:3:13"
																},
																"nativeSrc": "10676:34:13",
																"nodeType": "YulFunctionCall",
																"src": "10676:34:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10665:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "10665:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nativeSrc": "10611:105:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10637:5:13",
														"nodeType": "YulTypedName",
														"src": "10637:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10647:7:13",
														"nodeType": "YulTypedName",
														"src": "10647:7:13",
														"type": ""
													}
												],
												"src": "10611:105:13"
											},
											{
												"body": {
													"nativeSrc": "10764:78:13",
													"nodeType": "YulBlock",
													"src": "10764:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10820:16:13",
																"nodeType": "YulBlock",
																"src": "10820:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10829:1:13",
																					"nodeType": "YulLiteral",
																					"src": "10829:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10832:1:13",
																					"nodeType": "YulLiteral",
																					"src": "10832:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10822:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10822:6:13"
																			},
																			"nativeSrc": "10822:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10822:12:13"
																		},
																		"nativeSrc": "10822:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10822:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10787:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "10787:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10811:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "10811:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nativeSrc": "10794:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "10794:16:13"
																				},
																				"nativeSrc": "10794:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10794:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10784:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "10784:2:13"
																		},
																		"nativeSrc": "10784:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10784:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10777:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10777:6:13"
																},
																"nativeSrc": "10777:42:13",
																"nodeType": "YulFunctionCall",
																"src": "10777:42:13"
															},
															"nativeSrc": "10774:62:13",
															"nodeType": "YulIf",
															"src": "10774:62:13"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nativeSrc": "10722:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10757:5:13",
														"nodeType": "YulTypedName",
														"src": "10757:5:13",
														"type": ""
													}
												],
												"src": "10722:120:13"
											},
											{
												"body": {
													"nativeSrc": "10910:79:13",
													"nodeType": "YulBlock",
													"src": "10910:79:13",
													"statements": [
														{
															"nativeSrc": "10920:22:13",
															"nodeType": "YulAssignment",
															"src": "10920:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10935:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10935:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10929:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "10929:5:13"
																},
																"nativeSrc": "10929:13:13",
																"nodeType": "YulFunctionCall",
																"src": "10929:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10920:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "10920:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10977:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10977:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nativeSrc": "10951:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "10951:25:13"
																},
																"nativeSrc": "10951:32:13",
																"nodeType": "YulFunctionCall",
																"src": "10951:32:13"
															},
															"nativeSrc": "10951:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "10951:32:13"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nativeSrc": "10848:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10888:6:13",
														"nodeType": "YulTypedName",
														"src": "10888:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10896:3:13",
														"nodeType": "YulTypedName",
														"src": "10896:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10904:5:13",
														"nodeType": "YulTypedName",
														"src": "10904:5:13",
														"type": ""
													}
												],
												"src": "10848:141:13"
											},
											{
												"body": {
													"nativeSrc": "11039:32:13",
													"nodeType": "YulBlock",
													"src": "11039:32:13",
													"statements": [
														{
															"nativeSrc": "11049:16:13",
															"nodeType": "YulAssignment",
															"src": "11049:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "11060:5:13",
																"nodeType": "YulIdentifier",
																"src": "11060:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11049:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "11049:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "10995:76:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11021:5:13",
														"nodeType": "YulTypedName",
														"src": "11021:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11031:7:13",
														"nodeType": "YulTypedName",
														"src": "11031:7:13",
														"type": ""
													}
												],
												"src": "10995:76:13"
											},
											{
												"body": {
													"nativeSrc": "11119:78:13",
													"nodeType": "YulBlock",
													"src": "11119:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "11175:16:13",
																"nodeType": "YulBlock",
																"src": "11175:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11184:1:13",
																					"nodeType": "YulLiteral",
																					"src": "11184:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11187:1:13",
																					"nodeType": "YulLiteral",
																					"src": "11187:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11177:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11177:6:13"
																			},
																			"nativeSrc": "11177:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11177:12:13"
																		},
																		"nativeSrc": "11177:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11177:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11142:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "11142:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11166:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "11166:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "11149:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "11149:16:13"
																				},
																				"nativeSrc": "11149:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11149:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11139:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "11139:2:13"
																		},
																		"nativeSrc": "11139:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11139:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11132:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11132:6:13"
																},
																"nativeSrc": "11132:42:13",
																"nodeType": "YulFunctionCall",
																"src": "11132:42:13"
															},
															"nativeSrc": "11129:62:13",
															"nodeType": "YulIf",
															"src": "11129:62:13"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "11077:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11112:5:13",
														"nodeType": "YulTypedName",
														"src": "11112:5:13",
														"type": ""
													}
												],
												"src": "11077:120:13"
											},
											{
												"body": {
													"nativeSrc": "11265:79:13",
													"nodeType": "YulBlock",
													"src": "11265:79:13",
													"statements": [
														{
															"nativeSrc": "11275:22:13",
															"nodeType": "YulAssignment",
															"src": "11275:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11290:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11290:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11284:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11284:5:13"
																},
																"nativeSrc": "11284:13:13",
																"nodeType": "YulFunctionCall",
																"src": "11284:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11275:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11275:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11332:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "11332:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "11306:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "11306:25:13"
																},
																"nativeSrc": "11306:32:13",
																"nodeType": "YulFunctionCall",
																"src": "11306:32:13"
															},
															"nativeSrc": "11306:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "11306:32:13"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "11203:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11243:6:13",
														"nodeType": "YulTypedName",
														"src": "11243:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11251:3:13",
														"nodeType": "YulTypedName",
														"src": "11251:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11259:5:13",
														"nodeType": "YulTypedName",
														"src": "11259:5:13",
														"type": ""
													}
												],
												"src": "11203:141:13"
											},
											{
												"body": {
													"nativeSrc": "11413:80:13",
													"nodeType": "YulBlock",
													"src": "11413:80:13",
													"statements": [
														{
															"nativeSrc": "11423:22:13",
															"nodeType": "YulAssignment",
															"src": "11423:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11438:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11438:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11432:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11432:5:13"
																},
																"nativeSrc": "11432:13:13",
																"nodeType": "YulFunctionCall",
																"src": "11432:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11423:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11423:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11481:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "11481:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "11454:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "11454:26:13"
																},
																"nativeSrc": "11454:33:13",
																"nodeType": "YulFunctionCall",
																"src": "11454:33:13"
															},
															"nativeSrc": "11454:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "11454:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "11350:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11391:6:13",
														"nodeType": "YulTypedName",
														"src": "11391:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11399:3:13",
														"nodeType": "YulTypedName",
														"src": "11399:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11407:5:13",
														"nodeType": "YulTypedName",
														"src": "11407:5:13",
														"type": ""
													}
												],
												"src": "11350:143:13"
											},
											{
												"body": {
													"nativeSrc": "11641:829:13",
													"nodeType": "YulBlock",
													"src": "11641:829:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "11688:83:13",
																"nodeType": "YulBlock",
																"src": "11688:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11690:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "11690:77:13"
																			},
																			"nativeSrc": "11690:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11690:79:13"
																		},
																		"nativeSrc": "11690:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11690:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11662:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11662:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11671:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11671:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11658:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11658:3:13"
																		},
																		"nativeSrc": "11658:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11658:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11683:3:13",
																		"nodeType": "YulLiteral",
																		"src": "11683:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11654:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11654:3:13"
																},
																"nativeSrc": "11654:33:13",
																"nodeType": "YulFunctionCall",
																"src": "11654:33:13"
															},
															"nativeSrc": "11651:120:13",
															"nodeType": "YulIf",
															"src": "11651:120:13"
														},
														{
															"nativeSrc": "11781:127:13",
															"nodeType": "YulBlock",
															"src": "11781:127:13",
															"statements": [
																{
																	"nativeSrc": "11796:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11796:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11810:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11810:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11800:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11800:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11825:73:13",
																	"nodeType": "YulAssignment",
																	"src": "11825:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11870:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11870:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11881:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11881:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11866:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11866:3:13"
																				},
																				"nativeSrc": "11866:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11866:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11890:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11890:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "11835:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "11835:30:13"
																		},
																		"nativeSrc": "11835:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11835:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11825:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11825:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11918:128:13",
															"nodeType": "YulBlock",
															"src": "11918:128:13",
															"statements": [
																{
																	"nativeSrc": "11933:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11933:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11947:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11947:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11937:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11937:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11963:73:13",
																	"nodeType": "YulAssignment",
																	"src": "11963:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12008:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12008:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12019:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12019:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12004:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12004:3:13"
																				},
																				"nativeSrc": "12004:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12004:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12028:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12028:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "11973:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "11973:30:13"
																		},
																		"nativeSrc": "11973:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11973:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11963:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11963:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12056:129:13",
															"nodeType": "YulBlock",
															"src": "12056:129:13",
															"statements": [
																{
																	"nativeSrc": "12071:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12071:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12085:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12085:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12075:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12075:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12101:74:13",
																	"nodeType": "YulAssignment",
																	"src": "12101:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12147:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12147:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12158:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12158:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12143:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12143:3:13"
																				},
																				"nativeSrc": "12143:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12143:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12167:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12167:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "12111:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "12111:31:13"
																		},
																		"nativeSrc": "12111:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12111:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "12101:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12101:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12195:129:13",
															"nodeType": "YulBlock",
															"src": "12195:129:13",
															"statements": [
																{
																	"nativeSrc": "12210:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12210:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12224:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12224:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12214:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12214:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12240:74:13",
																	"nodeType": "YulAssignment",
																	"src": "12240:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12286:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12286:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12297:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12297:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12282:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12282:3:13"
																				},
																				"nativeSrc": "12282:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12282:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12306:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12306:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "12250:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "12250:31:13"
																		},
																		"nativeSrc": "12250:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12250:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "12240:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12240:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12334:129:13",
															"nodeType": "YulBlock",
															"src": "12334:129:13",
															"statements": [
																{
																	"nativeSrc": "12349:17:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12349:17:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12363:3:13",
																		"nodeType": "YulLiteral",
																		"src": "12363:3:13",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12353:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12353:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12380:73:13",
																	"nodeType": "YulAssignment",
																	"src": "12380:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12425:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12425:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12436:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12436:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12421:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12421:3:13"
																				},
																				"nativeSrc": "12421:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12421:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12445:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12445:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "12390:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "12390:30:13"
																		},
																		"nativeSrc": "12390:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12390:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "12380:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12380:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "11499:971:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11579:9:13",
														"nodeType": "YulTypedName",
														"src": "11579:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11590:7:13",
														"nodeType": "YulTypedName",
														"src": "11590:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11602:6:13",
														"nodeType": "YulTypedName",
														"src": "11602:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11610:6:13",
														"nodeType": "YulTypedName",
														"src": "11610:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11618:6:13",
														"nodeType": "YulTypedName",
														"src": "11618:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11626:6:13",
														"nodeType": "YulTypedName",
														"src": "11626:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "11634:6:13",
														"nodeType": "YulTypedName",
														"src": "11634:6:13",
														"type": ""
													}
												],
												"src": "11499:971:13"
											},
											{
												"body": {
													"nativeSrc": "12519:43:13",
													"nodeType": "YulBlock",
													"src": "12519:43:13",
													"statements": [
														{
															"nativeSrc": "12529:27:13",
															"nodeType": "YulAssignment",
															"src": "12529:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12544:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "12544:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12551:4:13",
																		"nodeType": "YulLiteral",
																		"src": "12551:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12540:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12540:3:13"
																},
																"nativeSrc": "12540:16:13",
																"nodeType": "YulFunctionCall",
																"src": "12540:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12529:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "12529:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "12476:86:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12501:5:13",
														"nodeType": "YulTypedName",
														"src": "12501:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12511:7:13",
														"nodeType": "YulTypedName",
														"src": "12511:7:13",
														"type": ""
													}
												],
												"src": "12476:86:13"
											},
											{
												"body": {
													"nativeSrc": "12609:77:13",
													"nodeType": "YulBlock",
													"src": "12609:77:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "12664:16:13",
																"nodeType": "YulBlock",
																"src": "12664:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12673:1:13",
																					"nodeType": "YulLiteral",
																					"src": "12673:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12676:1:13",
																					"nodeType": "YulLiteral",
																					"src": "12676:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12666:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12666:6:13"
																			},
																			"nativeSrc": "12666:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12666:12:13"
																		},
																		"nativeSrc": "12666:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12666:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12632:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "12632:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12655:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "12655:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "12639:15:13",
																					"nodeType": "YulIdentifier",
																					"src": "12639:15:13"
																				},
																				"nativeSrc": "12639:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12639:22:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12629:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "12629:2:13"
																		},
																		"nativeSrc": "12629:33:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12629:33:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12622:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12622:6:13"
																},
																"nativeSrc": "12622:41:13",
																"nodeType": "YulFunctionCall",
																"src": "12622:41:13"
															},
															"nativeSrc": "12619:61:13",
															"nodeType": "YulIf",
															"src": "12619:61:13"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "12568:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12602:5:13",
														"nodeType": "YulTypedName",
														"src": "12602:5:13",
														"type": ""
													}
												],
												"src": "12568:118:13"
											},
											{
												"body": {
													"nativeSrc": "12753:78:13",
													"nodeType": "YulBlock",
													"src": "12753:78:13",
													"statements": [
														{
															"nativeSrc": "12763:22:13",
															"nodeType": "YulAssignment",
															"src": "12763:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12778:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12778:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12772:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "12772:5:13"
																},
																"nativeSrc": "12772:13:13",
																"nodeType": "YulFunctionCall",
																"src": "12772:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12763:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "12763:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12819:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "12819:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "12794:24:13",
																	"nodeType": "YulIdentifier",
																	"src": "12794:24:13"
																},
																"nativeSrc": "12794:31:13",
																"nodeType": "YulFunctionCall",
																"src": "12794:31:13"
															},
															"nativeSrc": "12794:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "12794:31:13"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "12692:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12731:6:13",
														"nodeType": "YulTypedName",
														"src": "12731:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12739:3:13",
														"nodeType": "YulTypedName",
														"src": "12739:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12747:5:13",
														"nodeType": "YulTypedName",
														"src": "12747:5:13",
														"type": ""
													}
												],
												"src": "12692:139:13"
											},
											{
												"body": {
													"nativeSrc": "12912:272:13",
													"nodeType": "YulBlock",
													"src": "12912:272:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "12958:83:13",
																"nodeType": "YulBlock",
																"src": "12958:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12960:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "12960:77:13"
																			},
																			"nativeSrc": "12960:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12960:79:13"
																		},
																		"nativeSrc": "12960:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12960:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12933:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12933:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12942:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12942:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12929:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12929:3:13"
																		},
																		"nativeSrc": "12929:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12929:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12954:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12954:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12925:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12925:3:13"
																},
																"nativeSrc": "12925:32:13",
																"nodeType": "YulFunctionCall",
																"src": "12925:32:13"
															},
															"nativeSrc": "12922:119:13",
															"nodeType": "YulIf",
															"src": "12922:119:13"
														},
														{
															"nativeSrc": "13051:126:13",
															"nodeType": "YulBlock",
															"src": "13051:126:13",
															"statements": [
																{
																	"nativeSrc": "13066:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13066:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13080:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13080:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13070:6:13",
																			"nodeType": "YulTypedName",
																			"src": "13070:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13095:72:13",
																	"nodeType": "YulAssignment",
																	"src": "13095:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13139:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "13139:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13150:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "13150:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13135:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "13135:3:13"
																				},
																				"nativeSrc": "13135:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "13135:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13159:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "13159:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "13105:29:13",
																			"nodeType": "YulIdentifier",
																			"src": "13105:29:13"
																		},
																		"nativeSrc": "13105:62:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13105:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13095:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "13095:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "12837:347:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12882:9:13",
														"nodeType": "YulTypedName",
														"src": "12882:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12893:7:13",
														"nodeType": "YulTypedName",
														"src": "12893:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12905:6:13",
														"nodeType": "YulTypedName",
														"src": "12905:6:13",
														"type": ""
													}
												],
												"src": "12837:347:13"
											},
											{
												"body": {
													"nativeSrc": "13241:51:13",
													"nodeType": "YulBlock",
													"src": "13241:51:13",
													"statements": [
														{
															"nativeSrc": "13251:34:13",
															"nodeType": "YulAssignment",
															"src": "13251:34:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13276:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13276:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "13279:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "13279:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "13272:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13272:3:13"
																},
																"nativeSrc": "13272:13:13",
																"nodeType": "YulFunctionCall",
																"src": "13272:13:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "13251:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "13251:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "13190:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13222:5:13",
														"nodeType": "YulTypedName",
														"src": "13222:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "13232:8:13",
														"nodeType": "YulTypedName",
														"src": "13232:8:13",
														"type": ""
													}
												],
												"src": "13190:102:13"
											},
											{
												"body": {
													"nativeSrc": "13371:775:13",
													"nodeType": "YulBlock",
													"src": "13371:775:13",
													"statements": [
														{
															"nativeSrc": "13381:15:13",
															"nodeType": "YulAssignment",
															"src": "13381:15:13",
															"value": {
																"name": "_power",
																"nativeSrc": "13390:6:13",
																"nodeType": "YulIdentifier",
																"src": "13390:6:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "13381:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "13381:5:13"
																}
															]
														},
														{
															"nativeSrc": "13405:14:13",
															"nodeType": "YulAssignment",
															"src": "13405:14:13",
															"value": {
																"name": "_base",
																"nativeSrc": "13414:5:13",
																"nodeType": "YulIdentifier",
																"src": "13414:5:13"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "13405:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13405:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13463:677:13",
																"nodeType": "YulBlock",
																"src": "13463:677:13",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "13551:22:13",
																			"nodeType": "YulBlock",
																			"src": "13551:22:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "13553:16:13",
																							"nodeType": "YulIdentifier",
																							"src": "13553:16:13"
																						},
																						"nativeSrc": "13553:18:13",
																						"nodeType": "YulFunctionCall",
																						"src": "13553:18:13"
																					},
																					"nativeSrc": "13553:18:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "13553:18:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "13529:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "13529:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "13539:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "13539:3:13"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "13544:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "13544:4:13"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "13535:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "13535:3:13"
																					},
																					"nativeSrc": "13535:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "13535:14:13"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "13526:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "13526:2:13"
																			},
																			"nativeSrc": "13526:24:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13526:24:13"
																		},
																		"nativeSrc": "13523:50:13",
																		"nodeType": "YulIf",
																		"src": "13523:50:13"
																	},
																	{
																		"body": {
																			"nativeSrc": "13618:419:13",
																			"nodeType": "YulBlock",
																			"src": "13618:419:13",
																			"statements": [
																				{
																					"nativeSrc": "13998:25:13",
																					"nodeType": "YulAssignment",
																					"src": "13998:25:13",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "14011:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "14011:5:13"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "14018:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "14018:4:13"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "14007:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "14007:3:13"
																						},
																						"nativeSrc": "14007:16:13",
																						"nodeType": "YulFunctionCall",
																						"src": "14007:16:13"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "13998:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "13998:5:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "13593:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "13593:8:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13603:1:13",
																					"nodeType": "YulLiteral",
																					"src": "13603:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13589:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "13589:3:13"
																			},
																			"nativeSrc": "13589:16:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13589:16:13"
																		},
																		"nativeSrc": "13586:451:13",
																		"nodeType": "YulIf",
																		"src": "13586:451:13"
																	},
																	{
																		"nativeSrc": "14050:23:13",
																		"nodeType": "YulAssignment",
																		"src": "14050:23:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "14062:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "14062:4:13"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "14068:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "14068:4:13"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "14058:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "14058:3:13"
																			},
																			"nativeSrc": "14058:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14058:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "14050:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "14050:4:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14086:44:13",
																		"nodeType": "YulAssignment",
																		"src": "14086:44:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "14121:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "14121:8:13"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "14098:22:13",
																				"nodeType": "YulIdentifier",
																				"src": "14098:22:13"
																			},
																			"nativeSrc": "14098:32:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14098:32:13"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "14086:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "14086:8:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "13439:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "13439:8:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13449:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13449:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13436:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "13436:2:13"
																},
																"nativeSrc": "13436:15:13",
																"nodeType": "YulFunctionCall",
																"src": "13436:15:13"
															},
															"nativeSrc": "13428:712:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "13452:2:13",
																"nodeType": "YulBlock",
																"src": "13452:2:13",
																"statements": []
															},
															"pre": {
																"nativeSrc": "13432:3:13",
																"nodeType": "YulBlock",
																"src": "13432:3:13",
																"statements": []
															},
															"src": "13428:712:13"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "13298:848:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "13326:6:13",
														"nodeType": "YulTypedName",
														"src": "13326:6:13",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "13334:5:13",
														"nodeType": "YulTypedName",
														"src": "13334:5:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "13341:8:13",
														"nodeType": "YulTypedName",
														"src": "13341:8:13",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "13351:3:13",
														"nodeType": "YulTypedName",
														"src": "13351:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "13359:5:13",
														"nodeType": "YulTypedName",
														"src": "13359:5:13",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "13366:4:13",
														"nodeType": "YulTypedName",
														"src": "13366:4:13",
														"type": ""
													}
												],
												"src": "13298:848:13"
											},
											{
												"body": {
													"nativeSrc": "14212:1013:13",
													"nodeType": "YulBlock",
													"src": "14212:1013:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "14407:20:13",
																"nodeType": "YulBlock",
																"src": "14407:20:13",
																"statements": [
																	{
																		"nativeSrc": "14409:10:13",
																		"nodeType": "YulAssignment",
																		"src": "14409:10:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "14418:1:13",
																			"nodeType": "YulLiteral",
																			"src": "14418:1:13",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "14409:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "14409:5:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14420:5:13",
																		"nodeType": "YulLeave",
																		"src": "14420:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "14397:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "14397:8:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14390:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14390:6:13"
																},
																"nativeSrc": "14390:16:13",
																"nodeType": "YulFunctionCall",
																"src": "14390:16:13"
															},
															"nativeSrc": "14387:40:13",
															"nodeType": "YulIf",
															"src": "14387:40:13"
														},
														{
															"body": {
																"nativeSrc": "14452:20:13",
																"nodeType": "YulBlock",
																"src": "14452:20:13",
																"statements": [
																	{
																		"nativeSrc": "14454:10:13",
																		"nodeType": "YulAssignment",
																		"src": "14454:10:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "14463:1:13",
																			"nodeType": "YulLiteral",
																			"src": "14463:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "14454:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "14454:5:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14465:5:13",
																		"nodeType": "YulLeave",
																		"src": "14465:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "14446:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14446:4:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14439:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14439:6:13"
																},
																"nativeSrc": "14439:12:13",
																"nodeType": "YulFunctionCall",
																"src": "14439:12:13"
															},
															"nativeSrc": "14436:36:13",
															"nodeType": "YulIf",
															"src": "14436:36:13"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "14582:20:13",
																		"nodeType": "YulBlock",
																		"src": "14582:20:13",
																		"statements": [
																			{
																				"nativeSrc": "14584:10:13",
																				"nodeType": "YulAssignment",
																				"src": "14584:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "14593:1:13",
																					"nodeType": "YulLiteral",
																					"src": "14593:1:13",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "14584:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "14584:5:13"
																					}
																				]
																			},
																			{
																				"nativeSrc": "14595:5:13",
																				"nodeType": "YulLeave",
																				"src": "14595:5:13"
																			}
																		]
																	},
																	"nativeSrc": "14575:27:13",
																	"nodeType": "YulCase",
																	"src": "14575:27:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14580:1:13",
																		"nodeType": "YulLiteral",
																		"src": "14580:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "14626:176:13",
																		"nodeType": "YulBlock",
																		"src": "14626:176:13",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "14661:22:13",
																					"nodeType": "YulBlock",
																					"src": "14661:22:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "14663:16:13",
																									"nodeType": "YulIdentifier",
																									"src": "14663:16:13"
																								},
																								"nativeSrc": "14663:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "14663:18:13"
																							},
																							"nativeSrc": "14663:18:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "14663:18:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "14646:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "14646:8:13"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "14656:3:13",
																							"nodeType": "YulLiteral",
																							"src": "14656:3:13",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "14643:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "14643:2:13"
																					},
																					"nativeSrc": "14643:17:13",
																					"nodeType": "YulFunctionCall",
																					"src": "14643:17:13"
																				},
																				"nativeSrc": "14640:43:13",
																				"nodeType": "YulIf",
																				"src": "14640:43:13"
																			},
																			{
																				"nativeSrc": "14696:25:13",
																				"nodeType": "YulAssignment",
																				"src": "14696:25:13",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "14709:1:13",
																							"nodeType": "YulLiteral",
																							"src": "14709:1:13",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "14712:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "14712:8:13"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "14705:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "14705:3:13"
																					},
																					"nativeSrc": "14705:16:13",
																					"nodeType": "YulFunctionCall",
																					"src": "14705:16:13"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "14696:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "14696:5:13"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "14752:22:13",
																					"nodeType": "YulBlock",
																					"src": "14752:22:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "14754:16:13",
																									"nodeType": "YulIdentifier",
																									"src": "14754:16:13"
																								},
																								"nativeSrc": "14754:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "14754:18:13"
																							},
																							"nativeSrc": "14754:18:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "14754:18:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "14740:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "14740:5:13"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "14747:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "14747:3:13"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "14737:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "14737:2:13"
																					},
																					"nativeSrc": "14737:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "14737:14:13"
																				},
																				"nativeSrc": "14734:40:13",
																				"nodeType": "YulIf",
																				"src": "14734:40:13"
																			},
																			{
																				"nativeSrc": "14787:5:13",
																				"nodeType": "YulLeave",
																				"src": "14787:5:13"
																			}
																		]
																	},
																	"nativeSrc": "14611:191:13",
																	"nodeType": "YulCase",
																	"src": "14611:191:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14616:1:13",
																		"nodeType": "YulLiteral",
																		"src": "14616:1:13",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "14532:4:13",
																"nodeType": "YulIdentifier",
																"src": "14532:4:13"
															},
															"nativeSrc": "14525:277:13",
															"nodeType": "YulSwitch",
															"src": "14525:277:13"
														},
														{
															"body": {
																"nativeSrc": "14934:123:13",
																"nodeType": "YulBlock",
																"src": "14934:123:13",
																"statements": [
																	{
																		"nativeSrc": "14948:28:13",
																		"nodeType": "YulAssignment",
																		"src": "14948:28:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "14961:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "14961:4:13"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "14967:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "14967:8:13"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "14957:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "14957:3:13"
																			},
																			"nativeSrc": "14957:19:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14957:19:13"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "14948:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "14948:5:13"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "15007:22:13",
																			"nodeType": "YulBlock",
																			"src": "15007:22:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "15009:16:13",
																							"nodeType": "YulIdentifier",
																							"src": "15009:16:13"
																						},
																						"nativeSrc": "15009:18:13",
																						"nodeType": "YulFunctionCall",
																						"src": "15009:18:13"
																					},
																					"nativeSrc": "15009:18:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "15009:18:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "14995:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "14995:5:13"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "15002:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "15002:3:13"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "14992:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "14992:2:13"
																			},
																			"nativeSrc": "14992:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14992:14:13"
																		},
																		"nativeSrc": "14989:40:13",
																		"nodeType": "YulIf",
																		"src": "14989:40:13"
																	},
																	{
																		"nativeSrc": "15042:5:13",
																		"nodeType": "YulLeave",
																		"src": "15042:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "14837:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "14837:4:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14843:2:13",
																						"nodeType": "YulLiteral",
																						"src": "14843:2:13",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "14834:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "14834:2:13"
																				},
																				"nativeSrc": "14834:12:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14834:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "14851:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "14851:8:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14861:2:13",
																						"nodeType": "YulLiteral",
																						"src": "14861:2:13",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "14848:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "14848:2:13"
																				},
																				"nativeSrc": "14848:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14848:16:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14830:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14830:3:13"
																		},
																		"nativeSrc": "14830:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14830:35:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "14886:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "14886:4:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14892:3:13",
																						"nodeType": "YulLiteral",
																						"src": "14892:3:13",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "14883:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "14883:2:13"
																				},
																				"nativeSrc": "14883:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14883:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "14901:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "14901:8:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14911:2:13",
																						"nodeType": "YulLiteral",
																						"src": "14911:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "14898:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "14898:2:13"
																				},
																				"nativeSrc": "14898:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14898:16:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14879:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14879:3:13"
																		},
																		"nativeSrc": "14879:36:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14879:36:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "14814:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "14814:2:13"
																},
																"nativeSrc": "14814:111:13",
																"nodeType": "YulFunctionCall",
																"src": "14814:111:13"
															},
															"nativeSrc": "14811:246:13",
															"nodeType": "YulIf",
															"src": "14811:246:13"
														},
														{
															"nativeSrc": "15067:57:13",
															"nodeType": "YulAssignment",
															"src": "15067:57:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15101:1:13",
																		"nodeType": "YulLiteral",
																		"src": "15101:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "15104:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15104:4:13"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "15110:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "15110:8:13"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "15120:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15120:3:13"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "15082:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "15082:18:13"
																},
																"nativeSrc": "15082:42:13",
																"nodeType": "YulFunctionCall",
																"src": "15082:42:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "15067:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "15067:5:13"
																},
																{
																	"name": "base",
																	"nativeSrc": "15074:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15074:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15163:22:13",
																"nodeType": "YulBlock",
																"src": "15163:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15165:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "15165:16:13"
																			},
																			"nativeSrc": "15165:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15165:18:13"
																		},
																		"nativeSrc": "15165:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "15165:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "15140:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "15140:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "15151:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "15151:3:13"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "15156:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "15156:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "15147:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15147:3:13"
																		},
																		"nativeSrc": "15147:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15147:14:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15137:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "15137:2:13"
																},
																"nativeSrc": "15137:25:13",
																"nodeType": "YulFunctionCall",
																"src": "15137:25:13"
															},
															"nativeSrc": "15134:51:13",
															"nodeType": "YulIf",
															"src": "15134:51:13"
														},
														{
															"nativeSrc": "15194:25:13",
															"nodeType": "YulAssignment",
															"src": "15194:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "15207:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "15207:5:13"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "15214:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15214:4:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15203:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15203:3:13"
																},
																"nativeSrc": "15203:16:13",
																"nodeType": "YulFunctionCall",
																"src": "15203:16:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "15194:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "15194:5:13"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "14152:1073:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "14182:4:13",
														"nodeType": "YulTypedName",
														"src": "14182:4:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "14188:8:13",
														"nodeType": "YulTypedName",
														"src": "14188:8:13",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "14198:3:13",
														"nodeType": "YulTypedName",
														"src": "14198:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "14206:5:13",
														"nodeType": "YulTypedName",
														"src": "14206:5:13",
														"type": ""
													}
												],
												"src": "14152:1073:13"
											},
											{
												"body": {
													"nativeSrc": "15295:217:13",
													"nodeType": "YulBlock",
													"src": "15295:217:13",
													"statements": [
														{
															"nativeSrc": "15305:31:13",
															"nodeType": "YulAssignment",
															"src": "15305:31:13",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "15331:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15331:4:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15313:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "15313:17:13"
																},
																"nativeSrc": "15313:23:13",
																"nodeType": "YulFunctionCall",
																"src": "15313:23:13"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "15305:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15305:4:13"
																}
															]
														},
														{
															"nativeSrc": "15345:37:13",
															"nodeType": "YulAssignment",
															"src": "15345:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "15373:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "15373:8:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "15357:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "15357:15:13"
																},
																"nativeSrc": "15357:25:13",
																"nodeType": "YulFunctionCall",
																"src": "15357:25:13"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "15345:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "15345:8:13"
																}
															]
														},
														{
															"nativeSrc": "15392:113:13",
															"nodeType": "YulAssignment",
															"src": "15392:113:13",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "15422:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15422:4:13"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "15428:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "15428:8:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15438:66:13",
																		"nodeType": "YulLiteral",
																		"src": "15438:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "15401:20:13",
																	"nodeType": "YulIdentifier",
																	"src": "15401:20:13"
																},
																"nativeSrc": "15401:104:13",
																"nodeType": "YulFunctionCall",
																"src": "15401:104:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "15392:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "15392:5:13"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "15231:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "15270:4:13",
														"nodeType": "YulTypedName",
														"src": "15270:4:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "15276:8:13",
														"nodeType": "YulTypedName",
														"src": "15276:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "15289:5:13",
														"nodeType": "YulTypedName",
														"src": "15289:5:13",
														"type": ""
													}
												],
												"src": "15231:281:13"
											},
											{
												"body": {
													"nativeSrc": "15566:362:13",
													"nodeType": "YulBlock",
													"src": "15566:362:13",
													"statements": [
														{
															"nativeSrc": "15576:25:13",
															"nodeType": "YulAssignment",
															"src": "15576:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15599:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "15599:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15581:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "15581:17:13"
																},
																"nativeSrc": "15581:20:13",
																"nodeType": "YulFunctionCall",
																"src": "15581:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15576:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "15576:1:13"
																}
															]
														},
														{
															"nativeSrc": "15610:25:13",
															"nodeType": "YulAssignment",
															"src": "15610:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15633:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "15633:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15615:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "15615:17:13"
																},
																"nativeSrc": "15615:20:13",
																"nodeType": "YulFunctionCall",
																"src": "15615:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15610:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "15610:1:13"
																}
															]
														},
														{
															"nativeSrc": "15644:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "15644:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15667:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "15667:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15670:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "15670:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15663:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15663:3:13"
																},
																"nativeSrc": "15663:9:13",
																"nodeType": "YulFunctionCall",
																"src": "15663:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "15648:11:13",
																	"nodeType": "YulTypedName",
																	"src": "15648:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15681:41:13",
															"nodeType": "YulAssignment",
															"src": "15681:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "15710:11:13",
																		"nodeType": "YulIdentifier",
																		"src": "15710:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15692:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "15692:17:13"
																},
																"nativeSrc": "15692:30:13",
																"nodeType": "YulFunctionCall",
																"src": "15692:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "15681:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "15681:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15899:22:13",
																"nodeType": "YulBlock",
																"src": "15899:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15901:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "15901:16:13"
																			},
																			"nativeSrc": "15901:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15901:18:13"
																		},
																		"nativeSrc": "15901:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "15901:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "15832:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "15832:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "15825:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "15825:6:13"
																				},
																				"nativeSrc": "15825:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "15825:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "15855:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "15855:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "15862:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "15862:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "15871:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "15871:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "15858:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "15858:3:13"
																						},
																						"nativeSrc": "15858:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "15858:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "15852:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "15852:2:13"
																				},
																				"nativeSrc": "15852:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "15852:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "15805:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "15805:2:13"
																		},
																		"nativeSrc": "15805:83:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15805:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15785:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15785:6:13"
																},
																"nativeSrc": "15785:113:13",
																"nodeType": "YulFunctionCall",
																"src": "15785:113:13"
															},
															"nativeSrc": "15782:139:13",
															"nodeType": "YulIf",
															"src": "15782:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "15518:410:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15549:1:13",
														"nodeType": "YulTypedName",
														"src": "15549:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15552:1:13",
														"nodeType": "YulTypedName",
														"src": "15552:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "15558:7:13",
														"nodeType": "YulTypedName",
														"src": "15558:7:13",
														"type": ""
													}
												],
												"src": "15518:410:13"
											},
											{
												"body": {
													"nativeSrc": "15962:152:13",
													"nodeType": "YulBlock",
													"src": "15962:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15979:1:13",
																		"nodeType": "YulLiteral",
																		"src": "15979:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15982:77:13",
																		"nodeType": "YulLiteral",
																		"src": "15982:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15972:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15972:6:13"
																},
																"nativeSrc": "15972:88:13",
																"nodeType": "YulFunctionCall",
																"src": "15972:88:13"
															},
															"nativeSrc": "15972:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "15972:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16076:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16076:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16079:4:13",
																		"nodeType": "YulLiteral",
																		"src": "16079:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16069:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16069:6:13"
																},
																"nativeSrc": "16069:15:13",
																"nodeType": "YulFunctionCall",
																"src": "16069:15:13"
															},
															"nativeSrc": "16069:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "16069:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16100:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16100:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16103:4:13",
																		"nodeType": "YulLiteral",
																		"src": "16103:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16093:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16093:6:13"
																},
																"nativeSrc": "16093:15:13",
																"nodeType": "YulFunctionCall",
																"src": "16093:15:13"
															},
															"nativeSrc": "16093:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "16093:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "15934:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "15934:180:13"
											},
											{
												"body": {
													"nativeSrc": "16162:143:13",
													"nodeType": "YulBlock",
													"src": "16162:143:13",
													"statements": [
														{
															"nativeSrc": "16172:25:13",
															"nodeType": "YulAssignment",
															"src": "16172:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16195:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16195:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16177:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "16177:17:13"
																},
																"nativeSrc": "16177:20:13",
																"nodeType": "YulFunctionCall",
																"src": "16177:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16172:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "16172:1:13"
																}
															]
														},
														{
															"nativeSrc": "16206:25:13",
															"nodeType": "YulAssignment",
															"src": "16206:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16229:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16229:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16211:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "16211:17:13"
																},
																"nativeSrc": "16211:20:13",
																"nodeType": "YulFunctionCall",
																"src": "16211:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16206:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "16206:1:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16253:22:13",
																"nodeType": "YulBlock",
																"src": "16253:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "16255:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "16255:16:13"
																			},
																			"nativeSrc": "16255:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16255:18:13"
																		},
																		"nativeSrc": "16255:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "16255:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16250:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16250:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16243:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16243:6:13"
																},
																"nativeSrc": "16243:9:13",
																"nodeType": "YulFunctionCall",
																"src": "16243:9:13"
															},
															"nativeSrc": "16240:35:13",
															"nodeType": "YulIf",
															"src": "16240:35:13"
														},
														{
															"nativeSrc": "16285:14:13",
															"nodeType": "YulAssignment",
															"src": "16285:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16294:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16294:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16297:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16297:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "16290:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16290:3:13"
																},
																"nativeSrc": "16290:9:13",
																"nodeType": "YulFunctionCall",
																"src": "16290:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "16285:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "16285:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "16120:185:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16151:1:13",
														"nodeType": "YulTypedName",
														"src": "16151:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16154:1:13",
														"nodeType": "YulTypedName",
														"src": "16154:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "16160:1:13",
														"nodeType": "YulTypedName",
														"src": "16160:1:13",
														"type": ""
													}
												],
												"src": "16120:185:13"
											},
											{
												"body": {
													"nativeSrc": "16354:148:13",
													"nodeType": "YulBlock",
													"src": "16354:148:13",
													"statements": [
														{
															"nativeSrc": "16364:23:13",
															"nodeType": "YulAssignment",
															"src": "16364:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16385:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16385:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "16369:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "16369:15:13"
																},
																"nativeSrc": "16369:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16369:18:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16364:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "16364:1:13"
																}
															]
														},
														{
															"nativeSrc": "16396:23:13",
															"nodeType": "YulAssignment",
															"src": "16396:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16417:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16417:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "16401:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "16401:15:13"
																},
																"nativeSrc": "16401:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16401:18:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16396:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "16396:1:13"
																}
															]
														},
														{
															"nativeSrc": "16428:17:13",
															"nodeType": "YulAssignment",
															"src": "16428:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16440:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16440:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16443:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16443:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "16436:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16436:3:13"
																},
																"nativeSrc": "16436:9:13",
																"nodeType": "YulFunctionCall",
																"src": "16436:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "16428:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16428:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16473:22:13",
																"nodeType": "YulBlock",
																"src": "16473:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16475:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "16475:16:13"
																			},
																			"nativeSrc": "16475:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16475:18:13"
																		},
																		"nativeSrc": "16475:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "16475:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "16461:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "16461:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16467:4:13",
																		"nodeType": "YulLiteral",
																		"src": "16467:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16458:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "16458:2:13"
																},
																"nativeSrc": "16458:14:13",
																"nodeType": "YulFunctionCall",
																"src": "16458:14:13"
															},
															"nativeSrc": "16455:40:13",
															"nodeType": "YulIf",
															"src": "16455:40:13"
														}
													]
												},
												"name": "checked_sub_t_uint8",
												"nativeSrc": "16311:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16340:1:13",
														"nodeType": "YulTypedName",
														"src": "16340:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16343:1:13",
														"nodeType": "YulTypedName",
														"src": "16343:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "16349:4:13",
														"nodeType": "YulTypedName",
														"src": "16349:4:13",
														"type": ""
													}
												],
												"src": "16311:191:13"
											},
											{
												"body": {
													"nativeSrc": "16662:288:13",
													"nodeType": "YulBlock",
													"src": "16662:288:13",
													"statements": [
														{
															"nativeSrc": "16672:26:13",
															"nodeType": "YulAssignment",
															"src": "16672:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16684:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16684:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16695:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16695:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16680:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16680:3:13"
																},
																"nativeSrc": "16680:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16680:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16672:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16672:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16752:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16752:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16765:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16765:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16776:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16776:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16761:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16761:3:13"
																		},
																		"nativeSrc": "16761:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16761:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16708:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "16708:43:13"
																},
																"nativeSrc": "16708:71:13",
																"nodeType": "YulFunctionCall",
																"src": "16708:71:13"
															},
															"nativeSrc": "16708:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "16708:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16833:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16833:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16846:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16846:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16857:2:13",
																				"nodeType": "YulLiteral",
																				"src": "16857:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16842:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16842:3:13"
																		},
																		"nativeSrc": "16842:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16842:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16789:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "16789:43:13"
																},
																"nativeSrc": "16789:72:13",
																"nodeType": "YulFunctionCall",
																"src": "16789:72:13"
															},
															"nativeSrc": "16789:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "16789:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16915:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16915:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16928:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16928:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16939:2:13",
																				"nodeType": "YulLiteral",
																				"src": "16939:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16924:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16924:3:13"
																		},
																		"nativeSrc": "16924:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16924:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16871:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "16871:43:13"
																},
																"nativeSrc": "16871:72:13",
																"nodeType": "YulFunctionCall",
																"src": "16871:72:13"
															},
															"nativeSrc": "16871:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "16871:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16508:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16618:9:13",
														"nodeType": "YulTypedName",
														"src": "16618:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16630:6:13",
														"nodeType": "YulTypedName",
														"src": "16630:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16638:6:13",
														"nodeType": "YulTypedName",
														"src": "16638:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16646:6:13",
														"nodeType": "YulTypedName",
														"src": "16646:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16657:4:13",
														"nodeType": "YulTypedName",
														"src": "16657:4:13",
														"type": ""
													}
												],
												"src": "16508:442:13"
											},
											{
												"body": {
													"nativeSrc": "17069:34:13",
													"nodeType": "YulBlock",
													"src": "17069:34:13",
													"statements": [
														{
															"nativeSrc": "17079:18:13",
															"nodeType": "YulAssignment",
															"src": "17079:18:13",
															"value": {
																"name": "pos",
																"nativeSrc": "17094:3:13",
																"nodeType": "YulIdentifier",
																"src": "17094:3:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "17079:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "17079:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16956:147:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17041:3:13",
														"nodeType": "YulTypedName",
														"src": "17041:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "17046:6:13",
														"nodeType": "YulTypedName",
														"src": "17046:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "17057:11:13",
														"nodeType": "YulTypedName",
														"src": "17057:11:13",
														"type": ""
													}
												],
												"src": "16956:147:13"
											},
											{
												"body": {
													"nativeSrc": "17215:8:13",
													"nodeType": "YulBlock",
													"src": "17215:8:13",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "17109:114:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17207:6:13",
														"nodeType": "YulTypedName",
														"src": "17207:6:13",
														"type": ""
													}
												],
												"src": "17109:114:13"
											},
											{
												"body": {
													"nativeSrc": "17392:235:13",
													"nodeType": "YulBlock",
													"src": "17392:235:13",
													"statements": [
														{
															"nativeSrc": "17402:90:13",
															"nodeType": "YulAssignment",
															"src": "17402:90:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17485:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17485:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17490:1:13",
																		"nodeType": "YulLiteral",
																		"src": "17490:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "17409:75:13",
																	"nodeType": "YulIdentifier",
																	"src": "17409:75:13"
																},
																"nativeSrc": "17409:83:13",
																"nodeType": "YulFunctionCall",
																"src": "17409:83:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17402:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17402:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17590:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17590:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "17501:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "17501:88:13"
																},
																"nativeSrc": "17501:93:13",
																"nodeType": "YulFunctionCall",
																"src": "17501:93:13"
															},
															"nativeSrc": "17501:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "17501:93:13"
														},
														{
															"nativeSrc": "17603:18:13",
															"nodeType": "YulAssignment",
															"src": "17603:18:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17614:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17614:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17619:1:13",
																		"nodeType": "YulLiteral",
																		"src": "17619:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17610:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17610:3:13"
																},
																"nativeSrc": "17610:11:13",
																"nodeType": "YulFunctionCall",
																"src": "17610:11:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17603:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17603:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "17229:398:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17380:3:13",
														"nodeType": "YulTypedName",
														"src": "17380:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17388:3:13",
														"nodeType": "YulTypedName",
														"src": "17388:3:13",
														"type": ""
													}
												],
												"src": "17229:398:13"
											},
											{
												"body": {
													"nativeSrc": "17821:191:13",
													"nodeType": "YulBlock",
													"src": "17821:191:13",
													"statements": [
														{
															"nativeSrc": "17832:154:13",
															"nodeType": "YulAssignment",
															"src": "17832:154:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17982:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17982:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "17839:141:13",
																	"nodeType": "YulIdentifier",
																	"src": "17839:141:13"
																},
																"nativeSrc": "17839:147:13",
																"nodeType": "YulFunctionCall",
																"src": "17839:147:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17832:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17832:3:13"
																}
															]
														},
														{
															"nativeSrc": "17996:10:13",
															"nodeType": "YulAssignment",
															"src": "17996:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "18003:3:13",
																"nodeType": "YulIdentifier",
																"src": "18003:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17996:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17996:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "17633:379:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17808:3:13",
														"nodeType": "YulTypedName",
														"src": "17808:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17817:3:13",
														"nodeType": "YulTypedName",
														"src": "17817:3:13",
														"type": ""
													}
												],
												"src": "17633:379:13"
											},
											{
												"body": {
													"nativeSrc": "18144:206:13",
													"nodeType": "YulBlock",
													"src": "18144:206:13",
													"statements": [
														{
															"nativeSrc": "18154:26:13",
															"nodeType": "YulAssignment",
															"src": "18154:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18166:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18166:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18177:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18177:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18162:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18162:3:13"
																},
																"nativeSrc": "18162:18:13",
																"nodeType": "YulFunctionCall",
																"src": "18162:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18154:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18154:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18234:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18234:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18247:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18247:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18258:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18258:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18243:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18243:3:13"
																		},
																		"nativeSrc": "18243:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18243:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18190:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "18190:43:13"
																},
																"nativeSrc": "18190:71:13",
																"nodeType": "YulFunctionCall",
																"src": "18190:71:13"
															},
															"nativeSrc": "18190:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "18190:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18315:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18315:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18328:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18328:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18339:2:13",
																				"nodeType": "YulLiteral",
																				"src": "18339:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18324:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18324:3:13"
																		},
																		"nativeSrc": "18324:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18324:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "18271:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "18271:43:13"
																},
																"nativeSrc": "18271:72:13",
																"nodeType": "YulFunctionCall",
																"src": "18271:72:13"
															},
															"nativeSrc": "18271:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "18271:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "18018:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18108:9:13",
														"nodeType": "YulTypedName",
														"src": "18108:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18120:6:13",
														"nodeType": "YulTypedName",
														"src": "18120:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18128:6:13",
														"nodeType": "YulTypedName",
														"src": "18128:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18139:4:13",
														"nodeType": "YulTypedName",
														"src": "18139:4:13",
														"type": ""
													}
												],
												"src": "18018:332:13"
											},
											{
												"body": {
													"nativeSrc": "18482:206:13",
													"nodeType": "YulBlock",
													"src": "18482:206:13",
													"statements": [
														{
															"nativeSrc": "18492:26:13",
															"nodeType": "YulAssignment",
															"src": "18492:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18504:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18504:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18515:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18515:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18500:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18500:3:13"
																},
																"nativeSrc": "18500:18:13",
																"nodeType": "YulFunctionCall",
																"src": "18500:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18492:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18492:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18572:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18572:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18585:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18585:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18596:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18596:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18581:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18581:3:13"
																		},
																		"nativeSrc": "18581:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18581:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18528:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "18528:43:13"
																},
																"nativeSrc": "18528:71:13",
																"nodeType": "YulFunctionCall",
																"src": "18528:71:13"
															},
															"nativeSrc": "18528:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "18528:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18653:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18653:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18666:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18666:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18677:2:13",
																				"nodeType": "YulLiteral",
																				"src": "18677:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18662:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18662:3:13"
																		},
																		"nativeSrc": "18662:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18662:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18609:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "18609:43:13"
																},
																"nativeSrc": "18609:72:13",
																"nodeType": "YulFunctionCall",
																"src": "18609:72:13"
															},
															"nativeSrc": "18609:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "18609:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18356:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18446:9:13",
														"nodeType": "YulTypedName",
														"src": "18446:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18458:6:13",
														"nodeType": "YulTypedName",
														"src": "18458:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18466:6:13",
														"nodeType": "YulTypedName",
														"src": "18466:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18477:4:13",
														"nodeType": "YulTypedName",
														"src": "18477:4:13",
														"type": ""
													}
												],
												"src": "18356:332:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint8(x, y) -> diff {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xff) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1216": [
									{
										"length": 32,
										"start": 5445
									},
									{
										"length": 32,
										"start": 8621
									},
									{
										"length": 32,
										"start": 8662
									}
								],
								"1219": [
									{
										"length": 32,
										"start": 1669
									},
									{
										"length": 32,
										"start": 1722
									},
									{
										"length": 32,
										"start": 2409
									},
									{
										"length": 32,
										"start": 2450
									},
									{
										"length": 32,
										"start": 2506
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x184 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83E397B8 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0xD15F58FB GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x5D5 JUMPI DUP1 PUSH4 0xE62615C6 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0xF14210A6 EQ PUSH2 0x639 JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x661 JUMPI PUSH2 0x195 JUMP JUMPDEST DUP1 PUSH4 0xD15F58FB EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xD3C7C2C7 EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0xD4FAC45D EQ PUSH2 0x599 JUMPI PUSH2 0x195 JUMP JUMPDEST DUP1 PUSH4 0x83E397B8 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0x9E281A98 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4C7 JUMPI DUP1 PUSH4 0xB2343B1C EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0xCAC2E25F EQ PUSH2 0x51B JUMPI PUSH2 0x195 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x5B6CCA80 GT PUSH2 0x117 JUMPI DUP1 PUSH4 0x5B6CCA80 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x5CCF7AC4 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x75151B63 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x40F JUMPI PUSH2 0x195 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x338B5DEA EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x347 JUMPI PUSH2 0x195 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x251CFA1 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x8133237 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xCCEE433 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x2BA8D939 EQ PUSH2 0x2CF JUMPI PUSH2 0x195 JUMP JUMPDEST CALLDATASIZE PUSH2 0x195 JUMPI PUSH2 0x193 PUSH0 CALLVALUE PUSH2 0x66B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x2AE871A500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x265F JUMP JUMPDEST PUSH2 0x893 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x26A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x2717 JUMP JUMPDEST PUSH2 0x90C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x95B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x27A6 JUMP JUMPDEST PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x2717 JUMP JUMPDEST PUSH2 0xA08 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0xDDF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x2861 JUMP JUMPDEST PUSH2 0xE01 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0xFC1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x2717 JUMP JUMPDEST PUSH2 0x103C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x28AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x28C7 JUMP JUMPDEST PUSH2 0x10A1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x2717 JUMP JUMPDEST PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x26A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x444 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x44D PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45A SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x26A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x2861 JUMP JUMPDEST PUSH2 0x146A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DB PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E8 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x505 PUSH2 0x1537 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x512 SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x526 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x52F PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x550 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x559 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x566 SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x583 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x29BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0x28C7 JUMP JUMPDEST PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CC SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0x1682 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x608 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x623 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x28C7 JUMP JUMPDEST PUSH2 0x16A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x630 SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x644 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x65F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65A SWAP2 SWAP1 PUSH2 0x29DC JUMP JUMPDEST PUSH2 0x1742 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x669 PUSH2 0x1798 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x676 DUP4 DUP4 PUSH2 0x17ED JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x681 PUSH2 0x1A74 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP3 DUP3 PUSH2 0x6B0 SWAP2 SWAP1 PUSH2 0x2A34 JUMP JUMPDEST GT ISZERO PUSH2 0x720 JUMPI DUP2 DUP2 PUSH32 0x0 PUSH2 0x6E3 SWAP2 SWAP1 PUSH2 0x2A67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x639847A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x717 SWAP3 SWAP2 SWAP1 PUSH2 0x2A9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x72B DUP6 DUP6 PUSH2 0x1B4D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x2A34 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x807 SWAP2 SWAP1 PUSH2 0x2A34 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x820 SWAP1 PUSH2 0x2AC1 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x57BAD7E3C9EFECF6E1F60BBD846B999E9DA4A409224287A8DF09779F2330135E DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x884 SWAP3 SWAP2 SWAP1 PUSH2 0x2A9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x905 JUMPI POP PUSH2 0x904 DUP3 PUSH2 0x1C7A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x954 DUP3 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x965 PUSH2 0x1A74 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 LT ISZERO PUSH2 0x9C0 JUMPI DUP1 PUSH32 0x0 PUSH2 0x9BB SWAP2 SWAP1 PUSH2 0x2A67 JUMP JUMPDEST PUSH2 0x9C2 JUMP JUMPDEST PUSH0 JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0xA32 DUP2 PUSH2 0x1E10 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAFE JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xF9968B3A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP2 SWAP1 PUSH2 0x28AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0xBBF JUMPI PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH32 0x61965C4E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB6 SWAP3 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH0 JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xD97 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC58 JUMPI PUSH2 0xC57 PUSH2 0x2B71 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD8A JUMPI PUSH1 0x5 PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP PUSH2 0xCAF SWAP2 SWAP1 PUSH2 0x2A67 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xCC0 JUMPI PUSH2 0xCBF PUSH2 0x2B71 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCFC JUMPI PUSH2 0xCFB PUSH2 0x2B71 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP1 SLOAD DUP1 PUSH2 0xD53 JUMPI PUSH2 0xD52 PUSH2 0x2B9E JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH2 0xD97 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xC20 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C910B69FE65A61F7531B9C5042B2329CA7179C77290AA7E2EB3AFA3C8511FD3 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xDE8 DUP3 PUSH2 0x9EC JUMP JUMPDEST PUSH2 0xDF1 DUP2 PUSH2 0x1E10 JUMP JUMPDEST PUSH2 0xDFB DUP4 DUP4 PUSH2 0x1E24 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xE09 PUSH2 0x1F0D JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0xE42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F36295200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEB2 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xF9968B3A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA9 SWAP2 SWAP1 PUSH2 0x28AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF7E JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xF9968B3A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF75 SWAP2 SWAP1 PUSH2 0x28AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFAB CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F53 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xFB5 DUP3 DUP3 PUSH2 0x66B JUMP JUMPDEST PUSH2 0xFBD PUSH2 0x1FD5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xFC9 PUSH2 0x1FDE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x102D JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1037 DUP3 DUP3 PUSH2 0x1FE5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x10CB DUP2 PUSH2 0x1E10 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x113B JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xF9968B3A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1132 SWAP2 SWAP1 PUSH2 0x28AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1207 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xC2A2F47500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FE SWAP2 SWAP1 PUSH2 0x28AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDFFBD9DED1C09446F09377DE547142DCCE7DC541C8B0B028142B1EBA7026B9E7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x1402 PUSH2 0x1A74 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1472 PUSH2 0x1F0D JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0x14AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F36295200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x151B JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xF9968B3A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1512 SWAP2 SWAP1 PUSH2 0x28AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1525 DUP3 DUP3 PUSH2 0x20CE JUMP JUMPDEST PUSH2 0x152D PUSH2 0x1FD5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x15E8 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x159F JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x1679 DUP4 DUP3 PUSH2 0x1CE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x168B DUP3 PUSH2 0x9EC JUMP JUMPDEST PUSH2 0x1694 DUP2 PUSH2 0x1E10 JUMP JUMPDEST PUSH2 0x169E DUP4 DUP4 PUSH2 0x1FE5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH2 0x172C DUP5 DUP4 PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1738 DUP5 DUP3 PUSH2 0x17ED JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x174A PUSH2 0x1F0D JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0x1783 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F36295200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x178D PUSH0 DUP3 PUSH2 0x20CE JUMP JUMPDEST PUSH2 0x1795 PUSH2 0x1FD5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x17A0 PUSH2 0x1F0D JUMP JUMPDEST PUSH0 CALLVALUE SUB PUSH2 0x17D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F36295200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17E3 PUSH0 CALLVALUE PUSH2 0x66B JUMP JUMPDEST PUSH2 0x17EB PUSH2 0x1FD5 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1898 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18BC SWAP2 SWAP1 PUSH2 0x2C51 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP2 SGT PUSH2 0x18FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x804B984B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19A1 JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1978 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x199C SWAP2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x12 JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19F0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A14 SWAP2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH2 0x1A23 SWAP2 SWAP1 PUSH2 0x2E58 JUMP JUMPDEST DUP3 PUSH1 0xA PUSH2 0x1A30 SWAP2 SWAP1 PUSH2 0x2E58 JUMP JUMPDEST PUSH2 0x1A3A SWAP2 SWAP1 PUSH2 0x2EA2 JUMP JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0x1A48 SWAP2 SWAP1 PUSH2 0x2E58 JUMP JUMPDEST DUP5 DUP9 PUSH2 0x1A54 SWAP2 SWAP1 PUSH2 0x2EA2 JUMP JUMPDEST PUSH2 0x1A5E SWAP2 SWAP1 PUSH2 0x2EA2 JUMP JUMPDEST PUSH2 0x1A68 SWAP2 SWAP1 PUSH2 0x2F10 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1B45 JUMPI PUSH0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1A9D JUMPI PUSH2 0x1A9C PUSH2 0x2B71 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x1B36 JUMPI PUSH0 PUSH2 0x1B1B DUP4 DUP4 PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B27 DUP4 DUP3 PUSH2 0x17ED JUMP JUMPDEST DUP6 PUSH2 0x1B32 SWAP2 SWAP1 PUSH2 0x2A34 JUMP JUMPDEST SWAP5 POP POP JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1A7B JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BF4 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BCB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BEF SWAP2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST PUSH2 0x1BF7 JUMP JUMPDEST PUSH1 0x12 JUMPDEST SWAP1 POP PUSH1 0x6 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND GT ISZERO PUSH2 0x1C34 JUMPI PUSH1 0x6 DUP2 PUSH2 0x1C15 SWAP2 SWAP1 PUSH2 0x2F40 JUMP JUMPDEST PUSH1 0xA PUSH2 0x1C21 SWAP2 SWAP1 PUSH2 0x2E58 JUMP JUMPDEST DUP4 PUSH2 0x1C2C SWAP2 SWAP1 PUSH2 0x2F10 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x6 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x1C6F JUMPI DUP1 PUSH1 0x6 PUSH2 0x1C50 SWAP2 SWAP1 PUSH2 0x2F40 JUMP JUMPDEST PUSH1 0xA PUSH2 0x1C5C SWAP2 SWAP1 PUSH2 0x2E58 JUMP JUMPDEST DUP4 PUSH2 0x1C67 SWAP2 SWAP1 PUSH2 0x2EA2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C74 JUMP JUMPDEST DUP3 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D8A JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D61 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D85 SWAP2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST PUSH2 0x1D8D JUMP JUMPDEST PUSH1 0x12 JUMPDEST SWAP1 POP PUSH1 0x6 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND GT ISZERO PUSH2 0x1DCA JUMPI PUSH1 0x6 DUP2 PUSH2 0x1DAB SWAP2 SWAP1 PUSH2 0x2F40 JUMP JUMPDEST PUSH1 0xA PUSH2 0x1DB7 SWAP2 SWAP1 PUSH2 0x2E58 JUMP JUMPDEST DUP4 PUSH2 0x1DC2 SWAP2 SWAP1 PUSH2 0x2EA2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1E0A JUMP JUMPDEST PUSH1 0x6 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x1E05 JUMPI DUP1 PUSH1 0x6 PUSH2 0x1DE6 SWAP2 SWAP1 PUSH2 0x2F40 JUMP JUMPDEST PUSH1 0xA PUSH2 0x1DF2 SWAP2 SWAP1 PUSH2 0x2E58 JUMP JUMPDEST DUP4 PUSH2 0x1DFD SWAP2 SWAP1 PUSH2 0x2F10 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1E0A JUMP JUMPDEST DUP3 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E21 DUP2 PUSH2 0x1E1C PUSH2 0x1FDE JUMP JUMPDEST PUSH2 0x249B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1E2F DUP4 DUP4 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x1F03 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1EA0 PUSH2 0x1FDE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1F07 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1F49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1FCF DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1F88 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x24EC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1FF0 DUP4 DUP4 PUSH2 0x1407 JUMP JUMPDEST ISZERO PUSH2 0x20C4 JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2061 PUSH2 0x1FDE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x20C8 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20D9 DUP4 DUP4 PUSH2 0x1B4D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x219E JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x61965C4E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2195 SWAP3 SWAP2 SWAP1 PUSH2 0x2A9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x21A9 DUP6 DUP6 PUSH2 0x17ED JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 GT ISZERO PUSH2 0x2232 JUMPI DUP1 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x2D05FCBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2229 SWAP3 SWAP2 SWAP1 PUSH2 0x2A9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x22B9 SWAP2 SWAP1 PUSH2 0x2A67 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x230C SWAP2 SWAP1 PUSH2 0x2A67 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2325 SWAP1 PUSH2 0x2AC1 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2401 JUMPI PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x2382 SWAP1 PUSH2 0x2FD6 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x23BC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23C1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x23FB JUMPI PUSH1 0x40 MLOAD PUSH31 0xE35D8600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x242D JUMP JUMPDEST PUSH2 0x242C CALLER DUP6 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2587 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDE1D532173C6DE1E3937C7AF1CB92745C738980729F53AC451A725F929F3B798 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0x248C SWAP3 SWAP2 SWAP1 PUSH2 0x2A9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x24A5 DUP3 DUP3 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x24E8 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24DF SWAP3 SWAP2 SWAP1 PUSH2 0x2FEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x250B JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x2524 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x253F JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2581 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2578 SWAP2 SWAP1 PUSH2 0x28AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2601 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x25BA SWAP3 SWAP2 SWAP1 PUSH2 0x3011 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x24EC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x263E DUP2 PUSH2 0x260A JUMP JUMPDEST DUP2 EQ PUSH2 0x2648 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2659 DUP2 PUSH2 0x2635 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2674 JUMPI PUSH2 0x2673 PUSH2 0x2606 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2681 DUP5 DUP3 DUP6 ADD PUSH2 0x264B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x269E DUP2 PUSH2 0x268A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26B7 PUSH0 DUP4 ADD DUP5 PUSH2 0x2695 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x26E6 DUP3 PUSH2 0x26BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F6 DUP2 PUSH2 0x26DC JUMP JUMPDEST DUP2 EQ PUSH2 0x2700 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2711 DUP2 PUSH2 0x26ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x272C JUMPI PUSH2 0x272B PUSH2 0x2606 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2739 DUP5 DUP3 DUP6 ADD PUSH2 0x2703 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2754 DUP2 PUSH2 0x2742 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x276D PUSH0 DUP4 ADD DUP5 PUSH2 0x274B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2785 DUP2 PUSH2 0x2773 JUMP JUMPDEST DUP2 EQ PUSH2 0x278F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27A0 DUP2 PUSH2 0x277C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27BB JUMPI PUSH2 0x27BA PUSH2 0x2606 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27C8 DUP5 DUP3 DUP6 ADD PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27DA DUP2 PUSH2 0x2773 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27F3 PUSH0 DUP4 ADD DUP5 PUSH2 0x27D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x280F JUMPI PUSH2 0x280E PUSH2 0x2606 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x281C DUP6 DUP3 DUP7 ADD PUSH2 0x2792 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x282D DUP6 DUP3 DUP7 ADD PUSH2 0x2703 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2840 DUP2 PUSH2 0x2742 JUMP JUMPDEST DUP2 EQ PUSH2 0x284A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x285B DUP2 PUSH2 0x2837 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2877 JUMPI PUSH2 0x2876 PUSH2 0x2606 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2884 DUP6 DUP3 DUP7 ADD PUSH2 0x2703 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2895 DUP6 DUP3 DUP7 ADD PUSH2 0x284D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x28A8 DUP2 PUSH2 0x26DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28C1 PUSH0 DUP4 ADD DUP5 PUSH2 0x289F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28DD JUMPI PUSH2 0x28DC PUSH2 0x2606 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28EA DUP6 DUP3 DUP7 ADD PUSH2 0x2703 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x28FB DUP6 DUP3 DUP7 ADD PUSH2 0x2703 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2937 DUP2 PUSH2 0x26DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2948 DUP4 DUP4 PUSH2 0x292E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x296A DUP3 PUSH2 0x2905 JUMP JUMPDEST PUSH2 0x2974 DUP2 DUP6 PUSH2 0x290F JUMP JUMPDEST SWAP4 POP PUSH2 0x297F DUP4 PUSH2 0x291F JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x29AF JUMPI DUP2 MLOAD PUSH2 0x2996 DUP9 DUP3 PUSH2 0x293D JUMP JUMPDEST SWAP8 POP PUSH2 0x29A1 DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2982 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29D4 DUP2 DUP5 PUSH2 0x2960 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29F1 JUMPI PUSH2 0x29F0 PUSH2 0x2606 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29FE DUP5 DUP3 DUP6 ADD PUSH2 0x284D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2A3E DUP3 PUSH2 0x2742 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A49 DUP4 PUSH2 0x2742 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A61 JUMPI PUSH2 0x2A60 PUSH2 0x2A07 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A71 DUP3 PUSH2 0x2742 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A7C DUP4 PUSH2 0x2742 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2A94 JUMPI PUSH2 0x2A93 PUSH2 0x2A07 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2AAD PUSH0 DUP4 ADD DUP6 PUSH2 0x274B JUMP JUMPDEST PUSH2 0x2ABA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x274B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2ACB DUP3 PUSH2 0x2742 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2AFD JUMPI PUSH2 0x2AFC PUSH2 0x2A07 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2B34 PUSH2 0x2B2F PUSH2 0x2B2A DUP5 PUSH2 0x2B08 JUMP JUMPDEST PUSH2 0x2B11 JUMP JUMPDEST PUSH2 0x2742 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B44 DUP2 PUSH2 0x2B1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B5D PUSH0 DUP4 ADD DUP6 PUSH2 0x2B3B JUMP JUMPDEST PUSH2 0x2B6A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x274B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BE9 DUP2 PUSH2 0x2BCB JUMP JUMPDEST DUP2 EQ PUSH2 0x2BF3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C04 DUP2 PUSH2 0x2BE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C1C DUP2 PUSH2 0x2C0A JUMP JUMPDEST DUP2 EQ PUSH2 0x2C26 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C37 DUP2 PUSH2 0x2C13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C4B DUP2 PUSH2 0x2837 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2C6A JUMPI PUSH2 0x2C69 PUSH2 0x2606 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C77 DUP9 DUP3 DUP10 ADD PUSH2 0x2BF6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2C88 DUP9 DUP3 DUP10 ADD PUSH2 0x2C29 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2C99 DUP9 DUP3 DUP10 ADD PUSH2 0x2C3D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2CAA DUP9 DUP3 DUP10 ADD PUSH2 0x2C3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2CBB DUP9 DUP3 DUP10 ADD PUSH2 0x2BF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CDD DUP2 PUSH2 0x2CC8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2CF8 DUP2 PUSH2 0x2CD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D13 JUMPI PUSH2 0x2D12 PUSH2 0x2606 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D20 DUP5 DUP3 DUP6 ADD PUSH2 0x2CEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x2D7E JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x2D5A JUMPI PUSH2 0x2D59 PUSH2 0x2A07 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x2D69 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2D77 DUP6 PUSH2 0x2D29 JUMP JUMPDEST SWAP5 POP PUSH2 0x2D3E JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2D96 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2E51 JUMP JUMPDEST DUP2 PUSH2 0x2DA3 JUMPI PUSH0 SWAP1 POP PUSH2 0x2E51 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2DB9 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2DC3 JUMPI PUSH2 0x2DF2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2E51 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2DD5 JUMPI PUSH2 0x2DD4 PUSH2 0x2A07 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x2DEC JUMPI PUSH2 0x2DEB PUSH2 0x2A07 JUMP JUMPDEST JUMPDEST POP PUSH2 0x2E51 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2E27 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2E22 JUMPI PUSH2 0x2E21 PUSH2 0x2A07 JUMP JUMPDEST JUMPDEST PUSH2 0x2E51 JUMP JUMPDEST PUSH2 0x2E34 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2D35 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2E4B JUMPI PUSH2 0x2E4A PUSH2 0x2A07 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2E62 DUP3 PUSH2 0x2742 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E6D DUP4 PUSH2 0x2CC8 JUMP JUMPDEST SWAP3 POP PUSH2 0x2E9A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2D87 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2EAC DUP3 PUSH2 0x2742 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EB7 DUP4 PUSH2 0x2742 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2EC5 DUP2 PUSH2 0x2742 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2EDC JUMPI PUSH2 0x2EDB PUSH2 0x2A07 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2F1A DUP3 PUSH2 0x2742 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F25 DUP4 PUSH2 0x2742 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2F35 JUMPI PUSH2 0x2F34 PUSH2 0x2EE3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2F4A DUP3 PUSH2 0x2CC8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F55 DUP4 PUSH2 0x2CC8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x2F6E JUMPI PUSH2 0x2F6D PUSH2 0x2A07 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2F87 PUSH0 DUP4 ADD DUP7 PUSH2 0x289F JUMP JUMPDEST PUSH2 0x2F94 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x289F JUMP JUMPDEST PUSH2 0x2FA1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x274B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x2FC1 PUSH0 DUP4 PUSH2 0x2FA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FCC DUP3 PUSH2 0x2FB3 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2FE0 DUP3 PUSH2 0x2FB6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2FFD PUSH0 DUP4 ADD DUP6 PUSH2 0x289F JUMP JUMPDEST PUSH2 0x300A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x27D1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3024 PUSH0 DUP4 ADD DUP6 PUSH2 0x289F JUMP JUMPDEST PUSH2 0x3031 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x274B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE SGT BLOCKHASH 0xFC 0xC7 SWAP1 TLOAD 0xF 0xE5 0xA9 DUP2 0xBD NUMBER PUSH13 0xF7777761CE3224A107B20C4292 RETURN 0xAC 0xB8 BASEFEE 0x25 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "513:19062:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6883:31;1899:1;6904:9;6883:8;:31::i;:::-;513:19062;;7054:26;;;;;;;;;;;;;;2541:202:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18182:150:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18679:210;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1341:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3786:120:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9887:714:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4202:136:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7717:605:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5304:245:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;19447:123:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9244:483;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;19206:138;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;886:60;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18450:111;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:136:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8789:253:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2196:49:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2695:32:12;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2588:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1113:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18985:114;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17312:253;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4618:138:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;17740:305:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8434:164;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7352:162;;;:::i;:::-;;11237:818;11324:16;11343:27;11356:5;11363:6;11343:12;:27::i;:::-;11324:46;;11399:23;11425:22;:20;:22::i;:::-;11399:48;;11517:12;11506:8;11488:15;:26;;;;:::i;:::-;:41;11484:198;;;11597:8;11640:15;11625:12;:30;;;;:::i;:::-;11553:117;;;;;;;;;;;;:::i;:::-;;;;;;;;11484:198;11744:24;11771:31;11788:5;11795:6;11771:16;:31::i;:::-;11744:58;;11859:16;11826:10;:22;11837:10;11826:22;;;;;;;;;;;;;;;:29;11849:5;11826:29;;;;;;;;;;;;;;;;:49;;;;;;;:::i;:::-;;;;;;;;11912:16;11886:15;:22;11902:5;11886:22;;;;;;;;;;;;;;;;:42;;;;;;;:::i;:::-;;;;;;;;11939:14;;:16;;;;;;;;;:::i;:::-;;;;;;12023:5;11999:48;;12011:10;11999:48;;;12030:6;12038:8;11999:48;;;;;;;:::i;:::-;;;;;;;;11294:761;;;11237:818;;:::o;2541:202:1:-;2626:4;2664:32;2649:47;;;:11;:47;;;;:87;;;;2700:36;2724:11;2700:23;:36::i;:::-;2649:87;2642:94;;2541:202;;;:::o;18182:150:12:-;18246:7;18273:51;18294:5;18301:15;:22;18317:5;18301:22;;;;;;;;;;;;;;;;18273:20;:51::i;:::-;18266:58;;18182:150;;;:::o;18679:210::-;18736:7;18756:20;18779:22;:20;:22::i;:::-;18756:45;;18835:12;18819;:28;;:62;;18869:12;18854;:27;;;;:::i;:::-;18819:62;;;18850:1;18819:62;18812:69;;;18679:210;:::o;1341:37::-;;;:::o;3786:120:1:-;3851:7;3877:6;:12;3884:4;3877:12;;;;;;;;;;;:22;;;3870:29;;3786:120;;;:::o;9887:714:12:-;923:23;2473:16:1;2484:4;2473:10;:16::i;:::-;10015:1:12::1;9975:42;;9983:12;:19;9996:5;9983:19;;;;;;;;;;;;;;;;;;;;;;;;;9975:42;;::::0;9971:116:::1;;10069:5;10041:34;;;;;;;;;;;:::i;:::-;;;;;;;;9971:116;10126:1;10101:15;:22;10117:5;10101:22;;;;;;;;;;;;;;;;:26;10097:122;;;10181:1;10184:15;:22;10200:5;10184:22;;;;;;;;;;;;;;;;10151:56;;;;;;;;;;;;:::i;:::-;;;;;;;;10097:122;10238:12;:19;10251:5;10238:19;;;;;;;;;;;;;;;;10231:26;;;;;;;;;;;10275:9;10270:287;10294:17;:24;;;;10290:1;:28;10270:287;;;10368:5;10344:29;;:17;10362:1;10344:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:29;;::::0;10340:206:::1;;10417:17;10462:1;10435:17;:24;;;;:28;;;;:::i;:::-;10417:47;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10394:17;10412:1;10394:20;;;;;;;;:::i;:::-;;;;;;;;;;:70;;;;;;;;;;;;;;;;;;10483:17;:23;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;10525:5;;10340:206;10320:3;;;;;;;10270:287;;;;10587:5;10574:19;;;;;;;;;;;;9887:714:::0;;:::o;4202:136:1:-;4276:18;4289:4;4276:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;:::-;;4202:136:::0;;;:::o;7717:605:12:-;2500:21:9;:19;:21::i;:::-;7817:1:12::1;7807:6;:11:::0;7803:46:::1;;7827:22;;;;;;;;;;;;;;7803:46;1899:1;7864:19;;:5;:19;;::::0;7860:66:::1;;7920:5;7892:34;;;;;;;;;;;:::i;:::-;;;;;;;;7860:66;7981:1;7941:42;;7949:12;:19;7962:5;7949:19;;;;;;;;;;;;;;;;;;;;;;;;;7941:42;;::::0;7937:116:::1;;8035:5;8007:34;;;;;;;;;;;:::i;:::-;;;;;;;;7937:116;8215:65;8246:10;8266:4;8273:6;8222:5;8215:30;;;;:65;;;;;;:::i;:::-;8291:23;8300:5;8307:6;8291:8;:23::i;:::-;2542:20:9::0;:18;:20::i;:::-;7717:605:12;;:::o;5304:245:1:-;5419:12;:10;:12::i;:::-;5397:34;;:18;:34;;;5393:102;;5454:30;;;;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;19447:123:12:-;19507:7;19542:12;:19;19555:5;19542:19;;;;;;;;;;;;;;;;;;;;;;;;;19527:35;;19447:123;;;:::o;9244:483::-;923:23;2473:16:1;2484:4;2473:10;:16::i;:::-;1899:1:12::1;9374:19;;:5;:19;;::::0;9370:66:::1;;9430:5;9402:34;;;;;;;;;;;:::i;:::-;;;;;;;;9370:66;9491:1;9451:42;;9459:12;:19;9472:5;9459:19;;;;;;;;;;;;;;;;;;;;;;;;;9451:42;;;9447:120;;9549:5;9517:38;;;;;;;;;;;:::i;:::-;;;;;;;;9447:120;9623:9;9579:12;:19;9592:5;9579:19;;;;;;;;;;;;;;;;:54;;;;;;;;;;;;;;;;;;9644:17;9667:5;9644:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9709:9;9691:28;;9702:5;9691:28;;;;;;;;;;;;9244:483:::0;;;:::o;19206:138::-;19270:4;19334:1;19294:42;;19302:12;:19;19315:5;19302:19;;;;;;;;;;;;;;;;;;;;;;;;;19294:42;;;;19287:49;;19206:138;;;:::o;886:60::-;923:23;886:60;:::o;18450:111::-;18504:7;18531:22;:20;:22::i;:::-;18524:29;;18450:111;:::o;2830:136:1:-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;8789:253:12:-;2500:21:9;:19;:21::i;:::-;8890:1:12::1;8880:6;:11:::0;8876:46:::1;;8900:22;;;;;;;;;;;;;;8876:46;1899:1;8937:19;;:5;:19;;::::0;8933:66:::1;;8993:5;8965:34;;;;;;;;;;;:::i;:::-;;;;;;;;8933:66;9010:24;9020:5;9027:6;9010:9;:24::i;:::-;2542:20:9::0;:18;:20::i;:::-;8789:253:12;;:::o;2196:49:1:-;2241:4;2196:49;;;:::o;2695:32:12:-;;;;:::o;2588:29::-;;;;:::o;1113:49::-;;;:::o;18985:114::-;19038:16;19074:17;19067:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18985:114;:::o;17312:253::-;17384:7;17404:25;17432:10;:16;17443:4;17432:16;;;;;;;;;;;;;;;:23;17449:5;17432:23;;;;;;;;;;;;;;;;17404:51;;17493:46;17514:5;17521:17;17493:20;:46::i;:::-;17486:53;;;17312:253;;;;:::o;4618:138:1:-;4693:18;4706:4;4693:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;:::-;;4618:138:::0;;;:::o;17740:305:12:-;17815:7;17835:25;17863:10;:16;17874:4;17863:16;;;;;;;;;;;;;;;:23;17880:5;17863:23;;;;;;;;;;;;;;;;17835:51;;17917:20;17940:46;17961:5;17968:17;17940:20;:46::i;:::-;17917:69;;18004:33;18017:5;18024:12;18004;:33::i;:::-;17997:40;;;;17740:305;;;;:::o;8434:164::-;2500:21:9;:19;:21::i;:::-;8518:1:12::1;8508:6;:11:::0;8504:46:::1;;8528:22;;;;;;;;;;;;;;8504:46;8561:29;1899:1;8583:6;8561:9;:29::i;:::-;2542:20:9::0;:18;:20::i;:::-;8434:164:12;:::o;7352:162::-;2500:21:9;:19;:21::i;:::-;7432:1:12::1;7419:9;:14:::0;7415:49:::1;;7442:22;;;;;;;;;;;;;;7415:49;7475:31;1899:1;7496:9;7475:8;:31::i;:::-;2542:20:9::0;:18;:20::i;:::-;7352:162:12:o;13883:730::-;13958:7;13978:31;14012:12;:19;14025:5;14012:19;;;;;;;;;;;;;;;;;;;;;;;;;13978:53;;14057:12;14079:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14054:52;;;;;;14130:1;14121:5;:10;14117:51;;14140:28;;;;;;;;;;;;;;14117:51;14241:19;1899:1;14263:19;;:5;:19;;;:59;;14305:5;14290:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14263:59;;;14285:2;14263:59;14241:81;;14333:23;14359:9;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14333:46;;14587:17;14583:2;:21;;;;:::i;:::-;14567:13;14563:2;:17;;;;:::i;:::-;:41;;;;:::i;:::-;1748:2;14525;:16;;;;:::i;:::-;14516:5;14499:6;:23;;;;:::i;:::-;:42;;;;:::i;:::-;14498:107;;;;:::i;:::-;14491:114;;;;;;13883:730;;;;:::o;15437:695::-;15491:7;15511:16;15530:1;15511:20;;15557:9;15552:537;15576:17;:24;;;;15572:1;:28;15552:537;;;15622:13;15638:17;15656:1;15638:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15622:36;;15673:24;15700:15;:22;15716:5;15700:22;;;;;;;;;;;;;;;;15673:49;;15785:1;15766:16;:20;15762:316;;;15874:20;15897:45;15918:5;15925:16;15897:20;:45::i;:::-;15874:68;;16029:33;16042:5;16049:12;16029;:33::i;:::-;16017:45;;;;;:::i;:::-;;;15788:290;15762:316;15607:482;;15602:3;;;;;;;15552:537;;;;16116:8;16109:15;;;15437:695;:::o;14864:468::-;14943:7;14963:19;1899:1;14985:19;;:5;:19;;;:59;;15027:5;15012:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14985:59;;;15007:2;14985:59;14963:81;;1596:1;15069:29;;:13;:29;;;15065:236;;;1596:1;15137:13;:29;;;;:::i;:::-;15132:2;:35;;;;:::i;:::-;15122:6;:46;;;;:::i;:::-;15115:53;;;;;15065:236;1596:1;15190:29;;:13;:29;;;15186:115;;;15274:13;1596:1;15258:29;;;;:::i;:::-;15253:2;:35;;;;:::i;:::-;15243:6;:46;;;;:::i;:::-;15236:53;;;;;15186:115;15318:6;15311:13;;;14864:468;;;;;:::o;730:146:10:-;806:4;844:25;829:40;;;:11;:40;;;;822:47;;730:146;;;:::o;16381:548:12:-;16504:7;16530:19;1899:1;16552:19;;:5;:19;;;:59;;16594:5;16579:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16552:59;;;16574:2;16552:59;16530:81;;1596:1;16636:29;;:13;:29;;;16632:256;;;1596:1;16714:13;:29;;;;:::i;:::-;16709:2;:35;;;;:::i;:::-;16689:16;:56;;;;:::i;:::-;16682:63;;;;;16632:256;1596:1;16767:29;;:13;:29;;;16763:125;;;16861:13;1596:1;16845:29;;;;:::i;:::-;16840:2;:35;;;;:::i;:::-;16820:16;:56;;;;:::i;:::-;16813:63;;;;;16763:125;16905:16;16898:23;;;16381:548;;;;;:::o;3175:103:1:-;3241:30;3252:4;3258:12;:10;:12::i;:::-;3241:10;:30::i;:::-;3175:103;:::o;6155:316::-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;:12::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;2575:307:9:-;1899:1;2702:7;;:18;2698:86;;2743:30;;;;;;;;;;;;;;2698:86;1899:1;2858:7;:17;;;;2575:307::o;1618:188:7:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;2888:208:9:-;1857:1;3068:7;:21;;;;2888:208::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;6708:317:1:-;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:6;:12;6851:4;6844:12;;;;;;;;;;;:20;;:29;6865:7;6844:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6927:12;:10;:12::i;:::-;6900:40;;6918:7;6900:40;;6912:4;6900:40;;;;;;;;;;6961:4;6954:11;;;;6802:217;7003:5;6996:12;;6708:317;;;;;:::o;12256:1163:12:-;12344:24;12371:31;12388:5;12395:6;12371:16;:31::i;:::-;12344:58;;12413:19;12435:10;:22;12446:10;12435:22;;;;;;;;;;;;;;;:29;12458:5;12435:29;;;;;;;;;;;;;;;;12413:51;;12508:11;12489:16;:30;12485:130;;;12573:16;12591:11;12543:60;;;;;;;;;;;;:::i;:::-;;;;;;;;12485:130;12627:16;12646:27;12659:5;12666:6;12646:12;:27::i;:::-;12627:46;;12710:24;12699:8;:35;12695:197;;;12814:8;12841:24;12758:122;;;;;;;;;;;;:::i;:::-;;;;;;;;12695:197;12957:16;12924:10;:22;12935:10;12924:22;;;;;;;;;;;;;;;:29;12947:5;12924:29;;;;;;;;;;;;;;;;:49;;;;;;;:::i;:::-;;;;;;;;13010:16;12984:15;:22;13000:5;12984:22;;;;;;;;;;;;;;;;:42;;;;;;;:::i;:::-;;;;;;;;13037:17;;:19;;;;;;;;;:::i;:::-;;;;;;1899:1;13098:19;;:5;:19;;;13094:249;;13135:12;13153:10;:15;;13176:6;13153:34;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13134:53;;;13207:7;13202:50;;13223:29;;;;;;;;;;;;;;13202:50;13119:145;13094:249;;;13285:46;13312:10;13324:6;13292:5;13285:26;;;;:46;;;;;:::i;:::-;13094:249;13387:5;13360:51;;13375:10;13360:51;;;13394:6;13402:8;13360:51;;;;;;;:::i;:::-;;;;;;;;12314:1105;;;12256:1163;;:::o;3408:197:1:-;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3574:7;3583:4;3541:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3491:108;3408:197;;:::o;8370:720:7:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;1219:160::-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;88:117:13:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:329::-;2084:6;2133:2;2121:9;2112:7;2108:23;2104:32;2101:119;;;2139:79;;:::i;:::-;2101:119;2259:1;2284:53;2329:7;2320:6;2309:9;2305:22;2284:53;:::i;:::-;2274:63;;2230:117;2025:329;;;;:::o;2360:77::-;2397:7;2426:5;2415:16;;2360:77;;;:::o;2443:118::-;2530:24;2548:5;2530:24;:::i;:::-;2525:3;2518:37;2443:118;;:::o;2567:222::-;2660:4;2698:2;2687:9;2683:18;2675:26;;2711:71;2779:1;2768:9;2764:17;2755:6;2711:71;:::i;:::-;2567:222;;;;:::o;2795:77::-;2832:7;2861:5;2850:16;;2795:77;;;:::o;2878:122::-;2951:24;2969:5;2951:24;:::i;:::-;2944:5;2941:35;2931:63;;2990:1;2987;2980:12;2931:63;2878:122;:::o;3006:139::-;3052:5;3090:6;3077:20;3068:29;;3106:33;3133:5;3106:33;:::i;:::-;3006:139;;;;:::o;3151:329::-;3210:6;3259:2;3247:9;3238:7;3234:23;3230:32;3227:119;;;3265:79;;:::i;:::-;3227:119;3385:1;3410:53;3455:7;3446:6;3435:9;3431:22;3410:53;:::i;:::-;3400:63;;3356:117;3151:329;;;;:::o;3486:118::-;3573:24;3591:5;3573:24;:::i;:::-;3568:3;3561:37;3486:118;;:::o;3610:222::-;3703:4;3741:2;3730:9;3726:18;3718:26;;3754:71;3822:1;3811:9;3807:17;3798:6;3754:71;:::i;:::-;3610:222;;;;:::o;3838:474::-;3906:6;3914;3963:2;3951:9;3942:7;3938:23;3934:32;3931:119;;;3969:79;;:::i;:::-;3931:119;4089:1;4114:53;4159:7;4150:6;4139:9;4135:22;4114:53;:::i;:::-;4104:63;;4060:117;4216:2;4242:53;4287:7;4278:6;4267:9;4263:22;4242:53;:::i;:::-;4232:63;;4187:118;3838:474;;;;;:::o;4318:122::-;4391:24;4409:5;4391:24;:::i;:::-;4384:5;4381:35;4371:63;;4430:1;4427;4420:12;4371:63;4318:122;:::o;4446:139::-;4492:5;4530:6;4517:20;4508:29;;4546:33;4573:5;4546:33;:::i;:::-;4446:139;;;;:::o;4591:474::-;4659:6;4667;4716:2;4704:9;4695:7;4691:23;4687:32;4684:119;;;4722:79;;:::i;:::-;4684:119;4842:1;4867:53;4912:7;4903:6;4892:9;4888:22;4867:53;:::i;:::-;4857:63;;4813:117;4969:2;4995:53;5040:7;5031:6;5020:9;5016:22;4995:53;:::i;:::-;4985:63;;4940:118;4591:474;;;;;:::o;5071:118::-;5158:24;5176:5;5158:24;:::i;:::-;5153:3;5146:37;5071:118;;:::o;5195:222::-;5288:4;5326:2;5315:9;5311:18;5303:26;;5339:71;5407:1;5396:9;5392:17;5383:6;5339:71;:::i;:::-;5195:222;;;;:::o;5423:474::-;5491:6;5499;5548:2;5536:9;5527:7;5523:23;5519:32;5516:119;;;5554:79;;:::i;:::-;5516:119;5674:1;5699:53;5744:7;5735:6;5724:9;5720:22;5699:53;:::i;:::-;5689:63;;5645:117;5801:2;5827:53;5872:7;5863:6;5852:9;5848:22;5827:53;:::i;:::-;5817:63;;5772:118;5423:474;;;;;:::o;5903:114::-;5970:6;6004:5;5998:12;5988:22;;5903:114;;;:::o;6023:184::-;6122:11;6156:6;6151:3;6144:19;6196:4;6191:3;6187:14;6172:29;;6023:184;;;;:::o;6213:132::-;6280:4;6303:3;6295:11;;6333:4;6328:3;6324:14;6316:22;;6213:132;;;:::o;6351:108::-;6428:24;6446:5;6428:24;:::i;:::-;6423:3;6416:37;6351:108;;:::o;6465:179::-;6534:10;6555:46;6597:3;6589:6;6555:46;:::i;:::-;6633:4;6628:3;6624:14;6610:28;;6465:179;;;;:::o;6650:113::-;6720:4;6752;6747:3;6743:14;6735:22;;6650:113;;;:::o;6799:732::-;6918:3;6947:54;6995:5;6947:54;:::i;:::-;7017:86;7096:6;7091:3;7017:86;:::i;:::-;7010:93;;7127:56;7177:5;7127:56;:::i;:::-;7206:7;7237:1;7222:284;7247:6;7244:1;7241:13;7222:284;;;7323:6;7317:13;7350:63;7409:3;7394:13;7350:63;:::i;:::-;7343:70;;7436:60;7489:6;7436:60;:::i;:::-;7426:70;;7282:224;7269:1;7266;7262:9;7257:14;;7222:284;;;7226:14;7522:3;7515:10;;6923:608;;;6799:732;;;;:::o;7537:373::-;7680:4;7718:2;7707:9;7703:18;7695:26;;7767:9;7761:4;7757:20;7753:1;7742:9;7738:17;7731:47;7795:108;7898:4;7889:6;7795:108;:::i;:::-;7787:116;;7537:373;;;;:::o;7916:329::-;7975:6;8024:2;8012:9;8003:7;7999:23;7995:32;7992:119;;;8030:79;;:::i;:::-;7992:119;8150:1;8175:53;8220:7;8211:6;8200:9;8196:22;8175:53;:::i;:::-;8165:63;;8121:117;7916:329;;;;:::o;8251:180::-;8299:77;8296:1;8289:88;8396:4;8393:1;8386:15;8420:4;8417:1;8410:15;8437:191;8477:3;8496:20;8514:1;8496:20;:::i;:::-;8491:25;;8530:20;8548:1;8530:20;:::i;:::-;8525:25;;8573:1;8570;8566:9;8559:16;;8594:3;8591:1;8588:10;8585:36;;;8601:18;;:::i;:::-;8585:36;8437:191;;;;:::o;8634:194::-;8674:4;8694:20;8712:1;8694:20;:::i;:::-;8689:25;;8728:20;8746:1;8728:20;:::i;:::-;8723:25;;8772:1;8769;8765:9;8757:17;;8796:1;8790:4;8787:11;8784:37;;;8801:18;;:::i;:::-;8784:37;8634:194;;;;:::o;8834:332::-;8955:4;8993:2;8982:9;8978:18;8970:26;;9006:71;9074:1;9063:9;9059:17;9050:6;9006:71;:::i;:::-;9087:72;9155:2;9144:9;9140:18;9131:6;9087:72;:::i;:::-;8834:332;;;;;:::o;9172:233::-;9211:3;9234:24;9252:5;9234:24;:::i;:::-;9225:33;;9280:66;9273:5;9270:77;9267:103;;9350:18;;:::i;:::-;9267:103;9397:1;9390:5;9386:13;9379:20;;9172:233;;;:::o;9411:85::-;9456:7;9485:5;9474:16;;9411:85;;;:::o;9502:60::-;9530:3;9551:5;9544:12;;9502:60;;;:::o;9568:158::-;9626:9;9659:61;9677:42;9686:32;9712:5;9686:32;:::i;:::-;9677:42;:::i;:::-;9659:61;:::i;:::-;9646:74;;9568:158;;;:::o;9732:147::-;9827:45;9866:5;9827:45;:::i;:::-;9822:3;9815:58;9732:147;;:::o;9885:348::-;10014:4;10052:2;10041:9;10037:18;10029:26;;10065:79;10141:1;10130:9;10126:17;10117:6;10065:79;:::i;:::-;10154:72;10222:2;10211:9;10207:18;10198:6;10154:72;:::i;:::-;9885:348;;;;;:::o;10239:180::-;10287:77;10284:1;10277:88;10384:4;10381:1;10374:15;10408:4;10405:1;10398:15;10425:180;10473:77;10470:1;10463:88;10570:4;10567:1;10560:15;10594:4;10591:1;10584:15;10611:105;10647:7;10687:22;10680:5;10676:34;10665:45;;10611:105;;;:::o;10722:120::-;10794:23;10811:5;10794:23;:::i;:::-;10787:5;10784:34;10774:62;;10832:1;10829;10822:12;10774:62;10722:120;:::o;10848:141::-;10904:5;10935:6;10929:13;10920:22;;10951:32;10977:5;10951:32;:::i;:::-;10848:141;;;;:::o;10995:76::-;11031:7;11060:5;11049:16;;10995:76;;;:::o;11077:120::-;11149:23;11166:5;11149:23;:::i;:::-;11142:5;11139:34;11129:62;;11187:1;11184;11177:12;11129:62;11077:120;:::o;11203:141::-;11259:5;11290:6;11284:13;11275:22;;11306:32;11332:5;11306:32;:::i;:::-;11203:141;;;;:::o;11350:143::-;11407:5;11438:6;11432:13;11423:22;;11454:33;11481:5;11454:33;:::i;:::-;11350:143;;;;:::o;11499:971::-;11602:6;11610;11618;11626;11634;11683:3;11671:9;11662:7;11658:23;11654:33;11651:120;;;11690:79;;:::i;:::-;11651:120;11810:1;11835:63;11890:7;11881:6;11870:9;11866:22;11835:63;:::i;:::-;11825:73;;11781:127;11947:2;11973:63;12028:7;12019:6;12008:9;12004:22;11973:63;:::i;:::-;11963:73;;11918:128;12085:2;12111:64;12167:7;12158:6;12147:9;12143:22;12111:64;:::i;:::-;12101:74;;12056:129;12224:2;12250:64;12306:7;12297:6;12286:9;12282:22;12250:64;:::i;:::-;12240:74;;12195:129;12363:3;12390:63;12445:7;12436:6;12425:9;12421:22;12390:63;:::i;:::-;12380:73;;12334:129;11499:971;;;;;;;;:::o;12476:86::-;12511:7;12551:4;12544:5;12540:16;12529:27;;12476:86;;;:::o;12568:118::-;12639:22;12655:5;12639:22;:::i;:::-;12632:5;12629:33;12619:61;;12676:1;12673;12666:12;12619:61;12568:118;:::o;12692:139::-;12747:5;12778:6;12772:13;12763:22;;12794:31;12819:5;12794:31;:::i;:::-;12692:139;;;;:::o;12837:347::-;12905:6;12954:2;12942:9;12933:7;12929:23;12925:32;12922:119;;;12960:79;;:::i;:::-;12922:119;13080:1;13105:62;13159:7;13150:6;13139:9;13135:22;13105:62;:::i;:::-;13095:72;;13051:126;12837:347;;;;:::o;13190:102::-;13232:8;13279:5;13276:1;13272:13;13251:34;;13190:102;;;:::o;13298:848::-;13359:5;13366:4;13390:6;13381:15;;13414:5;13405:14;;13428:712;13449:1;13439:8;13436:15;13428:712;;;13544:4;13539:3;13535:14;13529:4;13526:24;13523:50;;;13553:18;;:::i;:::-;13523:50;13603:1;13593:8;13589:16;13586:451;;;14018:4;14011:5;14007:16;13998:25;;13586:451;14068:4;14062;14058:15;14050:23;;14098:32;14121:8;14098:32;:::i;:::-;14086:44;;13428:712;;;13298:848;;;;;;;:::o;14152:1073::-;14206:5;14397:8;14387:40;;14418:1;14409:10;;14420:5;;14387:40;14446:4;14436:36;;14463:1;14454:10;;14465:5;;14436:36;14532:4;14580:1;14575:27;;;;14616:1;14611:191;;;;14525:277;;14575:27;14593:1;14584:10;;14595:5;;;14611:191;14656:3;14646:8;14643:17;14640:43;;;14663:18;;:::i;:::-;14640:43;14712:8;14709:1;14705:16;14696:25;;14747:3;14740:5;14737:14;14734:40;;;14754:18;;:::i;:::-;14734:40;14787:5;;;14525:277;;14911:2;14901:8;14898:16;14892:3;14886:4;14883:13;14879:36;14861:2;14851:8;14848:16;14843:2;14837:4;14834:12;14830:35;14814:111;14811:246;;;14967:8;14961:4;14957:19;14948:28;;15002:3;14995:5;14992:14;14989:40;;;15009:18;;:::i;:::-;14989:40;15042:5;;14811:246;15082:42;15120:3;15110:8;15104:4;15101:1;15082:42;:::i;:::-;15067:57;;;;15156:4;15151:3;15147:14;15140:5;15137:25;15134:51;;;15165:18;;:::i;:::-;15134:51;15214:4;15207:5;15203:16;15194:25;;14152:1073;;;;;;:::o;15231:281::-;15289:5;15313:23;15331:4;15313:23;:::i;:::-;15305:31;;15357:25;15373:8;15357:25;:::i;:::-;15345:37;;15401:104;15438:66;15428:8;15422:4;15401:104;:::i;:::-;15392:113;;15231:281;;;;:::o;15518:410::-;15558:7;15581:20;15599:1;15581:20;:::i;:::-;15576:25;;15615:20;15633:1;15615:20;:::i;:::-;15610:25;;15670:1;15667;15663:9;15692:30;15710:11;15692:30;:::i;:::-;15681:41;;15871:1;15862:7;15858:15;15855:1;15852:22;15832:1;15825:9;15805:83;15782:139;;15901:18;;:::i;:::-;15782:139;15566:362;15518:410;;;;:::o;15934:180::-;15982:77;15979:1;15972:88;16079:4;16076:1;16069:15;16103:4;16100:1;16093:15;16120:185;16160:1;16177:20;16195:1;16177:20;:::i;:::-;16172:25;;16211:20;16229:1;16211:20;:::i;:::-;16206:25;;16250:1;16240:35;;16255:18;;:::i;:::-;16240:35;16297:1;16294;16290:9;16285:14;;16120:185;;;;:::o;16311:191::-;16349:4;16369:18;16385:1;16369:18;:::i;:::-;16364:23;;16401:18;16417:1;16401:18;:::i;:::-;16396:23;;16443:1;16440;16436:9;16428:17;;16467:4;16461;16458:14;16455:40;;;16475:18;;:::i;:::-;16455:40;16311:191;;;;:::o;16508:442::-;16657:4;16695:2;16684:9;16680:18;16672:26;;16708:71;16776:1;16765:9;16761:17;16752:6;16708:71;:::i;:::-;16789:72;16857:2;16846:9;16842:18;16833:6;16789:72;:::i;:::-;16871;16939:2;16928:9;16924:18;16915:6;16871:72;:::i;:::-;16508:442;;;;;;:::o;16956:147::-;17057:11;17094:3;17079:18;;16956:147;;;;:::o;17109:114::-;;:::o;17229:398::-;17388:3;17409:83;17490:1;17485:3;17409:83;:::i;:::-;17402:90;;17501:93;17590:3;17501:93;:::i;:::-;17619:1;17614:3;17610:11;17603:18;;17229:398;;;:::o;17633:379::-;17817:3;17839:147;17982:3;17839:147;:::i;:::-;17832:154;;18003:3;17996:10;;17633:379;;;:::o;18018:332::-;18139:4;18177:2;18166:9;18162:18;18154:26;;18190:71;18258:1;18247:9;18243:17;18234:6;18190:71;:::i;:::-;18271:72;18339:2;18328:9;18324:18;18315:6;18271:72;:::i;:::-;18018:332;;;;;:::o;18356:::-;18477:4;18515:2;18504:9;18500:18;18492:26;;18528:71;18596:1;18585:9;18581:17;18572:6;18528:71;:::i;:::-;18609:72;18677:2;18666:9;18662:18;18653:6;18609:72;:::i;:::-;18356:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2479600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "285",
								"ADMIN_ROLE()": "436",
								"DEFAULT_ADMIN_ROLE()": "419",
								"addTokenSupport(address,address)": "infinite",
								"depositETH()": "infinite",
								"depositToken(address,uint256)": "infinite",
								"getAvailableBankCapUSD()": "infinite",
								"getBalance(address,address)": "infinite",
								"getBalanceUSD(address,address)": "infinite",
								"getPriceFeed(address)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"getSupportedTokens()": "infinite",
								"getTotalDeposits(address)": "infinite",
								"getTotalDepositsUSD()": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3167",
								"i_bankCapUSD()": "infinite",
								"i_withdrawalThresholdUSD()": "infinite",
								"isTokenSupported(address)": "2980",
								"removeTokenSupport(address)": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"s_depositCount()": "2558",
								"s_withdrawalCount()": "2536",
								"supportsInterface(bytes4)": "741",
								"withdrawETH(uint256)": "infinite",
								"withdrawToken(address,uint256)": "infinite"
							},
							"internal": {
								"_denormalizeFromUSDC(address,uint256)": "infinite",
								"_deposit(address,uint256)": "infinite",
								"_getTotalDepositsUSD()": "infinite",
								"_getUSDValue(address,uint256)": "infinite",
								"_normalizeToUSDC(address,uint256)": "infinite",
								"_withdraw(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 513,
									"end": 19575,
									"name": "PUSH",
									"source": 12,
									"value": "C0"
								},
								{
									"begin": 513,
									"end": 19575,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 513,
									"end": 19575,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 5788,
									"end": 6576,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2061,
									"end": 2068,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6033,
									"end": 6034,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6006,
									"end": 6029,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6006,
									"end": 6034,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 6006,
									"end": 6054,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 6006,
									"end": 6054,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 6006,
									"end": 6054,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6006,
									"end": 6054,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6053,
									"end": 6054,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6038,
									"end": 6049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6038,
									"end": 6054,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 6006,
									"end": 6054,
									"name": "tag",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 6006,
									"end": 6054,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6002,
									"end": 6112,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6002,
									"end": 6112,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 6002,
									"end": 6112,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6078,
									"end": 6100,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 6078,
									"end": 6100,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 6078,
									"end": 6100,
									"name": "PUSH",
									"source": 12,
									"value": "3F36295200000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6078,
									"end": 6100,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6078,
									"end": 6100,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 6078,
									"end": 6100,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 6078,
									"end": 6100,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6078,
									"end": 6100,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 6078,
									"end": 6100,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 6078,
									"end": 6100,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 6078,
									"end": 6100,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6078,
									"end": 6100,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 6078,
									"end": 6100,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6078,
									"end": 6100,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 6002,
									"end": 6112,
									"name": "tag",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 6002,
									"end": 6112,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6151,
									"end": 6174,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6124,
									"end": 6174,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 6124,
									"end": 6174,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6124,
									"end": 6174,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6124,
									"end": 6174,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 6124,
									"end": 6174,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6124,
									"end": 6174,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6200,
									"end": 6211,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6185,
									"end": 6211,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 6185,
									"end": 6211,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6185,
									"end": 6211,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6185,
									"end": 6211,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 6185,
									"end": 6211,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6185,
									"end": 6211,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6292,
									"end": 6334,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 2241,
									"end": 2245,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6303,
									"end": 6321,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 6303,
									"end": 6321,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 6323,
									"end": 6333,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 6292,
									"end": 6302,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 6292,
									"end": 6302,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6292,
									"end": 6302,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 6292,
									"end": 6334,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6292,
									"end": 6334,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 6292,
									"end": 6334,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6292,
									"end": 6334,
									"name": "tag",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 6292,
									"end": 6334,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6292,
									"end": 6334,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6345,
									"end": 6379,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 923,
									"end": 946,
									"name": "PUSH",
									"source": 12,
									"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
								},
								{
									"begin": 6368,
									"end": 6378,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 6345,
									"end": 6355,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 6345,
									"end": 6355,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6345,
									"end": 6355,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 6345,
									"end": 6379,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6345,
									"end": 6379,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 6345,
									"end": 6379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6345,
									"end": 6379,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 6345,
									"end": 6379,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6345,
									"end": 6379,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6509,
									"end": 6522,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6472,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 6460,
									"end": 6484,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1899,
									"end": 1900,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6484,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6460,
									"end": 6484,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6484,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6460,
									"end": 6484,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6484,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6484,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6484,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6460,
									"end": 6484,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6484,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6484,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6484,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6484,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6460,
									"end": 6484,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6484,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6460,
									"end": 6484,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6484,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6460,
									"end": 6523,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 6460,
									"end": 6523,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6523,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6523,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6523,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6523,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6460,
									"end": 6523,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6523,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6523,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6523,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6523,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6523,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6460,
									"end": 6523,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6523,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6523,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6523,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6523,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 6460,
									"end": 6523,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6551,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 1899,
									"end": 1900,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 6534,
									"end": 6568,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5788,
									"end": 6576,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 513,
									"end": 19575,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 513,
									"end": 19575,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6232,
									"end": 6236,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 6261,
									"end": 6265,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6267,
									"end": 6274,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6253,
									"end": 6275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6323,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6291,
									"end": 6297,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6312,
									"end": 6319,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6373,
									"end": 6385,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6358,
									"end": 6362,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 1,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 6407,
									"end": 6411,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6449,
									"end": 6454,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6155,
									"end": 6471,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2907,
									"end": 2911,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2936,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2937,
									"end": 2941,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2951,
									"end": 2958,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2830,
									"end": 2966,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 694,
									"end": 820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 826,
									"end": 922,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 826,
									"end": 922,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 863,
									"end": 870,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 910,
									"end": 915,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 892,
									"end": 916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 892,
									"end": 916,
									"name": "tag",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 881,
									"end": 916,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 881,
									"end": 916,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 826,
									"end": 922,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 826,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 513,
									"end": 19575,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 513,
									"end": 19575,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 513,
									"end": 19575,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 513,
									"end": 19575,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 513,
									"end": 19575,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 513,
									"end": 19575,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 513,
									"end": 19575,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 513,
									"end": 19575,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 513,
									"end": 19575,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 513,
									"end": 19575,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 513,
									"end": 19575,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 513,
									"end": 19575,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1219"
								},
								{
									"begin": 513,
									"end": 19575,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 513,
									"end": 19575,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1216"
								},
								{
									"begin": 513,
									"end": 19575,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 513,
									"end": 19575,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 513,
									"end": 19575,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201a1340fcc7905c0fe5a981bd436cf7777761ce3224a107b20c4292f3acb8482564736f6c634300081a0033",
									".code": [
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "83E397B8"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "D15F58FB"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "D547741F"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "D547741F"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "E62615C6"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "F14210A6"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "F6326FB3"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "D15F58FB"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "D3C7C2C7"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "D4FAC45D"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "83E397B8"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "91D14854"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "9E281A98"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "A217FDDF"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "B2343B1C"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "CAC2E25F"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "2F2FF15D"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "5B6CCA80"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "5B6CCA80"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "5CCF7AC4"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "75151B63"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "75B238FC"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "2F2FF15D"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "338B5DEA"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "36568ABE"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "251CFA1"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "8133237"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "CCEE433"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "248A9CA3"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH",
											"source": 12,
											"value": "2BA8D939"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6883,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6904,
											"end": 6913,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 6883,
											"end": 6891,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 6883,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6883,
											"end": 6914,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 6883,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 513,
											"end": 19575,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "PUSH",
											"source": 12,
											"value": "2AE871A500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 18182,
											"end": 18332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 18182,
											"end": 18332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 18182,
											"end": 18332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 18679,
											"end": 18889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 18679,
											"end": 18889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1341,
											"end": 1378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 1341,
											"end": 1378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 9887,
											"end": 10601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 9887,
											"end": 10601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 7717,
											"end": 8322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 7717,
											"end": 8322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 19447,
											"end": 19570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 19447,
											"end": 19570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 19447,
											"end": 19570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 9244,
											"end": 9727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 9244,
											"end": 9727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 19206,
											"end": 19344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 19206,
											"end": 19344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 19206,
											"end": 19344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 886,
											"end": 946,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 886,
											"end": 946,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 886,
											"end": 946,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 886,
											"end": 946,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 946,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 886,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 886,
											"end": 946,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 886,
											"end": 946,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 946,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 946,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 886,
											"end": 946,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 886,
											"end": 946,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 886,
											"end": 946,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 886,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 886,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 886,
											"end": 946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 886,
											"end": 946,
											"name": "tag",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 886,
											"end": 946,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 886,
											"end": 946,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 946,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 886,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 886,
											"end": 946,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 886,
											"end": 946,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 886,
											"end": 946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 886,
											"end": 946,
											"name": "tag",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 886,
											"end": 946,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 886,
											"end": 946,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 946,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 886,
											"end": 946,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 946,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 886,
											"end": 946,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 886,
											"end": 946,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 946,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 18450,
											"end": 18561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 18450,
											"end": 18561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "tag",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 8789,
											"end": 9042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 8789,
											"end": 9042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 2695,
											"end": 2727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 2695,
											"end": 2727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "tag",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 2588,
											"end": 2617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 2588,
											"end": 2617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 1113,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 1113,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "tag",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 18985,
											"end": 19099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 18985,
											"end": 19099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 17312,
											"end": 17565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 17312,
											"end": 17565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 17312,
											"end": 17565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 17740,
											"end": 18045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 17740,
											"end": 18045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 17740,
											"end": 18045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 8434,
											"end": 8598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 8434,
											"end": 8598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 7352,
											"end": 7514,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 7352,
											"end": 7514,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7352,
											"end": 7514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 7352,
											"end": 7514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 7352,
											"end": 7514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7352,
											"end": 7514,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 7352,
											"end": 7514,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7352,
											"end": 7514,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 11237,
											"end": 12055,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 11237,
											"end": 12055,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11324,
											"end": 11340,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 11356,
											"end": 11361,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11363,
											"end": 11369,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11343,
											"end": 11355,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 11343,
											"end": 11370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11324,
											"end": 11370,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11324,
											"end": 11370,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11399,
											"end": 11422,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11425,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 11425,
											"end": 11445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 11425,
											"end": 11447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11425,
											"end": 11447,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 11425,
											"end": 11447,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11399,
											"end": 11447,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11399,
											"end": 11447,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11517,
											"end": 11529,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1219"
										},
										{
											"begin": 11506,
											"end": 11514,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11488,
											"end": 11503,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11488,
											"end": 11514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 11488,
											"end": 11514,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11488,
											"end": 11514,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11488,
											"end": 11514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 11488,
											"end": 11514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11488,
											"end": 11514,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 11488,
											"end": 11514,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11488,
											"end": 11529,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11484,
											"end": 11682,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11484,
											"end": 11682,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 11484,
											"end": 11682,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11597,
											"end": 11605,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11640,
											"end": 11655,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11625,
											"end": 11637,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1219"
										},
										{
											"begin": 11625,
											"end": 11655,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 11625,
											"end": 11655,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11625,
											"end": 11655,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11625,
											"end": 11655,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 11625,
											"end": 11655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11625,
											"end": 11655,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 11625,
											"end": 11655,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11553,
											"end": 11670,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11553,
											"end": 11670,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11553,
											"end": 11670,
											"name": "PUSH",
											"source": 12,
											"value": "639847A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11553,
											"end": 11670,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11553,
											"end": 11670,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11553,
											"end": 11670,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11553,
											"end": 11670,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11553,
											"end": 11670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 11553,
											"end": 11670,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11553,
											"end": 11670,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11553,
											"end": 11670,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11553,
											"end": 11670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 11553,
											"end": 11670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11553,
											"end": 11670,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 11553,
											"end": 11670,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11553,
											"end": 11670,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11553,
											"end": 11670,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11553,
											"end": 11670,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11553,
											"end": 11670,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11553,
											"end": 11670,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11553,
											"end": 11670,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11553,
											"end": 11670,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11484,
											"end": 11682,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 11484,
											"end": 11682,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11744,
											"end": 11768,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11771,
											"end": 11802,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 11788,
											"end": 11793,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11795,
											"end": 11801,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11771,
											"end": 11787,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 11771,
											"end": 11802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11771,
											"end": 11802,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 11771,
											"end": 11802,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11744,
											"end": 11802,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11744,
											"end": 11802,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11859,
											"end": 11875,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11836,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 11826,
											"end": 11848,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11837,
											"end": 11847,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11848,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11826,
											"end": 11848,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11848,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11826,
											"end": 11848,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11848,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11848,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11848,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11826,
											"end": 11848,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11848,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11848,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11848,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11848,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11826,
											"end": 11848,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11848,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11826,
											"end": 11848,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11855,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11849,
											"end": 11854,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11855,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11826,
											"end": 11855,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11855,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11826,
											"end": 11855,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11855,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11855,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11855,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11826,
											"end": 11855,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11855,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11855,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11855,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11855,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11826,
											"end": 11855,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11855,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11826,
											"end": 11855,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11855,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11826,
											"end": 11875,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11875,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11875,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 11826,
											"end": 11875,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11875,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 11826,
											"end": 11875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11875,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 11826,
											"end": 11875,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11875,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11875,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11875,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11875,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11875,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11875,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11875,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11912,
											"end": 11928,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11901,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 11886,
											"end": 11908,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11902,
											"end": 11907,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11908,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11886,
											"end": 11908,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11908,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11886,
											"end": 11908,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11908,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11908,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11908,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11886,
											"end": 11908,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11908,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11908,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11908,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11908,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11886,
											"end": 11908,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11908,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11886,
											"end": 11908,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11908,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11886,
											"end": 11928,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11928,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11928,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11928,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 11886,
											"end": 11928,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11928,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11928,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 11886,
											"end": 11928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11928,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 11886,
											"end": 11928,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11928,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11928,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11928,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11928,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11939,
											"end": 11955,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11939,
											"end": 11955,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 11939,
											"end": 11955,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11939,
											"end": 11955,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11939,
											"end": 11955,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11939,
											"end": 11955,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11939,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 11939,
											"end": 11955,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11939,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 11939,
											"end": 11955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11939,
											"end": 11955,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 11939,
											"end": 11955,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11939,
											"end": 11955,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11939,
											"end": 11955,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11939,
											"end": 11955,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11939,
											"end": 11955,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 11939,
											"end": 11955,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12023,
											"end": 12028,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11999,
											"end": 12047,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11999,
											"end": 12047,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12011,
											"end": 12021,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 11999,
											"end": 12047,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11999,
											"end": 12047,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11999,
											"end": 12047,
											"name": "PUSH",
											"source": 12,
											"value": "57BAD7E3C9EFECF6E1F60BBD846B999E9DA4A409224287A8DF09779F2330135E"
										},
										{
											"begin": 12030,
											"end": 12036,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12038,
											"end": 12046,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 11999,
											"end": 12047,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11999,
											"end": 12047,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11999,
											"end": 12047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 11999,
											"end": 12047,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11999,
											"end": 12047,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11999,
											"end": 12047,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11999,
											"end": 12047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 11999,
											"end": 12047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11999,
											"end": 12047,
											"name": "tag",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 11999,
											"end": 12047,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11999,
											"end": 12047,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11999,
											"end": 12047,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11999,
											"end": 12047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11999,
											"end": 12047,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11999,
											"end": 12047,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11999,
											"end": 12047,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11999,
											"end": 12047,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 11294,
											"end": 12055,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11294,
											"end": 12055,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11294,
											"end": 12055,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11237,
											"end": 12055,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11237,
											"end": 12055,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11237,
											"end": 12055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2696,
											"name": "PUSH",
											"source": 1,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 2724,
											"end": 2735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 2700,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18246,
											"end": 18253,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18273,
											"end": 18324,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 18294,
											"end": 18299,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18301,
											"end": 18316,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 18301,
											"end": 18323,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18317,
											"end": 18322,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18301,
											"end": 18323,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18301,
											"end": 18323,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 18301,
											"end": 18323,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18301,
											"end": 18323,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 18301,
											"end": 18323,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18301,
											"end": 18323,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18301,
											"end": 18323,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18301,
											"end": 18323,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18301,
											"end": 18323,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18301,
											"end": 18323,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18301,
											"end": 18323,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18301,
											"end": 18323,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18301,
											"end": 18323,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18301,
											"end": 18323,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18301,
											"end": 18323,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 18301,
											"end": 18323,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 18273,
											"end": 18293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 18273,
											"end": 18324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18273,
											"end": 18324,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 18273,
											"end": 18324,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18266,
											"end": 18324,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18266,
											"end": 18324,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18736,
											"end": 18743,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18756,
											"end": 18776,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18779,
											"end": 18801,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 18779,
											"end": 18799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 18779,
											"end": 18801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18779,
											"end": 18801,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 18779,
											"end": 18801,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18756,
											"end": 18801,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18756,
											"end": 18801,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18835,
											"end": 18847,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1219"
										},
										{
											"begin": 18819,
											"end": 18831,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18819,
											"end": 18847,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 18819,
											"end": 18847,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18819,
											"end": 18881,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 18819,
											"end": 18881,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18869,
											"end": 18881,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18854,
											"end": 18866,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1219"
										},
										{
											"begin": 18854,
											"end": 18881,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 18854,
											"end": 18881,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18854,
											"end": 18881,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18854,
											"end": 18881,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 18854,
											"end": 18881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18854,
											"end": 18881,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 18854,
											"end": 18881,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18819,
											"end": 18881,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 18819,
											"end": 18881,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18819,
											"end": 18881,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 18819,
											"end": 18881,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18850,
											"end": 18851,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18819,
											"end": 18881,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 18819,
											"end": 18881,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18812,
											"end": 18881,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18812,
											"end": 18881,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18812,
											"end": 18881,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18889,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1219"
										},
										{
											"begin": 1341,
											"end": 1378,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 923,
											"end": 946,
											"name": "PUSH",
											"source": 12,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10015,
											"end": 10016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9975,
											"end": 10017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9975,
											"end": 10017,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9983,
											"end": 9995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9996,
											"end": 10001,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9983,
											"end": 10002,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9975,
											"end": 10017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9975,
											"end": 10017,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9975,
											"end": 10017,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9971,
											"end": 10087,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 9971,
											"end": 10087,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10069,
											"end": 10074,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10041,
											"end": 10075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10041,
											"end": 10075,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10041,
											"end": 10075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "F9968B3A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10041,
											"end": 10075,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10041,
											"end": 10075,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10041,
											"end": 10075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10041,
											"end": 10075,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10041,
											"end": 10075,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 10041,
											"end": 10075,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10041,
											"end": 10075,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10041,
											"end": 10075,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 10041,
											"end": 10075,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10041,
											"end": 10075,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 10041,
											"end": 10075,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10041,
											"end": 10075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10041,
											"end": 10075,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10041,
											"end": 10075,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10041,
											"end": 10075,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10041,
											"end": 10075,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10041,
											"end": 10075,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10041,
											"end": 10075,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9971,
											"end": 10087,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 9971,
											"end": 10087,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10126,
											"end": 10127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10101,
											"end": 10116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 10101,
											"end": 10123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10117,
											"end": 10122,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10101,
											"end": 10123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10101,
											"end": 10123,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10101,
											"end": 10123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10101,
											"end": 10123,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10101,
											"end": 10123,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10101,
											"end": 10123,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10101,
											"end": 10123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10101,
											"end": 10123,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10101,
											"end": 10123,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10101,
											"end": 10123,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10101,
											"end": 10123,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10101,
											"end": 10123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10101,
											"end": 10123,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10101,
											"end": 10123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10101,
											"end": 10123,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 10101,
											"end": 10123,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10101,
											"end": 10127,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10097,
											"end": 10219,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10097,
											"end": 10219,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 10097,
											"end": 10219,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10181,
											"end": 10182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 10184,
											"end": 10206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10200,
											"end": 10205,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10184,
											"end": 10206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10206,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10184,
											"end": 10206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10206,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10184,
											"end": 10206,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10184,
											"end": 10206,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10184,
											"end": 10206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10184,
											"end": 10206,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10184,
											"end": 10206,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10184,
											"end": 10206,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10184,
											"end": 10206,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10184,
											"end": 10206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10184,
											"end": 10206,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10184,
											"end": 10206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10206,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 10184,
											"end": 10206,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10151,
											"end": 10207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10151,
											"end": 10207,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10151,
											"end": 10207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "61965C4E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10151,
											"end": 10207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10151,
											"end": 10207,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10151,
											"end": 10207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10151,
											"end": 10207,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10151,
											"end": 10207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 10151,
											"end": 10207,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10151,
											"end": 10207,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10151,
											"end": 10207,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10151,
											"end": 10207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 10151,
											"end": 10207,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10151,
											"end": 10207,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 10151,
											"end": 10207,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10151,
											"end": 10207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10151,
											"end": 10207,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10151,
											"end": 10207,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10151,
											"end": 10207,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10151,
											"end": 10207,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10151,
											"end": 10207,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10151,
											"end": 10207,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10097,
											"end": 10219,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 10097,
											"end": 10219,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10238,
											"end": 10250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10238,
											"end": 10257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10251,
											"end": 10256,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10238,
											"end": 10257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10238,
											"end": 10257,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10238,
											"end": 10257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10238,
											"end": 10257,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10238,
											"end": 10257,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10238,
											"end": 10257,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10238,
											"end": 10257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10238,
											"end": 10257,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10238,
											"end": 10257,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10238,
											"end": 10257,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10238,
											"end": 10257,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10238,
											"end": 10257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10238,
											"end": 10257,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10238,
											"end": 10257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10238,
											"end": 10257,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 10238,
											"end": 10257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10231,
											"end": 10257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 10231,
											"end": 10257,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 10231,
											"end": 10257,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10231,
											"end": 10257,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10231,
											"end": 10257,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10231,
											"end": 10257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10231,
											"end": 10257,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 10231,
											"end": 10257,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 10231,
											"end": 10257,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10231,
											"end": 10257,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10231,
											"end": 10257,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 10275,
											"end": 10284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10270,
											"end": 10557,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 10270,
											"end": 10557,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10294,
											"end": 10311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 10294,
											"end": 10318,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10294,
											"end": 10318,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10294,
											"end": 10318,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10294,
											"end": 10318,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10290,
											"end": 10291,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10290,
											"end": 10318,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10270,
											"end": 10557,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10270,
											"end": 10557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 10270,
											"end": 10557,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10368,
											"end": 10373,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10344,
											"end": 10373,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 10362,
											"end": 10363,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 10344,
											"end": 10364,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10344,
											"end": 10364,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10344,
											"end": 10373,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10373,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10340,
											"end": 10546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 10340,
											"end": 10546,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 10462,
											"end": 10463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10435,
											"end": 10452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 10435,
											"end": 10459,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10435,
											"end": 10459,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10435,
											"end": 10459,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10435,
											"end": 10459,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10435,
											"end": 10463,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 10435,
											"end": 10463,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10435,
											"end": 10463,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10435,
											"end": 10463,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 10435,
											"end": 10463,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10435,
											"end": 10463,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 10435,
											"end": 10463,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 10417,
											"end": 10464,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10417,
											"end": 10464,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 10412,
											"end": 10413,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10414,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10414,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10414,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10414,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10414,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 10394,
											"end": 10414,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10414,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 10394,
											"end": 10414,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 10394,
											"end": 10414,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10414,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 10394,
											"end": 10414,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10414,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 10394,
											"end": 10414,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10414,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10394,
											"end": 10414,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10394,
											"end": 10414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10394,
											"end": 10414,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10414,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10394,
											"end": 10464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 10394,
											"end": 10464,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10464,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10464,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10464,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10394,
											"end": 10464,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10464,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10464,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10464,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10464,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10394,
											"end": 10464,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10464,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10464,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10464,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10464,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10464,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 10483,
											"end": 10506,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 10525,
											"end": 10530,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 10525,
											"end": 10530,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10340,
											"end": 10546,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 10340,
											"end": 10546,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10320,
											"end": 10323,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10320,
											"end": 10323,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10320,
											"end": 10323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10320,
											"end": 10323,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10320,
											"end": 10323,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10320,
											"end": 10323,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10320,
											"end": 10323,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10270,
											"end": 10557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 10270,
											"end": 10557,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10270,
											"end": 10557,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 10270,
											"end": 10557,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10270,
											"end": 10557,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10587,
											"end": 10592,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10574,
											"end": 10593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10574,
											"end": 10593,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10574,
											"end": 10593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4C910B69FE65A61F7531B9C5042B2329CA7179C77290AA7E2EB3AFA3C8511FD3"
										},
										{
											"begin": 10574,
											"end": 10593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10574,
											"end": 10593,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10574,
											"end": 10593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10574,
											"end": 10593,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10574,
											"end": 10593,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10574,
											"end": 10593,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10574,
											"end": 10593,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10574,
											"end": 10593,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10574,
											"end": 10593,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10601,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 4289,
											"end": 4293,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4276,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 4317,
											"end": 4321,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4330,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 4306,
											"end": 4331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7817,
											"end": 7818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7807,
											"end": 7813,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7807,
											"end": 7818,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7803,
											"end": 7849,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 7803,
											"end": 7849,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7827,
											"end": 7849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7827,
											"end": 7849,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7827,
											"end": 7849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3F36295200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7827,
											"end": 7849,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7827,
											"end": 7849,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7827,
											"end": 7849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7827,
											"end": 7849,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7827,
											"end": 7849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7827,
											"end": 7849,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7827,
											"end": 7849,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7827,
											"end": 7849,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7827,
											"end": 7849,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7827,
											"end": 7849,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7827,
											"end": 7849,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7803,
											"end": 7849,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 7803,
											"end": 7849,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1899,
											"end": 1900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7864,
											"end": 7883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7864,
											"end": 7883,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7864,
											"end": 7869,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7864,
											"end": 7883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7864,
											"end": 7883,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7864,
											"end": 7883,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7860,
											"end": 7926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 7860,
											"end": 7926,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7920,
											"end": 7925,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7892,
											"end": 7926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7892,
											"end": 7926,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7892,
											"end": 7926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "F9968B3A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7892,
											"end": 7926,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7892,
											"end": 7926,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7892,
											"end": 7926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7892,
											"end": 7926,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7892,
											"end": 7926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 7892,
											"end": 7926,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7892,
											"end": 7926,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7892,
											"end": 7926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 7892,
											"end": 7926,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7892,
											"end": 7926,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 7892,
											"end": 7926,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7892,
											"end": 7926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7892,
											"end": 7926,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7892,
											"end": 7926,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7892,
											"end": 7926,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7892,
											"end": 7926,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7892,
											"end": 7926,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7892,
											"end": 7926,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7860,
											"end": 7926,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 7860,
											"end": 7926,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7981,
											"end": 7982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7941,
											"end": 7983,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7949,
											"end": 7961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7962,
											"end": 7967,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7949,
											"end": 7968,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7941,
											"end": 7983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7941,
											"end": 7983,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7941,
											"end": 7983,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7937,
											"end": 8053,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 7937,
											"end": 8053,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8035,
											"end": 8040,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8007,
											"end": 8041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8007,
											"end": 8041,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8007,
											"end": 8041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "F9968B3A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8007,
											"end": 8041,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8007,
											"end": 8041,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8007,
											"end": 8041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8007,
											"end": 8041,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8007,
											"end": 8041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 8007,
											"end": 8041,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8007,
											"end": 8041,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8007,
											"end": 8041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 8007,
											"end": 8041,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8007,
											"end": 8041,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 8007,
											"end": 8041,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8007,
											"end": 8041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8007,
											"end": 8041,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8007,
											"end": 8041,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8007,
											"end": 8041,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8007,
											"end": 8041,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8007,
											"end": 8041,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8007,
											"end": 8041,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7937,
											"end": 8053,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 7937,
											"end": 8053,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8215,
											"end": 8280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 8246,
											"end": 8256,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 8266,
											"end": 8270,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 8273,
											"end": 8279,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8222,
											"end": 8227,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8215,
											"end": 8245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8215,
											"end": 8245,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8215,
											"end": 8245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 8215,
											"end": 8245,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8215,
											"end": 8280,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8215,
											"end": 8280,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8215,
											"end": 8280,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8215,
											"end": 8280,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8215,
											"end": 8280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8215,
											"end": 8280,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8215,
											"end": 8280,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8215,
											"end": 8280,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 8215,
											"end": 8280,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8291,
											"end": 8314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 8300,
											"end": 8305,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8307,
											"end": 8313,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8291,
											"end": 8299,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 8291,
											"end": 8314,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8291,
											"end": 8314,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 8291,
											"end": 8314,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 2542,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 2542,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 8322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 8322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 5419,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 5419,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 1,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 5517,
											"end": 5521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 5505,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19507,
											"end": 19514,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19542,
											"end": 19554,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19555,
											"end": 19560,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19542,
											"end": 19561,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19527,
											"end": 19562,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19527,
											"end": 19562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 923,
											"end": 946,
											"name": "PUSH",
											"source": 12,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 1900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9374,
											"end": 9393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9374,
											"end": 9393,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9374,
											"end": 9379,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9374,
											"end": 9393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9374,
											"end": 9393,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9374,
											"end": 9393,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9370,
											"end": 9436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 9370,
											"end": 9436,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9430,
											"end": 9435,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9402,
											"end": 9436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9402,
											"end": 9436,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9402,
											"end": 9436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "F9968B3A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9402,
											"end": 9436,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9402,
											"end": 9436,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9402,
											"end": 9436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9402,
											"end": 9436,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9402,
											"end": 9436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 9402,
											"end": 9436,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9402,
											"end": 9436,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9402,
											"end": 9436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 9402,
											"end": 9436,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9402,
											"end": 9436,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 9402,
											"end": 9436,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9402,
											"end": 9436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9402,
											"end": 9436,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9402,
											"end": 9436,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9402,
											"end": 9436,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9402,
											"end": 9436,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9402,
											"end": 9436,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9402,
											"end": 9436,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9370,
											"end": 9436,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 9370,
											"end": 9436,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9491,
											"end": 9492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9451,
											"end": 9493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9451,
											"end": 9493,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9472,
											"end": 9477,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9459,
											"end": 9478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9451,
											"end": 9493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9451,
											"end": 9493,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9451,
											"end": 9493,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 9447,
											"end": 9567,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 9447,
											"end": 9567,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9549,
											"end": 9554,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9517,
											"end": 9555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9517,
											"end": 9555,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9517,
											"end": 9555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "C2A2F47500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9517,
											"end": 9555,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9517,
											"end": 9555,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9517,
											"end": 9555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9517,
											"end": 9555,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9517,
											"end": 9555,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 9517,
											"end": 9555,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9517,
											"end": 9555,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9517,
											"end": 9555,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 9517,
											"end": 9555,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9517,
											"end": 9555,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 9517,
											"end": 9555,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9517,
											"end": 9555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9517,
											"end": 9555,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9517,
											"end": 9555,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9517,
											"end": 9555,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9517,
											"end": 9555,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9517,
											"end": 9555,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9517,
											"end": 9555,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9447,
											"end": 9567,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 9447,
											"end": 9567,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9623,
											"end": 9632,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9579,
											"end": 9598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9592,
											"end": 9597,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9579,
											"end": 9598,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9579,
											"end": 9598,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9598,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9598,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9579,
											"end": 9598,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9598,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9598,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9598,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9579,
											"end": 9598,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9579,
											"end": 9598,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9579,
											"end": 9633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 9579,
											"end": 9633,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9633,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9633,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9633,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9579,
											"end": 9633,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9633,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9633,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9633,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9579,
											"end": 9633,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9633,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9633,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9633,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9633,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 9667,
											"end": 9672,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9673,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9709,
											"end": 9718,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9691,
											"end": 9719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9691,
											"end": 9719,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9702,
											"end": 9707,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9691,
											"end": 9719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9691,
											"end": 9719,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9691,
											"end": 9719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "DFFBD9DED1C09446F09377DE547142DCCE7DC541C8B0B028142B1EBA7026B9E7"
										},
										{
											"begin": 9691,
											"end": 9719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9691,
											"end": 9719,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9691,
											"end": 9719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9691,
											"end": 9719,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9691,
											"end": 9719,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9691,
											"end": 9719,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9691,
											"end": 9719,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9691,
											"end": 9719,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9691,
											"end": 9719,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19270,
											"end": 19274,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19334,
											"end": 19335,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19294,
											"end": 19336,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19294,
											"end": 19336,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19302,
											"end": 19314,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19315,
											"end": 19320,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19302,
											"end": 19321,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19294,
											"end": 19336,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19294,
											"end": 19336,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19294,
											"end": 19336,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 19294,
											"end": 19336,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19287,
											"end": 19336,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19287,
											"end": 19336,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 886,
											"end": 946,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 886,
											"end": 946,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 923,
											"end": 946,
											"name": "PUSH",
											"source": 12,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 886,
											"end": 946,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 886,
											"end": 946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "tag",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18504,
											"end": 18511,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18531,
											"end": 18553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 18531,
											"end": 18551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 18531,
											"end": 18553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18531,
											"end": 18553,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 18531,
											"end": 18553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18524,
											"end": 18553,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18524,
											"end": 18553,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18450,
											"end": 18561,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18450,
											"end": 18561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2941,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2958,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8890,
											"end": 8891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8880,
											"end": 8886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8880,
											"end": 8891,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8876,
											"end": 8922,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 8876,
											"end": 8922,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8900,
											"end": 8922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8900,
											"end": 8922,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8900,
											"end": 8922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3F36295200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8900,
											"end": 8922,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8900,
											"end": 8922,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8900,
											"end": 8922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8900,
											"end": 8922,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8900,
											"end": 8922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8900,
											"end": 8922,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8900,
											"end": 8922,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8900,
											"end": 8922,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8900,
											"end": 8922,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8900,
											"end": 8922,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8900,
											"end": 8922,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8876,
											"end": 8922,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 8876,
											"end": 8922,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1899,
											"end": 1900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8937,
											"end": 8956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8937,
											"end": 8956,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8937,
											"end": 8942,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8937,
											"end": 8956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8937,
											"end": 8956,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8937,
											"end": 8956,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8933,
											"end": 8999,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 8933,
											"end": 8999,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8993,
											"end": 8998,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8965,
											"end": 8999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8965,
											"end": 8999,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8965,
											"end": 8999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "F9968B3A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8965,
											"end": 8999,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8965,
											"end": 8999,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8965,
											"end": 8999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8965,
											"end": 8999,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8965,
											"end": 8999,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 8965,
											"end": 8999,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8965,
											"end": 8999,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8965,
											"end": 8999,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 8965,
											"end": 8999,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8965,
											"end": 8999,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 8965,
											"end": 8999,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8965,
											"end": 8999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8965,
											"end": 8999,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8965,
											"end": 8999,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8965,
											"end": 8999,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8965,
											"end": 8999,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8965,
											"end": 8999,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8965,
											"end": 8999,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8933,
											"end": 8999,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 8933,
											"end": 8999,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9010,
											"end": 9034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 9020,
											"end": 9025,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9027,
											"end": 9033,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9010,
											"end": 9019,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 9010,
											"end": 9034,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9010,
											"end": 9034,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 9010,
											"end": 9034,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 2542,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 2542,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 9042,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 9042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2727,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1216"
										},
										{
											"begin": 1113,
											"end": 1162,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "tag",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19038,
											"end": 19054,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 19074,
											"end": 19091,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19091,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19099,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17384,
											"end": 17391,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17404,
											"end": 17429,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17432,
											"end": 17442,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 17432,
											"end": 17448,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17443,
											"end": 17447,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17432,
											"end": 17448,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17432,
											"end": 17448,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 17432,
											"end": 17448,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17432,
											"end": 17448,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 17432,
											"end": 17448,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17432,
											"end": 17448,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17432,
											"end": 17448,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17432,
											"end": 17448,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17432,
											"end": 17448,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17432,
											"end": 17448,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17432,
											"end": 17448,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17432,
											"end": 17448,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17432,
											"end": 17448,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17432,
											"end": 17448,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17432,
											"end": 17448,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 17432,
											"end": 17455,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17449,
											"end": 17454,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17432,
											"end": 17455,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17432,
											"end": 17455,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 17432,
											"end": 17455,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17432,
											"end": 17455,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 17432,
											"end": 17455,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17432,
											"end": 17455,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17432,
											"end": 17455,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17432,
											"end": 17455,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17432,
											"end": 17455,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17432,
											"end": 17455,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17432,
											"end": 17455,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17432,
											"end": 17455,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17432,
											"end": 17455,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17432,
											"end": 17455,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17432,
											"end": 17455,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 17432,
											"end": 17455,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 17404,
											"end": 17455,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17404,
											"end": 17455,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17493,
											"end": 17539,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 17514,
											"end": 17519,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17521,
											"end": 17538,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17493,
											"end": 17513,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 17493,
											"end": 17539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17493,
											"end": 17539,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 17493,
											"end": 17539,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17486,
											"end": 17539,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17486,
											"end": 17539,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17486,
											"end": 17539,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17312,
											"end": 17565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 4706,
											"end": 4710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4693,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4735,
											"end": 4739,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4748,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 4723,
											"end": 4749,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17815,
											"end": 17822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17835,
											"end": 17860,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17873,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 17863,
											"end": 17879,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17874,
											"end": 17878,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17879,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17863,
											"end": 17879,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17879,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17863,
											"end": 17879,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17879,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17879,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17879,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17863,
											"end": 17879,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17879,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17879,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17879,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17879,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17863,
											"end": 17879,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17879,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17863,
											"end": 17879,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17886,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17880,
											"end": 17885,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17886,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17863,
											"end": 17886,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17886,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17863,
											"end": 17886,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17886,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17886,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17886,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17863,
											"end": 17886,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17886,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17886,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17886,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17886,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17863,
											"end": 17886,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17886,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17863,
											"end": 17886,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17886,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 17835,
											"end": 17886,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17835,
											"end": 17886,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17917,
											"end": 17937,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17940,
											"end": 17986,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 17961,
											"end": 17966,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17968,
											"end": 17985,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17940,
											"end": 17960,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 17940,
											"end": 17986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17940,
											"end": 17986,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 17940,
											"end": 17986,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17917,
											"end": 17986,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17917,
											"end": 17986,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18004,
											"end": 18037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 18017,
											"end": 18022,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18024,
											"end": 18036,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18004,
											"end": 18016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 18004,
											"end": 18037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18004,
											"end": 18037,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 18004,
											"end": 18037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17997,
											"end": 18037,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17997,
											"end": 18037,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17997,
											"end": 18037,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17997,
											"end": 18037,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17740,
											"end": 18045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8518,
											"end": 8519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8508,
											"end": 8514,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8508,
											"end": 8519,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 8550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 8504,
											"end": 8550,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8528,
											"end": 8550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8528,
											"end": 8550,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8528,
											"end": 8550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3F36295200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8528,
											"end": 8550,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8528,
											"end": 8550,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8528,
											"end": 8550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8528,
											"end": 8550,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8528,
											"end": 8550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8528,
											"end": 8550,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8528,
											"end": 8550,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8528,
											"end": 8550,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8528,
											"end": 8550,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8528,
											"end": 8550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8528,
											"end": 8550,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 8550,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 8504,
											"end": 8550,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8561,
											"end": 8590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 1899,
											"end": 1900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8583,
											"end": 8589,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8561,
											"end": 8570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 8561,
											"end": 8590,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8561,
											"end": 8590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 8561,
											"end": 8590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 2542,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 2542,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8434,
											"end": 8598,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7352,
											"end": 7514,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 7352,
											"end": 7514,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7432,
											"end": 7433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7419,
											"end": 7428,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 7419,
											"end": 7433,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7415,
											"end": 7464,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 7415,
											"end": 7464,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7442,
											"end": 7464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7442,
											"end": 7464,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7442,
											"end": 7464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3F36295200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7442,
											"end": 7464,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7442,
											"end": 7464,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7442,
											"end": 7464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7442,
											"end": 7464,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7442,
											"end": 7464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7442,
											"end": 7464,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7442,
											"end": 7464,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7442,
											"end": 7464,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7442,
											"end": 7464,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7442,
											"end": 7464,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7442,
											"end": 7464,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7415,
											"end": 7464,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 7415,
											"end": 7464,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7475,
											"end": 7506,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 1899,
											"end": 1900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7496,
											"end": 7505,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 7475,
											"end": 7483,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 7475,
											"end": 7506,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7475,
											"end": 7506,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 7475,
											"end": 7506,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 2542,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 2542,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7352,
											"end": 7514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13883,
											"end": 14613,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 13883,
											"end": 14613,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13958,
											"end": 13965,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13978,
											"end": 14009,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14012,
											"end": 14024,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14025,
											"end": 14030,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14012,
											"end": 14031,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13978,
											"end": 14031,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13978,
											"end": 14031,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14057,
											"end": 14069,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14079,
											"end": 14088,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14104,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14079,
											"end": 14104,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14104,
											"name": "PUSH",
											"source": 12,
											"value": "FEAF968C"
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 14079,
											"end": 14106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 14079,
											"end": 14106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14054,
											"end": 14106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14054,
											"end": 14106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14054,
											"end": 14106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14054,
											"end": 14106,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14054,
											"end": 14106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14054,
											"end": 14106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14130,
											"end": 14131,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14121,
											"end": 14126,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14121,
											"end": 14131,
											"name": "SGT",
											"source": 12
										},
										{
											"begin": 14117,
											"end": 14168,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 14117,
											"end": 14168,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14140,
											"end": 14168,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14140,
											"end": 14168,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14140,
											"end": 14168,
											"name": "PUSH",
											"source": 12,
											"value": "804B984B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14140,
											"end": 14168,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14140,
											"end": 14168,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14140,
											"end": 14168,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 14140,
											"end": 14168,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14140,
											"end": 14168,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14140,
											"end": 14168,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14140,
											"end": 14168,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14140,
											"end": 14168,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14140,
											"end": 14168,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14140,
											"end": 14168,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14140,
											"end": 14168,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14117,
											"end": 14168,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 14117,
											"end": 14168,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14241,
											"end": 14260,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14263,
											"end": 14282,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14263,
											"end": 14282,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14263,
											"end": 14268,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 14263,
											"end": 14282,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14263,
											"end": 14282,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14263,
											"end": 14282,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 14263,
											"end": 14322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 14263,
											"end": 14322,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14305,
											"end": 14310,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14320,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14290,
											"end": 14320,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14320,
											"name": "PUSH",
											"source": 12,
											"value": "313CE567"
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 14290,
											"end": 14322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 14290,
											"end": 14322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14263,
											"end": 14322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 14263,
											"end": 14322,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14263,
											"end": 14322,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 14263,
											"end": 14322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14285,
											"end": 14287,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 14263,
											"end": 14322,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 14263,
											"end": 14322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14241,
											"end": 14322,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14241,
											"end": 14322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14333,
											"end": 14356,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14359,
											"end": 14368,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14377,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14359,
											"end": 14377,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14377,
											"name": "PUSH",
											"source": 12,
											"value": "313CE567"
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 14359,
											"end": 14379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 14359,
											"end": 14379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14333,
											"end": 14379,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14333,
											"end": 14379,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14587,
											"end": 14604,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14583,
											"end": 14585,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 14583,
											"end": 14604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 14583,
											"end": 14604,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14583,
											"end": 14604,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14583,
											"end": 14604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 14583,
											"end": 14604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14583,
											"end": 14604,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 14583,
											"end": 14604,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14567,
											"end": 14580,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14563,
											"end": 14565,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 14563,
											"end": 14580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 14563,
											"end": 14580,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14563,
											"end": 14580,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14563,
											"end": 14580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 14563,
											"end": 14580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14563,
											"end": 14580,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 14563,
											"end": 14580,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14563,
											"end": 14604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 14563,
											"end": 14604,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14563,
											"end": 14604,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14563,
											"end": 14604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 14563,
											"end": 14604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14563,
											"end": 14604,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 14563,
											"end": 14604,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1748,
											"end": 1750,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 14525,
											"end": 14527,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 14525,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 14525,
											"end": 14541,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14525,
											"end": 14541,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14525,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 14525,
											"end": 14541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14525,
											"end": 14541,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 14525,
											"end": 14541,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14516,
											"end": 14521,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14499,
											"end": 14505,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 14499,
											"end": 14522,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 14499,
											"end": 14522,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14499,
											"end": 14522,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14499,
											"end": 14522,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 14499,
											"end": 14522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14499,
											"end": 14522,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 14499,
											"end": 14522,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14499,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 14499,
											"end": 14541,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14499,
											"end": 14541,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14499,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 14499,
											"end": 14541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14499,
											"end": 14541,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 14499,
											"end": 14541,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14498,
											"end": 14605,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 14498,
											"end": 14605,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14498,
											"end": 14605,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14498,
											"end": 14605,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 14498,
											"end": 14605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14498,
											"end": 14605,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 14498,
											"end": 14605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14491,
											"end": 14605,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 14491,
											"end": 14605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14491,
											"end": 14605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14491,
											"end": 14605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14491,
											"end": 14605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14491,
											"end": 14605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13883,
											"end": 14613,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13883,
											"end": 14613,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13883,
											"end": 14613,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13883,
											"end": 14613,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13883,
											"end": 14613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15437,
											"end": 16132,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 15437,
											"end": 16132,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15491,
											"end": 15498,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15511,
											"end": 15527,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15530,
											"end": 15531,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15511,
											"end": 15531,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15511,
											"end": 15531,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15557,
											"end": 15566,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15552,
											"end": 16089,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 15552,
											"end": 16089,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15576,
											"end": 15593,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 15576,
											"end": 15600,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15576,
											"end": 15600,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 15576,
											"end": 15600,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15576,
											"end": 15600,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15572,
											"end": 15573,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15572,
											"end": 15600,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 15552,
											"end": 16089,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15552,
											"end": 16089,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 15552,
											"end": 16089,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15622,
											"end": 15635,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15638,
											"end": 15655,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 15656,
											"end": 15657,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 15638,
											"end": 15658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15638,
											"end": 15658,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15622,
											"end": 15658,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15622,
											"end": 15658,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15673,
											"end": 15697,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15700,
											"end": 15715,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 15700,
											"end": 15722,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15716,
											"end": 15721,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15700,
											"end": 15722,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15700,
											"end": 15722,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15700,
											"end": 15722,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15700,
											"end": 15722,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15700,
											"end": 15722,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15700,
											"end": 15722,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15700,
											"end": 15722,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15700,
											"end": 15722,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15700,
											"end": 15722,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15700,
											"end": 15722,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15700,
											"end": 15722,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15700,
											"end": 15722,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15700,
											"end": 15722,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15700,
											"end": 15722,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15700,
											"end": 15722,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 15700,
											"end": 15722,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 15673,
											"end": 15722,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15673,
											"end": 15722,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15785,
											"end": 15786,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15766,
											"end": 15782,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15766,
											"end": 15786,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15762,
											"end": 16078,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15762,
											"end": 16078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 15762,
											"end": 16078,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15874,
											"end": 15894,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15897,
											"end": 15942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 15918,
											"end": 15923,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15925,
											"end": 15941,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15897,
											"end": 15917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 15897,
											"end": 15942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15897,
											"end": 15942,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 15897,
											"end": 15942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15874,
											"end": 15942,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15874,
											"end": 15942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16029,
											"end": 16062,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 16042,
											"end": 16047,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16049,
											"end": 16061,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16029,
											"end": 16041,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 16029,
											"end": 16062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16029,
											"end": 16062,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 16029,
											"end": 16062,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16017,
											"end": 16062,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16017,
											"end": 16062,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 16017,
											"end": 16062,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16017,
											"end": 16062,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16017,
											"end": 16062,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 16017,
											"end": 16062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16017,
											"end": 16062,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 16017,
											"end": 16062,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16017,
											"end": 16062,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 16017,
											"end": 16062,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15788,
											"end": 16078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15762,
											"end": 16078,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 15762,
											"end": 16078,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15607,
											"end": 16089,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15607,
											"end": 16089,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15602,
											"end": 15605,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15602,
											"end": 15605,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15602,
											"end": 15605,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 15602,
											"end": 15605,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15602,
											"end": 15605,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15602,
											"end": 15605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15602,
											"end": 15605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15552,
											"end": 16089,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 15552,
											"end": 16089,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15552,
											"end": 16089,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 15552,
											"end": 16089,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15552,
											"end": 16089,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16116,
											"end": 16124,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16109,
											"end": 16124,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16109,
											"end": 16124,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16109,
											"end": 16124,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15437,
											"end": 16132,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15437,
											"end": 16132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14864,
											"end": 15332,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 14864,
											"end": 15332,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14943,
											"end": 14950,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14963,
											"end": 14982,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14985,
											"end": 15004,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14985,
											"end": 15004,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14985,
											"end": 14990,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14985,
											"end": 15004,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14985,
											"end": 15004,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14985,
											"end": 15004,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 14985,
											"end": 15044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 14985,
											"end": 15044,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15027,
											"end": 15032,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15042,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15012,
											"end": 15042,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15042,
											"name": "PUSH",
											"source": 12,
											"value": "313CE567"
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 15012,
											"end": 15044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 15012,
											"end": 15044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14985,
											"end": 15044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 14985,
											"end": 15044,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14985,
											"end": 15044,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 14985,
											"end": 15044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15007,
											"end": 15009,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 14985,
											"end": 15044,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 14985,
											"end": 15044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14963,
											"end": 15044,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14963,
											"end": 15044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1597,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 15069,
											"end": 15098,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 15069,
											"end": 15098,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15069,
											"end": 15082,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15069,
											"end": 15098,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 15069,
											"end": 15098,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15069,
											"end": 15098,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15065,
											"end": 15301,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15065,
											"end": 15301,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 15065,
											"end": 15301,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1597,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 15137,
											"end": 15150,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15137,
											"end": 15166,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 15137,
											"end": 15166,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15137,
											"end": 15166,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15137,
											"end": 15166,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 15137,
											"end": 15166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15137,
											"end": 15166,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 15137,
											"end": 15166,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15132,
											"end": 15134,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 15132,
											"end": 15167,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 15132,
											"end": 15167,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15132,
											"end": 15167,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15132,
											"end": 15167,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 15132,
											"end": 15167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15132,
											"end": 15167,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 15132,
											"end": 15167,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15122,
											"end": 15128,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15122,
											"end": 15168,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 15122,
											"end": 15168,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15122,
											"end": 15168,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15122,
											"end": 15168,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 15122,
											"end": 15168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15122,
											"end": 15168,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 15122,
											"end": 15168,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15115,
											"end": 15168,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15115,
											"end": 15168,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15115,
											"end": 15168,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15115,
											"end": 15168,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 15115,
											"end": 15168,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15065,
											"end": 15301,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 15065,
											"end": 15301,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1597,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 15190,
											"end": 15219,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 15190,
											"end": 15219,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15190,
											"end": 15203,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15190,
											"end": 15219,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 15190,
											"end": 15219,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15190,
											"end": 15219,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 15186,
											"end": 15301,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15186,
											"end": 15301,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 15186,
											"end": 15301,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15274,
											"end": 15287,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1597,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 15258,
											"end": 15287,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 15258,
											"end": 15287,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15258,
											"end": 15287,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15258,
											"end": 15287,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 15258,
											"end": 15287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15258,
											"end": 15287,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 15258,
											"end": 15287,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15253,
											"end": 15255,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 15253,
											"end": 15288,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 15253,
											"end": 15288,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15253,
											"end": 15288,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15253,
											"end": 15288,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 15253,
											"end": 15288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15253,
											"end": 15288,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 15253,
											"end": 15288,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15243,
											"end": 15249,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15243,
											"end": 15289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 15243,
											"end": 15289,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15243,
											"end": 15289,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15243,
											"end": 15289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 15243,
											"end": 15289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15243,
											"end": 15289,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 15243,
											"end": 15289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15236,
											"end": 15289,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15236,
											"end": 15289,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15236,
											"end": 15289,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15236,
											"end": 15289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 15236,
											"end": 15289,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15186,
											"end": 15301,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 15186,
											"end": 15301,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15318,
											"end": 15324,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15311,
											"end": 15324,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15311,
											"end": 15324,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15311,
											"end": 15324,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14864,
											"end": 15332,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 14864,
											"end": 15332,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14864,
											"end": 15332,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14864,
											"end": 15332,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14864,
											"end": 15332,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14864,
											"end": 15332,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14864,
											"end": 15332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 730,
											"end": 876,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 730,
											"end": 876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 806,
											"end": 810,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 829,
											"end": 840,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 829,
											"end": 869,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 822,
											"end": 869,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 822,
											"end": 869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16381,
											"end": 16929,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 16381,
											"end": 16929,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16504,
											"end": 16511,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16530,
											"end": 16549,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16552,
											"end": 16571,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16552,
											"end": 16571,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16552,
											"end": 16557,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16552,
											"end": 16571,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16552,
											"end": 16571,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16552,
											"end": 16571,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 16552,
											"end": 16611,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 16552,
											"end": 16611,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16594,
											"end": 16599,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16609,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16579,
											"end": 16609,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16609,
											"name": "PUSH",
											"source": 12,
											"value": "313CE567"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 16579,
											"end": 16611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16552,
											"end": 16611,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 16552,
											"end": 16611,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16552,
											"end": 16611,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 16552,
											"end": 16611,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16574,
											"end": 16576,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 16552,
											"end": 16611,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 16552,
											"end": 16611,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16530,
											"end": 16611,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16530,
											"end": 16611,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1597,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 16636,
											"end": 16665,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 16636,
											"end": 16665,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16636,
											"end": 16649,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16636,
											"end": 16665,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 16636,
											"end": 16665,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16636,
											"end": 16665,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 16632,
											"end": 16888,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16632,
											"end": 16888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 16632,
											"end": 16888,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1597,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 16714,
											"end": 16727,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16714,
											"end": 16743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 16714,
											"end": 16743,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16714,
											"end": 16743,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16714,
											"end": 16743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 16714,
											"end": 16743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16714,
											"end": 16743,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 16714,
											"end": 16743,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16709,
											"end": 16711,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 16709,
											"end": 16744,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 16709,
											"end": 16744,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16709,
											"end": 16744,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16709,
											"end": 16744,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 16709,
											"end": 16744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16709,
											"end": 16744,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 16709,
											"end": 16744,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16689,
											"end": 16705,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16689,
											"end": 16745,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 16689,
											"end": 16745,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16689,
											"end": 16745,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16689,
											"end": 16745,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 16689,
											"end": 16745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16689,
											"end": 16745,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 16689,
											"end": 16745,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16682,
											"end": 16745,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16682,
											"end": 16745,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16682,
											"end": 16745,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16682,
											"end": 16745,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 16682,
											"end": 16745,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16632,
											"end": 16888,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 16632,
											"end": 16888,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1597,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 16767,
											"end": 16796,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 16767,
											"end": 16796,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16767,
											"end": 16780,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16767,
											"end": 16796,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 16767,
											"end": 16796,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16767,
											"end": 16796,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 16763,
											"end": 16888,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16763,
											"end": 16888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 16763,
											"end": 16888,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16861,
											"end": 16874,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1597,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 16845,
											"end": 16874,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 16845,
											"end": 16874,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16845,
											"end": 16874,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16845,
											"end": 16874,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 16845,
											"end": 16874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16845,
											"end": 16874,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 16845,
											"end": 16874,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16840,
											"end": 16842,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 16840,
											"end": 16875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 16840,
											"end": 16875,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16840,
											"end": 16875,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16840,
											"end": 16875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 16840,
											"end": 16875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16840,
											"end": 16875,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 16840,
											"end": 16875,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16820,
											"end": 16836,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16820,
											"end": 16876,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 16820,
											"end": 16876,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16820,
											"end": 16876,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16820,
											"end": 16876,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 16820,
											"end": 16876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16820,
											"end": 16876,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 16820,
											"end": 16876,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16813,
											"end": 16876,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16813,
											"end": 16876,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16813,
											"end": 16876,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16813,
											"end": 16876,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 16813,
											"end": 16876,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16763,
											"end": 16888,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 16763,
											"end": 16888,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16905,
											"end": 16921,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16898,
											"end": 16921,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16898,
											"end": 16921,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16898,
											"end": 16921,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16381,
											"end": 16929,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 16381,
											"end": 16929,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16381,
											"end": 16929,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16381,
											"end": 16929,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16381,
											"end": 16929,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16381,
											"end": 16929,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16381,
											"end": 16929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 3252,
											"end": 3256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 3258,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 3241,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 6261,
											"end": 6265,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6267,
											"end": 6274,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6253,
											"end": 6275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6323,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6319,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 6373,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 6373,
											"end": 6385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6364,
											"end": 6371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6358,
											"end": 6362,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6407,
											"end": 6411,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 9,
											"value": "3EE5AEB500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2858,
											"end": 2865,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3075,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2888,
											"end": 3096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 6814,
											"end": 6818,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6820,
											"end": 6827,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6806,
											"end": 6828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6876,
											"end": 6881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6855,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6872,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 6927,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 6927,
											"end": 6939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 6925,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6912,
											"end": 6916,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 1,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6965,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7003,
											"end": 7008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 7025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12256,
											"end": 13419,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 12256,
											"end": 13419,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12344,
											"end": 12368,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12371,
											"end": 12402,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 12388,
											"end": 12393,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12395,
											"end": 12401,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12371,
											"end": 12387,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 12371,
											"end": 12402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12371,
											"end": 12402,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 12371,
											"end": 12402,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12344,
											"end": 12402,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12344,
											"end": 12402,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12413,
											"end": 12432,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12435,
											"end": 12445,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 12435,
											"end": 12457,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12446,
											"end": 12456,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 12435,
											"end": 12457,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12435,
											"end": 12457,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12435,
											"end": 12457,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12435,
											"end": 12457,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12435,
											"end": 12457,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12435,
											"end": 12457,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12435,
											"end": 12457,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12435,
											"end": 12457,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12435,
											"end": 12457,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12435,
											"end": 12457,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12435,
											"end": 12457,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12435,
											"end": 12457,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12435,
											"end": 12457,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12435,
											"end": 12457,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12435,
											"end": 12457,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 12435,
											"end": 12464,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12435,
											"end": 12464,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12435,
											"end": 12464,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12435,
											"end": 12464,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12435,
											"end": 12464,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12435,
											"end": 12464,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12435,
											"end": 12464,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12435,
											"end": 12464,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12435,
											"end": 12464,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12435,
											"end": 12464,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12435,
											"end": 12464,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12435,
											"end": 12464,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12435,
											"end": 12464,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12435,
											"end": 12464,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12435,
											"end": 12464,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12435,
											"end": 12464,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 12435,
											"end": 12464,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 12413,
											"end": 12464,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12413,
											"end": 12464,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12508,
											"end": 12519,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12489,
											"end": 12505,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12489,
											"end": 12519,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12485,
											"end": 12615,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12485,
											"end": 12615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 12485,
											"end": 12615,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12573,
											"end": 12589,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12591,
											"end": 12602,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12543,
											"end": 12603,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12543,
											"end": 12603,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12543,
											"end": 12603,
											"name": "PUSH",
											"source": 12,
											"value": "61965C4E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12543,
											"end": 12603,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12543,
											"end": 12603,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12543,
											"end": 12603,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12543,
											"end": 12603,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12543,
											"end": 12603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 12543,
											"end": 12603,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12543,
											"end": 12603,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12543,
											"end": 12603,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12543,
											"end": 12603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 12543,
											"end": 12603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12543,
											"end": 12603,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 12543,
											"end": 12603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12543,
											"end": 12603,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12543,
											"end": 12603,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12543,
											"end": 12603,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12543,
											"end": 12603,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12543,
											"end": 12603,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12543,
											"end": 12603,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12543,
											"end": 12603,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12485,
											"end": 12615,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 12485,
											"end": 12615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12627,
											"end": 12643,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12646,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 12659,
											"end": 12664,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12666,
											"end": 12672,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 12646,
											"end": 12673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12646,
											"end": 12673,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 12646,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12627,
											"end": 12673,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12627,
											"end": 12673,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12710,
											"end": 12734,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1216"
										},
										{
											"begin": 12699,
											"end": 12707,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12699,
											"end": 12734,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12695,
											"end": 12892,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12695,
											"end": 12892,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 12695,
											"end": 12892,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12814,
											"end": 12822,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12841,
											"end": 12865,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1216"
										},
										{
											"begin": 12758,
											"end": 12880,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12758,
											"end": 12880,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12758,
											"end": 12880,
											"name": "PUSH",
											"source": 12,
											"value": "2D05FCBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12758,
											"end": 12880,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12758,
											"end": 12880,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12758,
											"end": 12880,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12758,
											"end": 12880,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12758,
											"end": 12880,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 12758,
											"end": 12880,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12758,
											"end": 12880,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12758,
											"end": 12880,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12758,
											"end": 12880,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 12758,
											"end": 12880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12758,
											"end": 12880,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 12758,
											"end": 12880,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12758,
											"end": 12880,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12758,
											"end": 12880,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12758,
											"end": 12880,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12758,
											"end": 12880,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12758,
											"end": 12880,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12758,
											"end": 12880,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12758,
											"end": 12880,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12695,
											"end": 12892,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 12695,
											"end": 12892,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12957,
											"end": 12973,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12934,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 12924,
											"end": 12946,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12935,
											"end": 12945,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12946,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12924,
											"end": 12946,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12946,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12924,
											"end": 12946,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12946,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12946,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12946,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12924,
											"end": 12946,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12946,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12946,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12946,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12946,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12924,
											"end": 12946,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12946,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12924,
											"end": 12946,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12953,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12947,
											"end": 12952,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12953,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12924,
											"end": 12953,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12953,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12924,
											"end": 12953,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12953,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12953,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12953,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12924,
											"end": 12953,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12953,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12953,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12953,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12953,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12924,
											"end": 12953,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12953,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12924,
											"end": 12953,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12953,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12924,
											"end": 12973,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12973,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12973,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12973,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 12924,
											"end": 12973,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12973,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12973,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 12924,
											"end": 12973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12973,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 12924,
											"end": 12973,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12973,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12973,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12973,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12973,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12973,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12973,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12973,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13010,
											"end": 13026,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 12999,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 12984,
											"end": 13006,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13000,
											"end": 13005,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13006,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12984,
											"end": 13006,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13006,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12984,
											"end": 13006,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13006,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13006,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13006,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12984,
											"end": 13006,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13006,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13006,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13006,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13006,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12984,
											"end": 13006,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13006,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12984,
											"end": 13006,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13006,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12984,
											"end": 13026,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13026,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13026,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 12984,
											"end": 13026,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13026,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 12984,
											"end": 13026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13026,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 12984,
											"end": 13026,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13026,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13026,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13026,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13026,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13026,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13026,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13026,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13037,
											"end": 13054,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 13037,
											"end": 13054,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13037,
											"end": 13056,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13037,
											"end": 13056,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 13037,
											"end": 13056,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13037,
											"end": 13056,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13037,
											"end": 13056,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13037,
											"end": 13056,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13037,
											"end": 13056,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 13037,
											"end": 13056,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13037,
											"end": 13056,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 13037,
											"end": 13056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13037,
											"end": 13056,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 13037,
											"end": 13056,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13037,
											"end": 13056,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13037,
											"end": 13056,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13037,
											"end": 13056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13037,
											"end": 13056,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 13037,
											"end": 13056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13098,
											"end": 13117,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13098,
											"end": 13117,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13098,
											"end": 13103,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13098,
											"end": 13117,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13098,
											"end": 13117,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13098,
											"end": 13117,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13094,
											"end": 13343,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 13094,
											"end": 13343,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13135,
											"end": 13147,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13153,
											"end": 13163,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13168,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13153,
											"end": 13168,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13176,
											"end": 13182,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 13153,
											"end": 13187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13153,
											"end": 13187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13134,
											"end": 13187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13134,
											"end": 13187,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13134,
											"end": 13187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13207,
											"end": 13214,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13202,
											"end": 13252,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 13202,
											"end": 13252,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13223,
											"end": 13252,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13223,
											"end": 13252,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13223,
											"end": 13252,
											"name": "PUSH",
											"source": 12,
											"value": "E35D8600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13223,
											"end": 13252,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13223,
											"end": 13252,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13223,
											"end": 13252,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13223,
											"end": 13252,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13223,
											"end": 13252,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13223,
											"end": 13252,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13223,
											"end": 13252,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13223,
											"end": 13252,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13223,
											"end": 13252,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13223,
											"end": 13252,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13223,
											"end": 13252,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 13202,
											"end": 13252,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 13202,
											"end": 13252,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13119,
											"end": 13264,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13094,
											"end": 13343,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 13094,
											"end": 13343,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13094,
											"end": 13343,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 13094,
											"end": 13343,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13285,
											"end": 13331,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 13312,
											"end": 13322,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 13324,
											"end": 13330,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13292,
											"end": 13297,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 13285,
											"end": 13311,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13285,
											"end": 13311,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13285,
											"end": 13311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 13285,
											"end": 13311,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13285,
											"end": 13331,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13285,
											"end": 13331,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13285,
											"end": 13331,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13285,
											"end": 13331,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13285,
											"end": 13331,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13285,
											"end": 13331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13285,
											"end": 13331,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 13285,
											"end": 13331,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13094,
											"end": 13343,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 13094,
											"end": 13343,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13387,
											"end": 13392,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13360,
											"end": 13411,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13360,
											"end": 13411,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13375,
											"end": 13385,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 13360,
											"end": 13411,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13360,
											"end": 13411,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13360,
											"end": 13411,
											"name": "PUSH",
											"source": 12,
											"value": "DE1D532173C6DE1E3937C7AF1CB92745C738980729F53AC451A725F929F3B798"
										},
										{
											"begin": 13394,
											"end": 13400,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13402,
											"end": 13410,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13360,
											"end": 13411,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13360,
											"end": 13411,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13360,
											"end": 13411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 13360,
											"end": 13411,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13360,
											"end": 13411,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13360,
											"end": 13411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13360,
											"end": 13411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 13360,
											"end": 13411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13360,
											"end": 13411,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 13360,
											"end": 13411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13360,
											"end": 13411,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13360,
											"end": 13411,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13360,
											"end": 13411,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13360,
											"end": 13411,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13360,
											"end": 13411,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13360,
											"end": 13411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13360,
											"end": 13411,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 12314,
											"end": 13419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12314,
											"end": 13419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12314,
											"end": 13419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12256,
											"end": 13419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12256,
											"end": 13419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12256,
											"end": 13419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3496,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3587,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 3541,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1584,
											"end": 1638,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 1716,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1650,
											"end": 1746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 1825,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1815,
											"end": 1850,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1752,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 1980,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 2019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2121,
											"end": 2130,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2119,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 2139,
											"end": 2218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2259,
											"end": 2260,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 2329,
											"end": 2336,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2305,
											"end": 2327,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 2284,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2274,
											"end": 2337,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2274,
											"end": 2337,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2230,
											"end": 2347,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2025,
											"end": 2354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2397,
											"end": 2404,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2431,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2431,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2431,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 2548,
											"end": 2553,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 2530,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2525,
											"end": 2528,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2518,
											"end": 2555,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2443,
											"end": 2561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2660,
											"end": 2664,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2700,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2696,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2683,
											"end": 2701,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2675,
											"end": 2701,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2675,
											"end": 2701,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2764,
											"end": 2781,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2755,
											"end": 2761,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 2711,
											"end": 2782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "tag",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2567,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2832,
											"end": 2839,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2850,
											"end": 2866,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2850,
											"end": 2866,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2795,
											"end": 2872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2878,
											"end": 3000,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 2878,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 2951,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "tag",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2944,
											"end": 2949,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2941,
											"end": 2976,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2931,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 2931,
											"end": 2994,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2990,
											"end": 2991,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 2988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 2992,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2931,
											"end": 2994,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 2931,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2878,
											"end": 3000,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2878,
											"end": 3000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3052,
											"end": 3057,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3096,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3077,
											"end": 3097,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3068,
											"end": 3097,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3068,
											"end": 3097,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 3133,
											"end": 3138,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 3106,
											"end": 3139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3139,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 3106,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3006,
											"end": 3145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3151,
											"end": 3480,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 3151,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3210,
											"end": 3216,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3261,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3238,
											"end": 3245,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3234,
											"end": 3257,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3230,
											"end": 3262,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3227,
											"end": 3346,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3227,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 3227,
											"end": 3346,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3265,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 3265,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 3265,
											"end": 3344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3265,
											"end": 3344,
											"name": "tag",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 3265,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3227,
											"end": 3346,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 3227,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3385,
											"end": 3386,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 3455,
											"end": 3462,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3431,
											"end": 3453,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3410,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 3410,
											"end": 3463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3410,
											"end": 3463,
											"name": "tag",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 3410,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3400,
											"end": 3463,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3400,
											"end": 3463,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3356,
											"end": 3473,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3151,
											"end": 3480,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3151,
											"end": 3480,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3151,
											"end": 3480,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3151,
											"end": 3480,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3151,
											"end": 3480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3486,
											"end": 3604,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 3486,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3573,
											"end": 3597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 3591,
											"end": 3596,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3573,
											"end": 3597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 3573,
											"end": 3597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3573,
											"end": 3597,
											"name": "tag",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 3573,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3568,
											"end": 3571,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3561,
											"end": 3598,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3486,
											"end": 3604,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3486,
											"end": 3604,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3486,
											"end": 3604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3610,
											"end": 3832,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 3610,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3703,
											"end": 3707,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3730,
											"end": 3739,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3726,
											"end": 3744,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3718,
											"end": 3744,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3718,
											"end": 3744,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3754,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 3822,
											"end": 3823,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3820,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3807,
											"end": 3824,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3798,
											"end": 3804,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3754,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 3754,
											"end": 3825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3754,
											"end": 3825,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 3754,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3610,
											"end": 3832,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3610,
											"end": 3832,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3610,
											"end": 3832,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3610,
											"end": 3832,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3610,
											"end": 3832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3906,
											"end": 3912,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3914,
											"end": 3920,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3963,
											"end": 3965,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3951,
											"end": 3960,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3942,
											"end": 3949,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3938,
											"end": 3961,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3966,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3931,
											"end": 4050,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3931,
											"end": 4050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 3931,
											"end": 4050,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3969,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 3969,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 3969,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3969,
											"end": 4048,
											"name": "tag",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 3969,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3931,
											"end": 4050,
											"name": "tag",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 3931,
											"end": 4050,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4089,
											"end": 4090,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 4159,
											"end": 4166,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4150,
											"end": 4156,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4139,
											"end": 4148,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4157,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4114,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 4114,
											"end": 4167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4114,
											"end": 4167,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 4114,
											"end": 4167,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4104,
											"end": 4167,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4104,
											"end": 4167,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4060,
											"end": 4177,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4216,
											"end": 4218,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4242,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 4287,
											"end": 4294,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4278,
											"end": 4284,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4267,
											"end": 4276,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4263,
											"end": 4285,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4242,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 4242,
											"end": 4295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4242,
											"end": 4295,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 4242,
											"end": 4295,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4232,
											"end": 4295,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4232,
											"end": 4295,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4187,
											"end": 4305,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3838,
											"end": 4312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4318,
											"end": 4440,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 4318,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4391,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 4409,
											"end": 4414,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4391,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 4391,
											"end": 4415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4391,
											"end": 4415,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 4391,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4381,
											"end": 4416,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4371,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 4371,
											"end": 4434,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4430,
											"end": 4431,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4427,
											"end": 4428,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4420,
											"end": 4432,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4371,
											"end": 4434,
											"name": "tag",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 4371,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4318,
											"end": 4440,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4318,
											"end": 4440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4446,
											"end": 4585,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 4446,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4492,
											"end": 4497,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4530,
											"end": 4536,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4517,
											"end": 4537,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4508,
											"end": 4537,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4508,
											"end": 4537,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4546,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 4573,
											"end": 4578,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4546,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 4546,
											"end": 4579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4546,
											"end": 4579,
											"name": "tag",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 4546,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4446,
											"end": 4585,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4446,
											"end": 4585,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4446,
											"end": 4585,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4446,
											"end": 4585,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4446,
											"end": 4585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4659,
											"end": 4665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4667,
											"end": 4673,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4716,
											"end": 4718,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4704,
											"end": 4713,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4695,
											"end": 4702,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4691,
											"end": 4714,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4687,
											"end": 4719,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4684,
											"end": 4803,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4684,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 4684,
											"end": 4803,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 4722,
											"end": 4801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "tag",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4684,
											"end": 4803,
											"name": "tag",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 4684,
											"end": 4803,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4842,
											"end": 4843,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 4912,
											"end": 4919,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4903,
											"end": 4909,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4892,
											"end": 4901,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4888,
											"end": 4910,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4867,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 4867,
											"end": 4920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4867,
											"end": 4920,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 4867,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4857,
											"end": 4920,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4857,
											"end": 4920,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4813,
											"end": 4930,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4969,
											"end": 4971,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4995,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 5040,
											"end": 5047,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5031,
											"end": 5037,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5016,
											"end": 5038,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4995,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 4995,
											"end": 5048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4995,
											"end": 5048,
											"name": "tag",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 4995,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4985,
											"end": 5048,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4985,
											"end": 5048,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4940,
											"end": 5058,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4591,
											"end": 5065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5071,
											"end": 5189,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 5071,
											"end": 5189,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5158,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 5176,
											"end": 5181,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5158,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 5158,
											"end": 5182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5158,
											"end": 5182,
											"name": "tag",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 5158,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5153,
											"end": 5156,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5146,
											"end": 5183,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5071,
											"end": 5189,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5071,
											"end": 5189,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5071,
											"end": 5189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5195,
											"end": 5417,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 5195,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5288,
											"end": 5292,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5326,
											"end": 5328,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5315,
											"end": 5324,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5311,
											"end": 5329,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5303,
											"end": 5329,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5303,
											"end": 5329,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5339,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 5407,
											"end": 5408,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5396,
											"end": 5405,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5392,
											"end": 5409,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5383,
											"end": 5389,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5339,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 5339,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5339,
											"end": 5410,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 5339,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5195,
											"end": 5417,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5195,
											"end": 5417,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5195,
											"end": 5417,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5195,
											"end": 5417,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5195,
											"end": 5417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5423,
											"end": 5897,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 5423,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5491,
											"end": 5497,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5505,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5548,
											"end": 5550,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5536,
											"end": 5545,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5527,
											"end": 5534,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5523,
											"end": 5546,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5519,
											"end": 5551,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5516,
											"end": 5635,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5516,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 5516,
											"end": 5635,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5554,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 5554,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 5554,
											"end": 5633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5554,
											"end": 5633,
											"name": "tag",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 5554,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5516,
											"end": 5635,
											"name": "tag",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 5516,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5674,
											"end": 5675,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5699,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 5744,
											"end": 5751,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5735,
											"end": 5741,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5724,
											"end": 5733,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5720,
											"end": 5742,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5699,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 5699,
											"end": 5752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5699,
											"end": 5752,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 5699,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5689,
											"end": 5752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5689,
											"end": 5752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5645,
											"end": 5762,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5801,
											"end": 5803,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5827,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5863,
											"end": 5869,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5852,
											"end": 5861,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5848,
											"end": 5870,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5827,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 5827,
											"end": 5880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5827,
											"end": 5880,
											"name": "tag",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 5827,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5817,
											"end": 5880,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5817,
											"end": 5880,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5772,
											"end": 5890,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5423,
											"end": 5897,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5423,
											"end": 5897,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5423,
											"end": 5897,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5423,
											"end": 5897,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5423,
											"end": 5897,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5423,
											"end": 5897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5903,
											"end": 6017,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 5903,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5970,
											"end": 5976,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6004,
											"end": 6009,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5998,
											"end": 6010,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6010,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6010,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5903,
											"end": 6017,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5903,
											"end": 6017,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5903,
											"end": 6017,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5903,
											"end": 6017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6023,
											"end": 6207,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 6023,
											"end": 6207,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6122,
											"end": 6133,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6156,
											"end": 6162,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6151,
											"end": 6154,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6144,
											"end": 6163,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6200,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6191,
											"end": 6194,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6187,
											"end": 6201,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6172,
											"end": 6201,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6172,
											"end": 6201,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6023,
											"end": 6207,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6023,
											"end": 6207,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6023,
											"end": 6207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6023,
											"end": 6207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6023,
											"end": 6207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6213,
											"end": 6345,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 6213,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6280,
											"end": 6284,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6303,
											"end": 6306,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6295,
											"end": 6306,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6295,
											"end": 6306,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6333,
											"end": 6337,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6328,
											"end": 6331,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6324,
											"end": 6338,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6338,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6338,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6213,
											"end": 6345,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6213,
											"end": 6345,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6213,
											"end": 6345,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6213,
											"end": 6345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6351,
											"end": 6459,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 6351,
											"end": 6459,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6428,
											"end": 6452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 6446,
											"end": 6451,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6428,
											"end": 6452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 6428,
											"end": 6452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6428,
											"end": 6452,
											"name": "tag",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 6428,
											"end": 6452,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6423,
											"end": 6426,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6416,
											"end": 6453,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6351,
											"end": 6459,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6351,
											"end": 6459,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6351,
											"end": 6459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6465,
											"end": 6644,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 6465,
											"end": 6644,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6534,
											"end": 6544,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6555,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 6597,
											"end": 6600,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6589,
											"end": 6595,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6555,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 6555,
											"end": 6601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6555,
											"end": 6601,
											"name": "tag",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 6555,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6633,
											"end": 6637,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6628,
											"end": 6631,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6624,
											"end": 6638,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6610,
											"end": 6638,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6610,
											"end": 6638,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6465,
											"end": 6644,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6465,
											"end": 6644,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6465,
											"end": 6644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6465,
											"end": 6644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6465,
											"end": 6644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6650,
											"end": 6763,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 6650,
											"end": 6763,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6720,
											"end": 6724,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6752,
											"end": 6756,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6747,
											"end": 6750,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6743,
											"end": 6757,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6735,
											"end": 6757,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6735,
											"end": 6757,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6650,
											"end": 6763,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6650,
											"end": 6763,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6650,
											"end": 6763,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6650,
											"end": 6763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6799,
											"end": 7531,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 6799,
											"end": 7531,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6918,
											"end": 6921,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6947,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 6995,
											"end": 7000,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6947,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 6947,
											"end": 7001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6947,
											"end": 7001,
											"name": "tag",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 6947,
											"end": 7001,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7017,
											"end": 7103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 7096,
											"end": 7102,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7091,
											"end": 7094,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7017,
											"end": 7103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 7017,
											"end": 7103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7017,
											"end": 7103,
											"name": "tag",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 7017,
											"end": 7103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7010,
											"end": 7103,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7010,
											"end": 7103,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7127,
											"end": 7183,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 7177,
											"end": 7182,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7127,
											"end": 7183,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 7127,
											"end": 7183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7127,
											"end": 7183,
											"name": "tag",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 7127,
											"end": 7183,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7206,
											"end": 7213,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7237,
											"end": 7238,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7222,
											"end": 7506,
											"name": "tag",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 7222,
											"end": 7506,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7247,
											"end": 7253,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7244,
											"end": 7245,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7241,
											"end": 7254,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7222,
											"end": 7506,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7222,
											"end": 7506,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 7222,
											"end": 7506,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7323,
											"end": 7329,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7317,
											"end": 7330,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7350,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 7409,
											"end": 7412,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7394,
											"end": 7407,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7350,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 7350,
											"end": 7413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7350,
											"end": 7413,
											"name": "tag",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 7350,
											"end": 7413,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7343,
											"end": 7413,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 7343,
											"end": 7413,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7436,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 7489,
											"end": 7495,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7436,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 7436,
											"end": 7496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7436,
											"end": 7496,
											"name": "tag",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 7436,
											"end": 7496,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7426,
											"end": 7496,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7426,
											"end": 7496,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7266,
											"end": 7267,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7262,
											"end": 7271,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7271,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7271,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7222,
											"end": 7506,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 7222,
											"end": 7506,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7222,
											"end": 7506,
											"name": "tag",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 7222,
											"end": 7506,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7226,
											"end": 7240,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7522,
											"end": 7525,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7515,
											"end": 7525,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7515,
											"end": 7525,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6923,
											"end": 7531,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6923,
											"end": 7531,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6923,
											"end": 7531,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6799,
											"end": 7531,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6799,
											"end": 7531,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6799,
											"end": 7531,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6799,
											"end": 7531,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6799,
											"end": 7531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7537,
											"end": 7910,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 7537,
											"end": 7910,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7680,
											"end": 7684,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7718,
											"end": 7720,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7707,
											"end": 7716,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7695,
											"end": 7721,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7695,
											"end": 7721,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7776,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7761,
											"end": 7765,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7753,
											"end": 7754,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7742,
											"end": 7751,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7738,
											"end": 7755,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7731,
											"end": 7778,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7795,
											"end": 7903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 7898,
											"end": 7902,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7889,
											"end": 7895,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7795,
											"end": 7903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 7795,
											"end": 7903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7795,
											"end": 7903,
											"name": "tag",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 7795,
											"end": 7903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7787,
											"end": 7903,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7787,
											"end": 7903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7537,
											"end": 7910,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7537,
											"end": 7910,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7537,
											"end": 7910,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7537,
											"end": 7910,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7537,
											"end": 7910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7916,
											"end": 8245,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 7916,
											"end": 8245,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7975,
											"end": 7981,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8024,
											"end": 8026,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8012,
											"end": 8021,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8003,
											"end": 8010,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7999,
											"end": 8022,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7995,
											"end": 8027,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7992,
											"end": 8111,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7992,
											"end": 8111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 7992,
											"end": 8111,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8030,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 8030,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 8030,
											"end": 8109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8030,
											"end": 8109,
											"name": "tag",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 8030,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7992,
											"end": 8111,
											"name": "tag",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 7992,
											"end": 8111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8150,
											"end": 8151,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8175,
											"end": 8228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 8220,
											"end": 8227,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8211,
											"end": 8217,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8200,
											"end": 8209,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8196,
											"end": 8218,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8175,
											"end": 8228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 8175,
											"end": 8228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8175,
											"end": 8228,
											"name": "tag",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 8175,
											"end": 8228,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8165,
											"end": 8228,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8165,
											"end": 8228,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8121,
											"end": 8238,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7916,
											"end": 8245,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7916,
											"end": 8245,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7916,
											"end": 8245,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7916,
											"end": 8245,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7916,
											"end": 8245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8251,
											"end": 8431,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 8251,
											"end": 8431,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8299,
											"end": 8376,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8296,
											"end": 8297,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8289,
											"end": 8377,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8396,
											"end": 8400,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 8393,
											"end": 8394,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8386,
											"end": 8401,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8420,
											"end": 8424,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8417,
											"end": 8418,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8410,
											"end": 8425,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8437,
											"end": 8628,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 8437,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8477,
											"end": 8480,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8496,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 8514,
											"end": 8515,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8496,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 8496,
											"end": 8516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8496,
											"end": 8516,
											"name": "tag",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 8496,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8491,
											"end": 8516,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8491,
											"end": 8516,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8530,
											"end": 8550,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 8548,
											"end": 8549,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8530,
											"end": 8550,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 8530,
											"end": 8550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8530,
											"end": 8550,
											"name": "tag",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 8530,
											"end": 8550,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8525,
											"end": 8550,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8525,
											"end": 8550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8573,
											"end": 8574,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8570,
											"end": 8571,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8566,
											"end": 8575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8559,
											"end": 8575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8559,
											"end": 8575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8594,
											"end": 8597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8591,
											"end": 8592,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8588,
											"end": 8598,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8585,
											"end": 8621,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8585,
											"end": 8621,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 8585,
											"end": 8621,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8601,
											"end": 8619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 8601,
											"end": 8619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 8601,
											"end": 8619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8601,
											"end": 8619,
											"name": "tag",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 8601,
											"end": 8619,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8585,
											"end": 8621,
											"name": "tag",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 8585,
											"end": 8621,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8437,
											"end": 8628,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8437,
											"end": 8628,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8437,
											"end": 8628,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8437,
											"end": 8628,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8437,
											"end": 8628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8634,
											"end": 8828,
											"name": "tag",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 8634,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8674,
											"end": 8678,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8694,
											"end": 8714,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 8712,
											"end": 8713,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8694,
											"end": 8714,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 8694,
											"end": 8714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8694,
											"end": 8714,
											"name": "tag",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 8694,
											"end": 8714,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8689,
											"end": 8714,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8689,
											"end": 8714,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8728,
											"end": 8748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 8746,
											"end": 8747,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8728,
											"end": 8748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 8728,
											"end": 8748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8728,
											"end": 8748,
											"name": "tag",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 8728,
											"end": 8748,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8723,
											"end": 8748,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8723,
											"end": 8748,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8772,
											"end": 8773,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8769,
											"end": 8770,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8765,
											"end": 8774,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8757,
											"end": 8774,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8757,
											"end": 8774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8796,
											"end": 8797,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8790,
											"end": 8794,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8787,
											"end": 8798,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8784,
											"end": 8821,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8784,
											"end": 8821,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 8784,
											"end": 8821,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8801,
											"end": 8819,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 8801,
											"end": 8819,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 8801,
											"end": 8819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8801,
											"end": 8819,
											"name": "tag",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 8801,
											"end": 8819,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8784,
											"end": 8821,
											"name": "tag",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 8784,
											"end": 8821,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8634,
											"end": 8828,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8634,
											"end": 8828,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8634,
											"end": 8828,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8634,
											"end": 8828,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8634,
											"end": 8828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8834,
											"end": 9166,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 8834,
											"end": 9166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8955,
											"end": 8959,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8993,
											"end": 8995,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8982,
											"end": 8991,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8978,
											"end": 8996,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8970,
											"end": 8996,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8970,
											"end": 8996,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9006,
											"end": 9077,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 9074,
											"end": 9075,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9063,
											"end": 9072,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9059,
											"end": 9076,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9050,
											"end": 9056,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9006,
											"end": 9077,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 9006,
											"end": 9077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9006,
											"end": 9077,
											"name": "tag",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 9006,
											"end": 9077,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9087,
											"end": 9159,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 9155,
											"end": 9157,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9144,
											"end": 9153,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9131,
											"end": 9137,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9087,
											"end": 9159,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 9087,
											"end": 9159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9087,
											"end": 9159,
											"name": "tag",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 9087,
											"end": 9159,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8834,
											"end": 9166,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8834,
											"end": 9166,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8834,
											"end": 9166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8834,
											"end": 9166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8834,
											"end": 9166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8834,
											"end": 9166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9172,
											"end": 9405,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 9172,
											"end": 9405,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9211,
											"end": 9214,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9234,
											"end": 9258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 9252,
											"end": 9257,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9234,
											"end": 9258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 9234,
											"end": 9258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9234,
											"end": 9258,
											"name": "tag",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 9234,
											"end": 9258,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9225,
											"end": 9258,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9225,
											"end": 9258,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9280,
											"end": 9346,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9273,
											"end": 9278,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9270,
											"end": 9347,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9267,
											"end": 9370,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 9267,
											"end": 9370,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9350,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 9350,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 9350,
											"end": 9368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9350,
											"end": 9368,
											"name": "tag",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 9350,
											"end": 9368,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9267,
											"end": 9370,
											"name": "tag",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 9267,
											"end": 9370,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9397,
											"end": 9398,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 9390,
											"end": 9395,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9386,
											"end": 9399,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9379,
											"end": 9399,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9379,
											"end": 9399,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9172,
											"end": 9405,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9172,
											"end": 9405,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9172,
											"end": 9405,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9172,
											"end": 9405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9411,
											"end": 9496,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 9411,
											"end": 9496,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9456,
											"end": 9463,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9485,
											"end": 9490,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9474,
											"end": 9490,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9474,
											"end": 9490,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9411,
											"end": 9496,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9411,
											"end": 9496,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9411,
											"end": 9496,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9411,
											"end": 9496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9502,
											"end": 9562,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 9502,
											"end": 9562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9530,
											"end": 9533,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9551,
											"end": 9556,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9544,
											"end": 9556,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9544,
											"end": 9556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9502,
											"end": 9562,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9502,
											"end": 9562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9502,
											"end": 9562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9502,
											"end": 9562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9568,
											"end": 9726,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 9568,
											"end": 9726,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9626,
											"end": 9635,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9659,
											"end": 9720,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 9677,
											"end": 9719,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "591"
										},
										{
											"begin": 9686,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 9712,
											"end": 9717,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9686,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 9686,
											"end": 9718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9686,
											"end": 9718,
											"name": "tag",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 9686,
											"end": 9718,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9677,
											"end": 9719,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 9677,
											"end": 9719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9677,
											"end": 9719,
											"name": "tag",
											"source": 13,
											"value": "591"
										},
										{
											"begin": 9677,
											"end": 9719,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9659,
											"end": 9720,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 9659,
											"end": 9720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9659,
											"end": 9720,
											"name": "tag",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 9659,
											"end": 9720,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9646,
											"end": 9720,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9646,
											"end": 9720,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9568,
											"end": 9726,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9568,
											"end": 9726,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9568,
											"end": 9726,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9568,
											"end": 9726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9732,
											"end": 9879,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 9732,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9827,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "594"
										},
										{
											"begin": 9866,
											"end": 9871,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9827,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 9827,
											"end": 9872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9827,
											"end": 9872,
											"name": "tag",
											"source": 13,
											"value": "594"
										},
										{
											"begin": 9827,
											"end": 9872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9822,
											"end": 9825,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9815,
											"end": 9873,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9732,
											"end": 9879,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9732,
											"end": 9879,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9732,
											"end": 9879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9885,
											"end": 10233,
											"name": "tag",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 9885,
											"end": 10233,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10014,
											"end": 10018,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10052,
											"end": 10054,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10041,
											"end": 10050,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10037,
											"end": 10055,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10029,
											"end": 10055,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10029,
											"end": 10055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10065,
											"end": 10144,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 10141,
											"end": 10142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10130,
											"end": 10139,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10126,
											"end": 10143,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10117,
											"end": 10123,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10065,
											"end": 10144,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 10065,
											"end": 10144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10065,
											"end": 10144,
											"name": "tag",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 10065,
											"end": 10144,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10154,
											"end": 10226,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 10222,
											"end": 10224,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10211,
											"end": 10220,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10207,
											"end": 10225,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10198,
											"end": 10204,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10154,
											"end": 10226,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 10154,
											"end": 10226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10154,
											"end": 10226,
											"name": "tag",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 10154,
											"end": 10226,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9885,
											"end": 10233,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9885,
											"end": 10233,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9885,
											"end": 10233,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9885,
											"end": 10233,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9885,
											"end": 10233,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9885,
											"end": 10233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10419,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 10239,
											"end": 10419,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10287,
											"end": 10364,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10284,
											"end": 10285,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10277,
											"end": 10365,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10384,
											"end": 10388,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 10381,
											"end": 10382,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10374,
											"end": 10389,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10408,
											"end": 10412,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10405,
											"end": 10406,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10398,
											"end": 10413,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10425,
											"end": 10605,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 10425,
											"end": 10605,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10473,
											"end": 10550,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10470,
											"end": 10471,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10463,
											"end": 10551,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10570,
											"end": 10574,
											"name": "PUSH",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 10567,
											"end": 10568,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10560,
											"end": 10575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10594,
											"end": 10598,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10591,
											"end": 10592,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10584,
											"end": 10599,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10611,
											"end": 10716,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 10611,
											"end": 10716,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10647,
											"end": 10654,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10687,
											"end": 10709,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10680,
											"end": 10685,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10676,
											"end": 10710,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10665,
											"end": 10710,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10665,
											"end": 10710,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10611,
											"end": 10716,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10611,
											"end": 10716,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10611,
											"end": 10716,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10611,
											"end": 10716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10722,
											"end": 10842,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 10722,
											"end": 10842,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10794,
											"end": 10817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 10811,
											"end": 10816,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10794,
											"end": 10817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 10794,
											"end": 10817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10794,
											"end": 10817,
											"name": "tag",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 10794,
											"end": 10817,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10787,
											"end": 10792,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10784,
											"end": 10818,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 10774,
											"end": 10836,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "603"
										},
										{
											"begin": 10774,
											"end": 10836,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10832,
											"end": 10833,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10829,
											"end": 10830,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10822,
											"end": 10834,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10774,
											"end": 10836,
											"name": "tag",
											"source": 13,
											"value": "603"
										},
										{
											"begin": 10774,
											"end": 10836,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10722,
											"end": 10842,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10722,
											"end": 10842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10848,
											"end": 10989,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 10848,
											"end": 10989,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10935,
											"end": 10941,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10929,
											"end": 10942,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10920,
											"end": 10942,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10920,
											"end": 10942,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10951,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 10977,
											"end": 10982,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10951,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 10951,
											"end": 10983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10951,
											"end": 10983,
											"name": "tag",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 10951,
											"end": 10983,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10848,
											"end": 10989,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10848,
											"end": 10989,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10848,
											"end": 10989,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10848,
											"end": 10989,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10848,
											"end": 10989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10995,
											"end": 11071,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 10995,
											"end": 11071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11031,
											"end": 11038,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11060,
											"end": 11065,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11049,
											"end": 11065,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11049,
											"end": 11065,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10995,
											"end": 11071,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10995,
											"end": 11071,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10995,
											"end": 11071,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10995,
											"end": 11071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11077,
											"end": 11197,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 11077,
											"end": 11197,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11149,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 11166,
											"end": 11171,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11149,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 11149,
											"end": 11172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11149,
											"end": 11172,
											"name": "tag",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 11149,
											"end": 11172,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11142,
											"end": 11147,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11139,
											"end": 11173,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 11129,
											"end": 11191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 11129,
											"end": 11191,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11187,
											"end": 11188,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11184,
											"end": 11185,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11177,
											"end": 11189,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11129,
											"end": 11191,
											"name": "tag",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 11129,
											"end": 11191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11077,
											"end": 11197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11077,
											"end": 11197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11203,
											"end": 11344,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 11203,
											"end": 11344,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11259,
											"end": 11264,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11290,
											"end": 11296,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11284,
											"end": 11297,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11275,
											"end": 11297,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11275,
											"end": 11297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11306,
											"end": 11338,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "611"
										},
										{
											"begin": 11332,
											"end": 11337,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11306,
											"end": 11338,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 11306,
											"end": 11338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11306,
											"end": 11338,
											"name": "tag",
											"source": 13,
											"value": "611"
										},
										{
											"begin": 11306,
											"end": 11338,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11203,
											"end": 11344,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11203,
											"end": 11344,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11203,
											"end": 11344,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11203,
											"end": 11344,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11203,
											"end": 11344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11350,
											"end": 11493,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 11350,
											"end": 11493,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11407,
											"end": 11412,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11438,
											"end": 11444,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11432,
											"end": 11445,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11423,
											"end": 11445,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11423,
											"end": 11445,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11454,
											"end": 11487,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 11481,
											"end": 11486,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11454,
											"end": 11487,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 11454,
											"end": 11487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11454,
											"end": 11487,
											"name": "tag",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 11454,
											"end": 11487,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11350,
											"end": 11493,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11350,
											"end": 11493,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11350,
											"end": 11493,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11350,
											"end": 11493,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11350,
											"end": 11493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11499,
											"end": 12470,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 11499,
											"end": 12470,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11602,
											"end": 11608,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11610,
											"end": 11616,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11618,
											"end": 11624,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11626,
											"end": 11632,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11634,
											"end": 11640,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11683,
											"end": 11686,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 11671,
											"end": 11680,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11662,
											"end": 11669,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11658,
											"end": 11681,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11654,
											"end": 11687,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 11651,
											"end": 11771,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11651,
											"end": 11771,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "615"
										},
										{
											"begin": 11651,
											"end": 11771,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11690,
											"end": 11769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 11690,
											"end": 11769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 11690,
											"end": 11769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11690,
											"end": 11769,
											"name": "tag",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 11690,
											"end": 11769,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11651,
											"end": 11771,
											"name": "tag",
											"source": 13,
											"value": "615"
										},
										{
											"begin": 11651,
											"end": 11771,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11810,
											"end": 11811,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11835,
											"end": 11898,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "617"
										},
										{
											"begin": 11890,
											"end": 11897,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11881,
											"end": 11887,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11870,
											"end": 11879,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 11866,
											"end": 11888,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11835,
											"end": 11898,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 11835,
											"end": 11898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11835,
											"end": 11898,
											"name": "tag",
											"source": 13,
											"value": "617"
										},
										{
											"begin": 11835,
											"end": 11898,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11825,
											"end": 11898,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 11825,
											"end": 11898,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11781,
											"end": 11908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11947,
											"end": 11949,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11973,
											"end": 12036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 12028,
											"end": 12035,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12019,
											"end": 12025,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12008,
											"end": 12017,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 12004,
											"end": 12026,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11973,
											"end": 12036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 11973,
											"end": 12036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11973,
											"end": 12036,
											"name": "tag",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 11973,
											"end": 12036,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11963,
											"end": 12036,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 11963,
											"end": 12036,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11918,
											"end": 12046,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12085,
											"end": 12087,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12111,
											"end": 12175,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 12167,
											"end": 12174,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12158,
											"end": 12164,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12147,
											"end": 12156,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 12143,
											"end": 12165,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12111,
											"end": 12175,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 12111,
											"end": 12175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12111,
											"end": 12175,
											"name": "tag",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 12111,
											"end": 12175,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12101,
											"end": 12175,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12101,
											"end": 12175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12056,
											"end": 12185,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12224,
											"end": 12226,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 12250,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "620"
										},
										{
											"begin": 12306,
											"end": 12313,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12297,
											"end": 12303,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12286,
											"end": 12295,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 12282,
											"end": 12304,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12250,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 12250,
											"end": 12314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12250,
											"end": 12314,
											"name": "tag",
											"source": 13,
											"value": "620"
										},
										{
											"begin": 12250,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12240,
											"end": 12314,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12240,
											"end": 12314,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12195,
											"end": 12324,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12363,
											"end": 12366,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 12390,
											"end": 12453,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "621"
										},
										{
											"begin": 12445,
											"end": 12452,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12436,
											"end": 12442,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12425,
											"end": 12434,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 12421,
											"end": 12443,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12390,
											"end": 12453,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 12390,
											"end": 12453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12390,
											"end": 12453,
											"name": "tag",
											"source": 13,
											"value": "621"
										},
										{
											"begin": 12390,
											"end": 12453,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12380,
											"end": 12453,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12380,
											"end": 12453,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12334,
											"end": 12463,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11499,
											"end": 12470,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11499,
											"end": 12470,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 11499,
											"end": 12470,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11499,
											"end": 12470,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11499,
											"end": 12470,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 11499,
											"end": 12470,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11499,
											"end": 12470,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11499,
											"end": 12470,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11499,
											"end": 12470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12476,
											"end": 12562,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 12476,
											"end": 12562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12511,
											"end": 12518,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12551,
											"end": 12555,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 12544,
											"end": 12549,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12540,
											"end": 12556,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12529,
											"end": 12556,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12529,
											"end": 12556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12476,
											"end": 12562,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12476,
											"end": 12562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12476,
											"end": 12562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12476,
											"end": 12562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12568,
											"end": 12686,
											"name": "tag",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 12568,
											"end": 12686,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12639,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "624"
										},
										{
											"begin": 12655,
											"end": 12660,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12639,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 12639,
											"end": 12661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12639,
											"end": 12661,
											"name": "tag",
											"source": 13,
											"value": "624"
										},
										{
											"begin": 12639,
											"end": 12661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12632,
											"end": 12637,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12629,
											"end": 12662,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 12619,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 12619,
											"end": 12680,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12676,
											"end": 12677,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12673,
											"end": 12674,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12666,
											"end": 12678,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12619,
											"end": 12680,
											"name": "tag",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 12619,
											"end": 12680,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12568,
											"end": 12686,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12568,
											"end": 12686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12692,
											"end": 12831,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 12692,
											"end": 12831,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12747,
											"end": 12752,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12778,
											"end": 12784,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12772,
											"end": 12785,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12763,
											"end": 12785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12763,
											"end": 12785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12794,
											"end": 12825,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "627"
										},
										{
											"begin": 12819,
											"end": 12824,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12794,
											"end": 12825,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 12794,
											"end": 12825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12794,
											"end": 12825,
											"name": "tag",
											"source": 13,
											"value": "627"
										},
										{
											"begin": 12794,
											"end": 12825,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12692,
											"end": 12831,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12692,
											"end": 12831,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12692,
											"end": 12831,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12692,
											"end": 12831,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12692,
											"end": 12831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12837,
											"end": 13184,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 12837,
											"end": 13184,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12905,
											"end": 12911,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12954,
											"end": 12956,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12942,
											"end": 12951,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12933,
											"end": 12940,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12929,
											"end": 12952,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12925,
											"end": 12957,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 12922,
											"end": 13041,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12922,
											"end": 13041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "629"
										},
										{
											"begin": 12922,
											"end": 13041,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12960,
											"end": 13039,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "630"
										},
										{
											"begin": 12960,
											"end": 13039,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 12960,
											"end": 13039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12960,
											"end": 13039,
											"name": "tag",
											"source": 13,
											"value": "630"
										},
										{
											"begin": 12960,
											"end": 13039,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12922,
											"end": 13041,
											"name": "tag",
											"source": 13,
											"value": "629"
										},
										{
											"begin": 12922,
											"end": 13041,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13080,
											"end": 13081,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13105,
											"end": 13167,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "631"
										},
										{
											"begin": 13159,
											"end": 13166,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13150,
											"end": 13156,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13139,
											"end": 13148,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13135,
											"end": 13157,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13105,
											"end": 13167,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 13105,
											"end": 13167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13105,
											"end": 13167,
											"name": "tag",
											"source": 13,
											"value": "631"
										},
										{
											"begin": 13105,
											"end": 13167,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13095,
											"end": 13167,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13095,
											"end": 13167,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13051,
											"end": 13177,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12837,
											"end": 13184,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12837,
											"end": 13184,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12837,
											"end": 13184,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12837,
											"end": 13184,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12837,
											"end": 13184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13190,
											"end": 13292,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 13190,
											"end": 13292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13232,
											"end": 13240,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13279,
											"end": 13284,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13276,
											"end": 13277,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 13272,
											"end": 13285,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 13251,
											"end": 13285,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13251,
											"end": 13285,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13190,
											"end": 13292,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13190,
											"end": 13292,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13190,
											"end": 13292,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13190,
											"end": 13292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13298,
											"end": 14146,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 13298,
											"end": 14146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13359,
											"end": 13364,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13366,
											"end": 13370,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13390,
											"end": 13396,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13381,
											"end": 13396,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13381,
											"end": 13396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13414,
											"end": 13419,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13405,
											"end": 13419,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13405,
											"end": 13419,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13428,
											"end": 14140,
											"name": "tag",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 13428,
											"end": 14140,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13449,
											"end": 13450,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 13439,
											"end": 13447,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13436,
											"end": 13451,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 13428,
											"end": 14140,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13428,
											"end": 14140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "636"
										},
										{
											"begin": 13428,
											"end": 14140,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13544,
											"end": 13548,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13539,
											"end": 13542,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13535,
											"end": 13549,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 13529,
											"end": 13533,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13526,
											"end": 13550,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 13523,
											"end": 13573,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13523,
											"end": 13573,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 13523,
											"end": 13573,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13553,
											"end": 13571,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "638"
										},
										{
											"begin": 13553,
											"end": 13571,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 13553,
											"end": 13571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13553,
											"end": 13571,
											"name": "tag",
											"source": 13,
											"value": "638"
										},
										{
											"begin": 13553,
											"end": 13571,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13523,
											"end": 13573,
											"name": "tag",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 13523,
											"end": 13573,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13603,
											"end": 13604,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 13593,
											"end": 13601,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13589,
											"end": 13605,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13586,
											"end": 14037,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13586,
											"end": 14037,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 13586,
											"end": 14037,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14018,
											"end": 14022,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14011,
											"end": 14016,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14007,
											"end": 14023,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 13998,
											"end": 14023,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13998,
											"end": 14023,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13586,
											"end": 14037,
											"name": "tag",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 13586,
											"end": 14037,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14068,
											"end": 14072,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14062,
											"end": 14066,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14058,
											"end": 14073,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 14050,
											"end": 14073,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14050,
											"end": 14073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14098,
											"end": 14130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "640"
										},
										{
											"begin": 14121,
											"end": 14129,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14098,
											"end": 14130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 14098,
											"end": 14130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14098,
											"end": 14130,
											"name": "tag",
											"source": 13,
											"value": "640"
										},
										{
											"begin": 14098,
											"end": 14130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14086,
											"end": 14130,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 14086,
											"end": 14130,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13428,
											"end": 14140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 13428,
											"end": 14140,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13428,
											"end": 14140,
											"name": "tag",
											"source": 13,
											"value": "636"
										},
										{
											"begin": 13428,
											"end": 14140,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13298,
											"end": 14146,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 13298,
											"end": 14146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13298,
											"end": 14146,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 13298,
											"end": 14146,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13298,
											"end": 14146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13298,
											"end": 14146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13298,
											"end": 14146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13298,
											"end": 14146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14152,
											"end": 15225,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 14152,
											"end": 15225,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14206,
											"end": 14211,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14397,
											"end": 14405,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14387,
											"end": 14427,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "642"
										},
										{
											"begin": 14387,
											"end": 14427,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14418,
											"end": 14419,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 14409,
											"end": 14419,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14409,
											"end": 14419,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14420,
											"end": 14425,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "641"
										},
										{
											"begin": 14420,
											"end": 14425,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14387,
											"end": 14427,
											"name": "tag",
											"source": 13,
											"value": "642"
										},
										{
											"begin": 14387,
											"end": 14427,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14446,
											"end": 14450,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14436,
											"end": 14472,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "643"
										},
										{
											"begin": 14436,
											"end": 14472,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14463,
											"end": 14464,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14454,
											"end": 14464,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14454,
											"end": 14464,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14465,
											"end": 14470,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "641"
										},
										{
											"begin": 14465,
											"end": 14470,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14436,
											"end": 14472,
											"name": "tag",
											"source": 13,
											"value": "643"
										},
										{
											"begin": 14436,
											"end": 14472,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14532,
											"end": 14536,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14580,
											"end": 14581,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 14575,
											"end": 14602,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14575,
											"end": 14602,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 14575,
											"end": 14602,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 14575,
											"end": 14602,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14616,
											"end": 14617,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 14611,
											"end": 14802,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14611,
											"end": 14802,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 14611,
											"end": 14802,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "646"
										},
										{
											"begin": 14611,
											"end": 14802,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14525,
											"end": 14802,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "644"
										},
										{
											"begin": 14525,
											"end": 14802,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14575,
											"end": 14602,
											"name": "tag",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 14575,
											"end": 14602,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14593,
											"end": 14594,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 14584,
											"end": 14594,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14584,
											"end": 14594,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14595,
											"end": 14600,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14595,
											"end": 14600,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "641"
										},
										{
											"begin": 14595,
											"end": 14600,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14611,
											"end": 14802,
											"name": "tag",
											"source": 13,
											"value": "646"
										},
										{
											"begin": 14611,
											"end": 14802,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14656,
											"end": 14659,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 14646,
											"end": 14654,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14643,
											"end": 14660,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 14640,
											"end": 14683,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14640,
											"end": 14683,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "647"
										},
										{
											"begin": 14640,
											"end": 14683,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14663,
											"end": 14681,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "648"
										},
										{
											"begin": 14663,
											"end": 14681,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 14663,
											"end": 14681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14663,
											"end": 14681,
											"name": "tag",
											"source": 13,
											"value": "648"
										},
										{
											"begin": 14663,
											"end": 14681,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14640,
											"end": 14683,
											"name": "tag",
											"source": 13,
											"value": "647"
										},
										{
											"begin": 14640,
											"end": 14683,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14712,
											"end": 14720,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14709,
											"end": 14710,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 14705,
											"end": 14721,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 14696,
											"end": 14721,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14696,
											"end": 14721,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14747,
											"end": 14750,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14737,
											"end": 14751,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 14734,
											"end": 14774,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14734,
											"end": 14774,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "649"
										},
										{
											"begin": 14734,
											"end": 14774,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14754,
											"end": 14772,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "650"
										},
										{
											"begin": 14754,
											"end": 14772,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 14754,
											"end": 14772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14754,
											"end": 14772,
											"name": "tag",
											"source": 13,
											"value": "650"
										},
										{
											"begin": 14754,
											"end": 14772,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14734,
											"end": 14774,
											"name": "tag",
											"source": 13,
											"value": "649"
										},
										{
											"begin": 14734,
											"end": 14774,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14787,
											"end": 14792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14787,
											"end": 14792,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "641"
										},
										{
											"begin": 14787,
											"end": 14792,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14525,
											"end": 14802,
											"name": "tag",
											"source": 13,
											"value": "644"
										},
										{
											"begin": 14525,
											"end": 14802,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14525,
											"end": 14802,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14911,
											"end": 14913,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14901,
											"end": 14909,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14898,
											"end": 14914,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 14892,
											"end": 14895,
											"name": "PUSH",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 14886,
											"end": 14890,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14883,
											"end": 14896,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 14879,
											"end": 14915,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14861,
											"end": 14863,
											"name": "PUSH",
											"source": 13,
											"value": "4E"
										},
										{
											"begin": 14851,
											"end": 14859,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14848,
											"end": 14864,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 14843,
											"end": 14845,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 14837,
											"end": 14841,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14834,
											"end": 14846,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14865,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14814,
											"end": 14925,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 14811,
											"end": 15057,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14811,
											"end": 15057,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 14811,
											"end": 15057,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14967,
											"end": 14975,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14961,
											"end": 14965,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14957,
											"end": 14976,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 14948,
											"end": 14976,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14948,
											"end": 14976,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15002,
											"end": 15005,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14995,
											"end": 15000,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14992,
											"end": 15006,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 14989,
											"end": 15029,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14989,
											"end": 15029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "652"
										},
										{
											"begin": 14989,
											"end": 15029,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15009,
											"end": 15027,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "653"
										},
										{
											"begin": 15009,
											"end": 15027,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 15009,
											"end": 15027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15009,
											"end": 15027,
											"name": "tag",
											"source": 13,
											"value": "653"
										},
										{
											"begin": 15009,
											"end": 15027,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14989,
											"end": 15029,
											"name": "tag",
											"source": 13,
											"value": "652"
										},
										{
											"begin": 14989,
											"end": 15029,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15042,
											"end": 15047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "641"
										},
										{
											"begin": 15042,
											"end": 15047,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14811,
											"end": 15057,
											"name": "tag",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 14811,
											"end": 15057,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15082,
											"end": 15124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "654"
										},
										{
											"begin": 15120,
											"end": 15123,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15110,
											"end": 15118,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15104,
											"end": 15108,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15101,
											"end": 15102,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 15082,
											"end": 15124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 15082,
											"end": 15124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15082,
											"end": 15124,
											"name": "tag",
											"source": 13,
											"value": "654"
										},
										{
											"begin": 15082,
											"end": 15124,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15067,
											"end": 15124,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15067,
											"end": 15124,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15067,
											"end": 15124,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15067,
											"end": 15124,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15156,
											"end": 15160,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15151,
											"end": 15154,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15147,
											"end": 15161,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 15140,
											"end": 15145,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15137,
											"end": 15162,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 15134,
											"end": 15185,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15134,
											"end": 15185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 15134,
											"end": 15185,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15165,
											"end": 15183,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "656"
										},
										{
											"begin": 15165,
											"end": 15183,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 15165,
											"end": 15183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15165,
											"end": 15183,
											"name": "tag",
											"source": 13,
											"value": "656"
										},
										{
											"begin": 15165,
											"end": 15183,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15134,
											"end": 15185,
											"name": "tag",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 15134,
											"end": 15185,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15214,
											"end": 15218,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15207,
											"end": 15212,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15203,
											"end": 15219,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 15194,
											"end": 15219,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15194,
											"end": 15219,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14152,
											"end": 15225,
											"name": "tag",
											"source": 13,
											"value": "641"
										},
										{
											"begin": 14152,
											"end": 15225,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14152,
											"end": 15225,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14152,
											"end": 15225,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14152,
											"end": 15225,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14152,
											"end": 15225,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14152,
											"end": 15225,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14152,
											"end": 15225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15231,
											"end": 15512,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 15231,
											"end": 15512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15289,
											"end": 15294,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15313,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 15331,
											"end": 15335,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15313,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 15313,
											"end": 15336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15313,
											"end": 15336,
											"name": "tag",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 15313,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15305,
											"end": 15336,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15305,
											"end": 15336,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15357,
											"end": 15382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "659"
										},
										{
											"begin": 15373,
											"end": 15381,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15357,
											"end": 15382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 15357,
											"end": 15382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15357,
											"end": 15382,
											"name": "tag",
											"source": 13,
											"value": "659"
										},
										{
											"begin": 15357,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15345,
											"end": 15382,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15345,
											"end": 15382,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15401,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "660"
										},
										{
											"begin": 15438,
											"end": 15504,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15428,
											"end": 15436,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15422,
											"end": 15426,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15401,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 15401,
											"end": 15505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15401,
											"end": 15505,
											"name": "tag",
											"source": 13,
											"value": "660"
										},
										{
											"begin": 15401,
											"end": 15505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15392,
											"end": 15505,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15392,
											"end": 15505,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15231,
											"end": 15512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15231,
											"end": 15512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15231,
											"end": 15512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15231,
											"end": 15512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15231,
											"end": 15512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15518,
											"end": 15928,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 15518,
											"end": 15928,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15558,
											"end": 15565,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15581,
											"end": 15601,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 15599,
											"end": 15600,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15581,
											"end": 15601,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 15581,
											"end": 15601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15581,
											"end": 15601,
											"name": "tag",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 15581,
											"end": 15601,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15576,
											"end": 15601,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15576,
											"end": 15601,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15615,
											"end": 15635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "663"
										},
										{
											"begin": 15633,
											"end": 15634,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15615,
											"end": 15635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 15615,
											"end": 15635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15615,
											"end": 15635,
											"name": "tag",
											"source": 13,
											"value": "663"
										},
										{
											"begin": 15615,
											"end": 15635,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15610,
											"end": 15635,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15610,
											"end": 15635,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15670,
											"end": 15671,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15667,
											"end": 15668,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15663,
											"end": 15672,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 15692,
											"end": 15722,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "664"
										},
										{
											"begin": 15710,
											"end": 15721,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15692,
											"end": 15722,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 15692,
											"end": 15722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15692,
											"end": 15722,
											"name": "tag",
											"source": 13,
											"value": "664"
										},
										{
											"begin": 15692,
											"end": 15722,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15681,
											"end": 15722,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15681,
											"end": 15722,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15871,
											"end": 15872,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15862,
											"end": 15869,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15858,
											"end": 15873,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 15855,
											"end": 15856,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15852,
											"end": 15874,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 15832,
											"end": 15833,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15825,
											"end": 15834,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15805,
											"end": 15888,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 15782,
											"end": 15921,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "665"
										},
										{
											"begin": 15782,
											"end": 15921,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15901,
											"end": 15919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "666"
										},
										{
											"begin": 15901,
											"end": 15919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 15901,
											"end": 15919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15901,
											"end": 15919,
											"name": "tag",
											"source": 13,
											"value": "666"
										},
										{
											"begin": 15901,
											"end": 15919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15782,
											"end": 15921,
											"name": "tag",
											"source": 13,
											"value": "665"
										},
										{
											"begin": 15782,
											"end": 15921,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15566,
											"end": 15928,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15518,
											"end": 15928,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15518,
											"end": 15928,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15518,
											"end": 15928,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15518,
											"end": 15928,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15518,
											"end": 15928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15934,
											"end": 16114,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 15934,
											"end": 16114,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15982,
											"end": 16059,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15979,
											"end": 15980,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15972,
											"end": 16060,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16079,
											"end": 16083,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 16076,
											"end": 16077,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 16069,
											"end": 16084,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16103,
											"end": 16107,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 16100,
											"end": 16101,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16093,
											"end": 16108,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 16120,
											"end": 16305,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 16120,
											"end": 16305,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16160,
											"end": 16161,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16177,
											"end": 16197,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "669"
										},
										{
											"begin": 16195,
											"end": 16196,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16177,
											"end": 16197,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 16177,
											"end": 16197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16177,
											"end": 16197,
											"name": "tag",
											"source": 13,
											"value": "669"
										},
										{
											"begin": 16177,
											"end": 16197,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16172,
											"end": 16197,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16172,
											"end": 16197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16211,
											"end": 16231,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "670"
										},
										{
											"begin": 16229,
											"end": 16230,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16211,
											"end": 16231,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 16211,
											"end": 16231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16211,
											"end": 16231,
											"name": "tag",
											"source": 13,
											"value": "670"
										},
										{
											"begin": 16211,
											"end": 16231,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16206,
											"end": 16231,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16206,
											"end": 16231,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16250,
											"end": 16251,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16240,
											"end": 16275,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "671"
										},
										{
											"begin": 16240,
											"end": 16275,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16255,
											"end": 16273,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "672"
										},
										{
											"begin": 16255,
											"end": 16273,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 16255,
											"end": 16273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16255,
											"end": 16273,
											"name": "tag",
											"source": 13,
											"value": "672"
										},
										{
											"begin": 16255,
											"end": 16273,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16240,
											"end": 16275,
											"name": "tag",
											"source": 13,
											"value": "671"
										},
										{
											"begin": 16240,
											"end": 16275,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16297,
											"end": 16298,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16294,
											"end": 16295,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16290,
											"end": 16299,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 16285,
											"end": 16299,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16285,
											"end": 16299,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16120,
											"end": 16305,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16120,
											"end": 16305,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16120,
											"end": 16305,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16120,
											"end": 16305,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16120,
											"end": 16305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16311,
											"end": 16502,
											"name": "tag",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 16311,
											"end": 16502,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16349,
											"end": 16353,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16369,
											"end": 16387,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "674"
										},
										{
											"begin": 16385,
											"end": 16386,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16369,
											"end": 16387,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 16369,
											"end": 16387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16369,
											"end": 16387,
											"name": "tag",
											"source": 13,
											"value": "674"
										},
										{
											"begin": 16369,
											"end": 16387,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16364,
											"end": 16387,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16364,
											"end": 16387,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16401,
											"end": 16419,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "675"
										},
										{
											"begin": 16417,
											"end": 16418,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16401,
											"end": 16419,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 16401,
											"end": 16419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16401,
											"end": 16419,
											"name": "tag",
											"source": 13,
											"value": "675"
										},
										{
											"begin": 16401,
											"end": 16419,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16396,
											"end": 16419,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16396,
											"end": 16419,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16443,
											"end": 16444,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16440,
											"end": 16441,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16436,
											"end": 16445,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16428,
											"end": 16445,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16428,
											"end": 16445,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16467,
											"end": 16471,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 16461,
											"end": 16465,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16458,
											"end": 16472,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 16455,
											"end": 16495,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16455,
											"end": 16495,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "676"
										},
										{
											"begin": 16455,
											"end": 16495,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16475,
											"end": 16493,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "677"
										},
										{
											"begin": 16475,
											"end": 16493,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 16475,
											"end": 16493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16475,
											"end": 16493,
											"name": "tag",
											"source": 13,
											"value": "677"
										},
										{
											"begin": 16475,
											"end": 16493,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16455,
											"end": 16495,
											"name": "tag",
											"source": 13,
											"value": "676"
										},
										{
											"begin": 16455,
											"end": 16495,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16311,
											"end": 16502,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16311,
											"end": 16502,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16311,
											"end": 16502,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16311,
											"end": 16502,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16311,
											"end": 16502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16508,
											"end": 16950,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 16508,
											"end": 16950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16657,
											"end": 16661,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16695,
											"end": 16697,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 16684,
											"end": 16693,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16680,
											"end": 16698,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16672,
											"end": 16698,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16672,
											"end": 16698,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16708,
											"end": 16779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "679"
										},
										{
											"begin": 16776,
											"end": 16777,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16765,
											"end": 16774,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16761,
											"end": 16778,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16752,
											"end": 16758,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16708,
											"end": 16779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 16708,
											"end": 16779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16708,
											"end": 16779,
											"name": "tag",
											"source": 13,
											"value": "679"
										},
										{
											"begin": 16708,
											"end": 16779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16789,
											"end": 16861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "680"
										},
										{
											"begin": 16857,
											"end": 16859,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16846,
											"end": 16855,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16842,
											"end": 16860,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16833,
											"end": 16839,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16789,
											"end": 16861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 16789,
											"end": 16861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16789,
											"end": 16861,
											"name": "tag",
											"source": 13,
											"value": "680"
										},
										{
											"begin": 16789,
											"end": 16861,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16871,
											"end": 16943,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "681"
										},
										{
											"begin": 16939,
											"end": 16941,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16928,
											"end": 16937,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16924,
											"end": 16942,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16915,
											"end": 16921,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16871,
											"end": 16943,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 16871,
											"end": 16943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16871,
											"end": 16943,
											"name": "tag",
											"source": 13,
											"value": "681"
										},
										{
											"begin": 16871,
											"end": 16943,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16508,
											"end": 16950,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 16508,
											"end": 16950,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 16508,
											"end": 16950,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16508,
											"end": 16950,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16508,
											"end": 16950,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16508,
											"end": 16950,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16508,
											"end": 16950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16956,
											"end": 17103,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 16956,
											"end": 17103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17057,
											"end": 17068,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17094,
											"end": 17097,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17079,
											"end": 17097,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17079,
											"end": 17097,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16956,
											"end": 17103,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16956,
											"end": 17103,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16956,
											"end": 17103,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16956,
											"end": 17103,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16956,
											"end": 17103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17109,
											"end": 17223,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 17109,
											"end": 17223,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17109,
											"end": 17223,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17109,
											"end": 17223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17229,
											"end": 17627,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 17229,
											"end": 17627,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17388,
											"end": 17391,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17409,
											"end": 17492,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "685"
										},
										{
											"begin": 17490,
											"end": 17491,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17485,
											"end": 17488,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17409,
											"end": 17492,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 17409,
											"end": 17492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17409,
											"end": 17492,
											"name": "tag",
											"source": 13,
											"value": "685"
										},
										{
											"begin": 17409,
											"end": 17492,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17402,
											"end": 17492,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17402,
											"end": 17492,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17501,
											"end": 17594,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "686"
										},
										{
											"begin": 17590,
											"end": 17593,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17501,
											"end": 17594,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 17501,
											"end": 17594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17501,
											"end": 17594,
											"name": "tag",
											"source": 13,
											"value": "686"
										},
										{
											"begin": 17501,
											"end": 17594,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17619,
											"end": 17620,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17614,
											"end": 17617,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17610,
											"end": 17621,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17603,
											"end": 17621,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17603,
											"end": 17621,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17229,
											"end": 17627,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17229,
											"end": 17627,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17229,
											"end": 17627,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17229,
											"end": 17627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17633,
											"end": 18012,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 17633,
											"end": 18012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17817,
											"end": 17820,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17839,
											"end": 17986,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "688"
										},
										{
											"begin": 17982,
											"end": 17985,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17839,
											"end": 17986,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 17839,
											"end": 17986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17839,
											"end": 17986,
											"name": "tag",
											"source": 13,
											"value": "688"
										},
										{
											"begin": 17839,
											"end": 17986,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17832,
											"end": 17986,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17832,
											"end": 17986,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18003,
											"end": 18006,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17996,
											"end": 18006,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17996,
											"end": 18006,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17633,
											"end": 18012,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17633,
											"end": 18012,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17633,
											"end": 18012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17633,
											"end": 18012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18018,
											"end": 18350,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 18018,
											"end": 18350,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18139,
											"end": 18143,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18177,
											"end": 18179,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 18166,
											"end": 18175,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18162,
											"end": 18180,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18154,
											"end": 18180,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18154,
											"end": 18180,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18190,
											"end": 18261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "690"
										},
										{
											"begin": 18258,
											"end": 18259,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18247,
											"end": 18256,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18243,
											"end": 18260,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18234,
											"end": 18240,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18190,
											"end": 18261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 18190,
											"end": 18261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18190,
											"end": 18261,
											"name": "tag",
											"source": 13,
											"value": "690"
										},
										{
											"begin": 18190,
											"end": 18261,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18271,
											"end": 18343,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "691"
										},
										{
											"begin": 18339,
											"end": 18341,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18328,
											"end": 18337,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18324,
											"end": 18342,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18315,
											"end": 18321,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18271,
											"end": 18343,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 18271,
											"end": 18343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18271,
											"end": 18343,
											"name": "tag",
											"source": 13,
											"value": "691"
										},
										{
											"begin": 18271,
											"end": 18343,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18018,
											"end": 18350,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 18018,
											"end": 18350,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18018,
											"end": 18350,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18018,
											"end": 18350,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18018,
											"end": 18350,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18018,
											"end": 18350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18356,
											"end": 18688,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 18356,
											"end": 18688,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18477,
											"end": 18481,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18515,
											"end": 18517,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 18504,
											"end": 18513,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18500,
											"end": 18518,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18492,
											"end": 18518,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18492,
											"end": 18518,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18528,
											"end": 18599,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "693"
										},
										{
											"begin": 18596,
											"end": 18597,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18585,
											"end": 18594,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18581,
											"end": 18598,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18572,
											"end": 18578,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18528,
											"end": 18599,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 18528,
											"end": 18599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18528,
											"end": 18599,
											"name": "tag",
											"source": 13,
											"value": "693"
										},
										{
											"begin": 18528,
											"end": 18599,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18609,
											"end": 18681,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "694"
										},
										{
											"begin": 18677,
											"end": 18679,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18666,
											"end": 18675,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18662,
											"end": 18680,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18653,
											"end": 18659,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18609,
											"end": 18681,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 18609,
											"end": 18681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18609,
											"end": 18681,
											"name": "tag",
											"source": 13,
											"value": "694"
										},
										{
											"begin": 18609,
											"end": 18681,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18356,
											"end": 18688,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 18356,
											"end": 18688,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18356,
											"end": 18688,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18356,
											"end": 18688,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18356,
											"end": 18688,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18356,
											"end": 18688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/kipu-bank-v2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"addTokenSupport(address,address)": "5ccf7ac4",
							"depositETH()": "f6326fb3",
							"depositToken(address,uint256)": "338b5dea",
							"getAvailableBankCapUSD()": "08133237",
							"getBalance(address,address)": "d4fac45d",
							"getBalanceUSD(address,address)": "e62615c6",
							"getPriceFeed(address)": "5b6cca80",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getSupportedTokens()": "d3c7c2c7",
							"getTotalDeposits(address)": "0251cfa1",
							"getTotalDepositsUSD()": "83e397b8",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"i_bankCapUSD()": "0ccee433",
							"i_withdrawalThresholdUSD()": "d15f58fb",
							"isTokenSupported(address)": "75151b63",
							"removeTokenSupport(address)": "2ba8d939",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"s_depositCount()": "cac2e25f",
							"s_withdrawalCount()": "b2343b1c",
							"supportsInterface(bytes4)": "01ffc9a7",
							"withdrawETH(uint256)": "f14210a6",
							"withdrawToken(address,uint256)": "9e281a98"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawalThresholdUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bankCapUSD\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_ethPriceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestedUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableUSD\",\"type\":\"uint256\"}],\"name\":\"KipuBank__BankCapExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"KipuBank__ETHTransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableBalance\",\"type\":\"uint256\"}],\"name\":\"KipuBank__InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"KipuBank__InvalidPriceData\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"KipuBank__TokenAlreadySupported\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"KipuBank__TokenNotSupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"KipuBank__TransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestedUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"thresholdUSD\",\"type\":\"uint256\"}],\"name\":\"KipuBank__WithdrawalThresholdExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"KipuBank__ZeroAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdValue\",\"type\":\"uint256\"}],\"name\":\"DepositMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"name\":\"TokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdValue\",\"type\":\"uint256\"}],\"name\":\"WithdrawalMade\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"name\":\"addTokenSupport\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAvailableBankCapUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getBalanceUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTotalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalDepositsUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_bankCapUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_withdrawalThresholdUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isTokenSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeTokenSupport\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_depositCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_withdrawalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"DepositMade(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"Monto en decimales nativos del token (wei para ETH).\",\"token\":\"Token depositado (address(0) = ETH).\",\"usdValue\":\"Valor equivalente en USD (18 decimales).\",\"user\":\"Cuenta que deposita.\"}},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"WithdrawalMade(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"Monto en decimales nativos del token (wei para ETH).\",\"token\":\"Token retirado (address(0) = ETH).\",\"usdValue\":\"Valor equivalente en USD (18 decimales).\",\"user\":\"Cuenta que retira.\"}}},\"kind\":\"dev\",\"methods\":{\"addTokenSupport(address,address)\":{\"params\":{\"priceFeed\":\"Direcci\\u00f3n del or\\u00e1culo TOKEN/USD (Chainlink).\",\"token\":\"Direcci\\u00f3n del token.\"}},\"constructor\":{\"params\":{\"_bankCapUSD\":\"Cap global de dep\\u00f3sitos en USD (18 decimales).\",\"_ethPriceFeed\":\"Direcci\\u00f3n del feed Chainlink ETH/USD.\",\"_withdrawalThresholdUSD\":\"Umbral por retiro en USD (18 decimales).\"}},\"depositToken(address,uint256)\":{\"params\":{\"amount\":\"Monto a depositar (en decimales nativos del token).\",\"token\":\"Direcci\\u00f3n del token ERC-20.\"}},\"getBalance(address,address)\":{\"params\":{\"token\":\"Token (address(0) = ETH).\",\"user\":\"Direcci\\u00f3n del usuario.\"}},\"getBalanceUSD(address,address)\":{\"params\":{\"token\":\"Token (address(0) = ETH).\",\"user\":\"Direcci\\u00f3n del usuario.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getTotalDeposits(address)\":{\"params\":{\"token\":\"Token.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"removeTokenSupport(address)\":{\"params\":{\"token\":\"Direcci\\u00f3n del token a deshabilitar.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"withdrawETH(uint256)\":{\"params\":{\"amount\":\"Monto en wei a retirar.\"}},\"withdrawToken(address,uint256)\":{\"params\":{\"amount\":\"Monto a retirar (en decimales nativos del token).\",\"token\":\"Direcci\\u00f3n del token.\"}}},\"stateVariables\":{\"USDC_DECIMALS\":{\"details\":\"Normalizamos saldos a 6 decimales para facilidad de sumas por token.\"},\"i_bankCapUSD\":{\"details\":\"Inmutable: se define en el constructor, no puede cambiar.\"},\"i_withdrawalThresholdUSD\":{\"details\":\"Inmutable: se define en el constructor, no puede cambiar.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"KipuBank__BankCapExceeded(uint256,uint256)\":[{\"notice\":\"Se excede el cap global del banco (en USD).\"}],\"KipuBank__ETHTransferFailed()\":[{\"notice\":\"Fall\\u00f3 el env\\u00edo de ETH nativo.\"}],\"KipuBank__InsufficientBalance(uint256,uint256)\":[{\"notice\":\"Saldo insuficiente para retirar.\"}],\"KipuBank__InvalidPriceData()\":[{\"notice\":\"El or\\u00e1culo devolvi\\u00f3 precio inv\\u00e1lido (<= 0) o datos corruptos.\"}],\"KipuBank__TokenAlreadySupported(address)\":[{\"notice\":\"Token ya estaba habilitado.\"}],\"KipuBank__TokenNotSupported(address)\":[{\"notice\":\"Token no soportado (no tiene feed configurado o es inv\\u00e1lido).\"}],\"KipuBank__TransferFailed()\":[{\"notice\":\"Transferencia fallida (gen\\u00e9rico).\"}],\"KipuBank__WithdrawalThresholdExceeded(uint256,uint256)\":[{\"notice\":\"Se excede el umbral de retiro por transacci\\u00f3n (en USD).\"}],\"KipuBank__ZeroAmount()\":[{\"notice\":\"Monto igual a cero.\"}]},\"events\":{\"DepositMade(address,address,uint256,uint256)\":{\"notice\":\"Se emite cuando un usuario deposita.\"},\"TokenAdded(address,address)\":{\"notice\":\"Se emite al habilitar un token ERC-20.\"},\"TokenRemoved(address)\":{\"notice\":\"Se emite al deshabilitar un token ERC-20.\"},\"WithdrawalMade(address,address,uint256,uint256)\":{\"notice\":\"Se emite cuando un usuario retira.\"}},\"kind\":\"user\",\"methods\":{\"ADMIN_ROLE()\":{\"notice\":\"Rol de administrador: puede agregar/quitar tokens y administrar par\\u00e1metros.\"},\"addTokenSupport(address,address)\":{\"notice\":\"Habilita soporte para un nuevo token ERC-20.\"},\"constructor\":{\"notice\":\"Inicializa el banco con umbral de retiro y cap global en USD.\"},\"depositETH()\":{\"notice\":\"Deposita ETH nativo (address(0)).\"},\"depositToken(address,uint256)\":{\"notice\":\"Deposita un token ERC-20 habilitado.\"},\"getAvailableBankCapUSD()\":{\"notice\":\"Devuelve la capacidad disponible del banco en USD(18) (cap - total actual).\"},\"getBalance(address,address)\":{\"notice\":\"Devuelve el saldo del usuario en decimales nativos del token.\"},\"getBalanceUSD(address,address)\":{\"notice\":\"Devuelve el saldo del usuario en USD(18).\"},\"getPriceFeed(address)\":{\"notice\":\"Devuelve la direcci\\u00f3n del or\\u00e1culo TOKEN/USD para un token.\"},\"getSupportedTokens()\":{\"notice\":\"Lista de tokens soportados actualmente (incluye ETH).\"},\"getTotalDeposits(address)\":{\"notice\":\"Devuelve el total depositado para un token (en decimales nativos).\"},\"getTotalDepositsUSD()\":{\"notice\":\"Devuelve el total global de dep\\u00f3sitos en USD(18) sumando todos los tokens.\"},\"i_bankCapUSD()\":{\"notice\":\"Tope (cap) global del banco en USD (18 decimales). Suma total de dep\\u00f3sitos.\"},\"i_withdrawalThresholdUSD()\":{\"notice\":\"Umbral m\\u00e1ximo de retiro por transacci\\u00f3n en USD (18 decimales).\"},\"isTokenSupported(address)\":{\"notice\":\"Indica si un token est\\u00e1 soportado (tiene or\\u00e1culo configurado).\"},\"removeTokenSupport(address)\":{\"notice\":\"Deshabilita un token (debe no tener dep\\u00f3sitos pendientes).\"},\"s_depositCount()\":{\"notice\":\"M\\u00e9tricas: n\\u00famero total de dep\\u00f3sitos realizados.\"},\"s_withdrawalCount()\":{\"notice\":\"M\\u00e9tricas: n\\u00famero total de retiros realizados.\"},\"withdrawETH(uint256)\":{\"notice\":\"Retira ETH de tu saldo.\"},\"withdrawToken(address,uint256)\":{\"notice\":\"Retira tokens ERC-20 de tu saldo.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/kipu-bank-v2.sol\":\"KipuBankV2\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"src/kipu-bank-v2.sol\":{\"keccak256\":\"0xb4214e609258dd74bf974f1d0970d949f5b5f615fc1fa9b76fbc25df34d7c410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://600bc0d80a4ad7c17080b1f4cdd00d6d81436d11278e64bb9c9a1730eba178d5\",\"dweb:/ipfs/QmVb4atgmsD7BgBAc82kGcoBBsYQqGKGDrVeYu9uD3DACs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 73,
								"contract": "src/kipu-bank-v2.sol:KipuBankV2",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)68_storage)"
							},
							{
								"astId": 1098,
								"contract": "src/kipu-bank-v2.sol:KipuBankV2",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1241,
								"contract": "src/kipu-bank-v2.sol:KipuBankV2",
								"label": "s_deposits",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1246,
								"contract": "src/kipu-bank-v2.sol:KipuBankV2",
								"label": "s_totalDeposits",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1252,
								"contract": "src/kipu-bank-v2.sol:KipuBankV2",
								"label": "s_priceFeeds",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_contract(AggregatorV3Interface)45)"
							},
							{
								"astId": 1256,
								"contract": "src/kipu-bank-v2.sol:KipuBankV2",
								"label": "s_supportedTokens",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1259,
								"contract": "src/kipu-bank-v2.sol:KipuBankV2",
								"label": "s_depositCount",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1262,
								"contract": "src/kipu-bank-v2.sol:KipuBankV2",
								"label": "s_withdrawalCount",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_contract(AggregatorV3Interface)45)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => contract AggregatorV3Interface)",
								"numberOfBytes": "32",
								"value": "t_contract(AggregatorV3Interface)45"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)68_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)68_storage"
							},
							"t_struct(RoleData)68_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 65,
										"contract": "src/kipu-bank-v2.sol:KipuBankV2",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 67,
										"contract": "src/kipu-bank-v2.sol:KipuBankV2",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"KipuBank__BankCapExceeded(uint256,uint256)": [
								{
									"notice": "Se excede el cap global del banco (en USD)."
								}
							],
							"KipuBank__ETHTransferFailed()": [
								{
									"notice": "Falló el envío de ETH nativo."
								}
							],
							"KipuBank__InsufficientBalance(uint256,uint256)": [
								{
									"notice": "Saldo insuficiente para retirar."
								}
							],
							"KipuBank__InvalidPriceData()": [
								{
									"notice": "El oráculo devolvió precio inválido (<= 0) o datos corruptos."
								}
							],
							"KipuBank__TokenAlreadySupported(address)": [
								{
									"notice": "Token ya estaba habilitado."
								}
							],
							"KipuBank__TokenNotSupported(address)": [
								{
									"notice": "Token no soportado (no tiene feed configurado o es inválido)."
								}
							],
							"KipuBank__TransferFailed()": [
								{
									"notice": "Transferencia fallida (genérico)."
								}
							],
							"KipuBank__WithdrawalThresholdExceeded(uint256,uint256)": [
								{
									"notice": "Se excede el umbral de retiro por transacción (en USD)."
								}
							],
							"KipuBank__ZeroAmount()": [
								{
									"notice": "Monto igual a cero."
								}
							]
						},
						"events": {
							"DepositMade(address,address,uint256,uint256)": {
								"notice": "Se emite cuando un usuario deposita."
							},
							"TokenAdded(address,address)": {
								"notice": "Se emite al habilitar un token ERC-20."
							},
							"TokenRemoved(address)": {
								"notice": "Se emite al deshabilitar un token ERC-20."
							},
							"WithdrawalMade(address,address,uint256,uint256)": {
								"notice": "Se emite cuando un usuario retira."
							}
						},
						"kind": "user",
						"methods": {
							"ADMIN_ROLE()": {
								"notice": "Rol de administrador: puede agregar/quitar tokens y administrar parámetros."
							},
							"addTokenSupport(address,address)": {
								"notice": "Habilita soporte para un nuevo token ERC-20."
							},
							"constructor": {
								"notice": "Inicializa el banco con umbral de retiro y cap global en USD."
							},
							"depositETH()": {
								"notice": "Deposita ETH nativo (address(0))."
							},
							"depositToken(address,uint256)": {
								"notice": "Deposita un token ERC-20 habilitado."
							},
							"getAvailableBankCapUSD()": {
								"notice": "Devuelve la capacidad disponible del banco en USD(18) (cap - total actual)."
							},
							"getBalance(address,address)": {
								"notice": "Devuelve el saldo del usuario en decimales nativos del token."
							},
							"getBalanceUSD(address,address)": {
								"notice": "Devuelve el saldo del usuario en USD(18)."
							},
							"getPriceFeed(address)": {
								"notice": "Devuelve la dirección del oráculo TOKEN/USD para un token."
							},
							"getSupportedTokens()": {
								"notice": "Lista de tokens soportados actualmente (incluye ETH)."
							},
							"getTotalDeposits(address)": {
								"notice": "Devuelve el total depositado para un token (en decimales nativos)."
							},
							"getTotalDepositsUSD()": {
								"notice": "Devuelve el total global de depósitos en USD(18) sumando todos los tokens."
							},
							"i_bankCapUSD()": {
								"notice": "Tope (cap) global del banco en USD (18 decimales). Suma total de depósitos."
							},
							"i_withdrawalThresholdUSD()": {
								"notice": "Umbral máximo de retiro por transacción en USD (18 decimales)."
							},
							"isTokenSupported(address)": {
								"notice": "Indica si un token está soportado (tiene oráculo configurado)."
							},
							"removeTokenSupport(address)": {
								"notice": "Deshabilita un token (debe no tener depósitos pendientes)."
							},
							"s_depositCount()": {
								"notice": "Métricas: número total de depósitos realizados."
							},
							"s_withdrawalCount()": {
								"notice": "Métricas: número total de retiros realizados."
							},
							"withdrawETH(uint256)": {
								"notice": "Retira ETH de tu saldo."
							},
							"withdrawToken(address,uint256)": {
								"notice": "Retira tokens ERC-20 de tu saldo."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "294:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "337:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "368:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "387:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:0"
									},
									"scope": 45,
									"src": "267:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "527:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "546:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:0"
									},
									"scope": 45,
									"src": "434:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							342
						],
						"Context": [
							1087
						],
						"ERC165": [
							1180
						],
						"IAccessControl": [
							425
						],
						"IERC165": [
							1192
						]
					},
					"id": 343,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 426,
							"src": "134:52:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 48,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 425,
										"src": "142:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 51,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 1088,
							"src": "187:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 50,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1087,
										"src": "195:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 54,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 1181,
							"src": "233:66:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 52,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1192,
										"src": "241:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 53,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1180,
										"src": "250:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 56,
										"name": "Context",
										"nameLocations": [
											"1997:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1087,
										"src": "1997:7:1"
									},
									"id": 57,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:7:1"
								},
								{
									"baseName": {
										"id": 58,
										"name": "IAccessControl",
										"nameLocations": [
											"2006:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 425,
										"src": "2006:14:1"
									},
									"id": 59,
									"nodeType": "InheritanceSpecifier",
									"src": "2006:14:1"
								},
								{
									"baseName": {
										"id": 60,
										"name": "ERC165",
										"nameLocations": [
											"2022:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1180,
										"src": "2022:6:1"
									},
									"id": 61,
									"nodeType": "InheritanceSpecifier",
									"src": "2022:6:1"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 55,
								"nodeType": "StructuredDocumentation",
								"src": "301:1660:1",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 342,
							"linearizedBaseContracts": [
								342,
								1180,
								1192,
								425,
								1087
							],
							"name": "AccessControl",
							"nameLocation": "1980:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 68,
									"members": [
										{
											"constant": false,
											"id": 65,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2094:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 68,
											"src": "2061:40:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 64,
												"keyName": "account",
												"keyNameLocation": "2077:7:1",
												"keyType": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2061:32:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 63,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2088:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 67,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2119:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 68,
											"src": "2111:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 66,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2111:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2042:8:1",
									"nodeType": "StructDefinition",
									"scope": 342,
									"src": "2035:100:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 73,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2183:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "2141:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 72,
										"keyName": "role",
										"keyNameLocation": "2157:4:1",
										"keyType": {
											"id": 69,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2149:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2141:33:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 71,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 70,
												"name": "RoleData",
												"nameLocations": [
													"2165:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 68,
												"src": "2165:8:1"
											},
											"referencedDeclaration": 68,
											"src": "2165:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$68_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 76,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2220:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "2196:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 74,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2196:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 75,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2241:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2463:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 82,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "2484:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 81,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															140,
															161
														],
														"referencedDeclaration": 140,
														"src": "2473:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "2473:16:1"
											},
											{
												"id": 85,
												"nodeType": "PlaceholderStatement",
												"src": "2499:1:1"
											}
										]
									},
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "2252:174:1",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 87,
									"name": "onlyRole",
									"nameLocation": "2440:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2457:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2449:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 78,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:14:1"
									},
									"src": "2431:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1179
									],
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "2632:111:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 96,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2649:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 98,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "2669:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$425_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$425_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 97,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2664:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2664:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$425",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2685:11:1",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2664:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2649:47:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 104,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "2724:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 102,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2700:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$342_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2706:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1179,
															"src": "2700:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2700:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2649:87:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 95,
												"id": 107,
												"nodeType": "Return",
												"src": "2642:94:1"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "2513:23:1",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2550:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 92,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2608:8:1"
									},
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2575:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "2568:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 89,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2567:20:1"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "2626:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 93,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2626:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:6:1"
									},
									"scope": 342,
									"src": "2541:202:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										392
									],
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "2913:53:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 119,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "2930:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 121,
															"indexExpression": {
																"id": 120,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "2937:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2930:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$68_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2943:7:1",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 65,
														"src": "2930:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 124,
													"indexExpression": {
														"id": 123,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "2951:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2930:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 118,
												"id": 125,
												"nodeType": "Return",
												"src": "2923:36:1"
											}
										]
									},
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "2749:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2839:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2855:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "2847:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 111,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2869:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "2861:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:31:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "2907:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 116,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2907:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2906:6:1"
									},
									"scope": 342,
									"src": "2830:136:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "3231:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 134,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "3252:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 135,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "3258:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 133,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															140,
															161
														],
														"referencedDeclaration": 161,
														"src": "3241:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "3241:30:1"
											}
										]
									},
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "2972:198:1",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3184:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3203:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "3195:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 129,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3194:14:1"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:1"
									},
									"scope": 342,
									"src": "3175:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "3481:124:1",
										"statements": [
											{
												"condition": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3495:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 149,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "3504:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 150,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "3510:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 148,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "3496:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3496:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 159,
												"nodeType": "IfStatement",
												"src": "3491:108:1",
												"trueBody": {
													"id": 158,
													"nodeType": "Block",
													"src": "3520:79:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 154,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "3574:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 155,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "3583:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 153,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "3541:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3541:47:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 157,
															"nodeType": "RevertStatement",
															"src": "3534:54:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "3284:119:1",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3417:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3436:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "3428:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 142,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3450:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "3442:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3427:31:1"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3481:0:1"
									},
									"scope": 342,
									"src": "3408:197:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										400
									],
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "3860:46:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 169,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "3877:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 171,
														"indexExpression": {
															"id": 170,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "3884:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3877:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$68_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3890:9:1",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 67,
													"src": "3877:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 168,
												"id": 173,
												"nodeType": "Return",
												"src": "3870:29:1"
											}
										]
									},
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "3611:170:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3795:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3816:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "3808:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 163,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:14:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "3851:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 166,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:9:1"
									},
									"scope": 342,
									"src": "3786:120:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										408
									],
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "4296:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 189,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "4317:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 190,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "4323:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 188,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "4306:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4306:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "4306:25:1"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "3912:285:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "4289:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 183,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "4276:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 186,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 182,
												"name": "onlyRole",
												"nameLocations": [
													"4267:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 87,
												"src": "4267:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4267:28:1"
										}
									],
									"name": "grantRole",
									"nameLocation": "4211:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4229:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "4221:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 177,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "4235:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4235:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:31:1"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:0:1"
									},
									"scope": 342,
									"src": "4202:136:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										416
									],
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "4713:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 208,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "4735:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 209,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "4741:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 207,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "4723:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4723:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "4723:26:1"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "4344:269:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 203,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 202,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "4693:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4693:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 205,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 201,
												"name": "onlyRole",
												"nameLocations": [
													"4684:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 87,
												"src": "4684:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4684:28:1"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4627:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4646:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "4638:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 196,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "4652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:31:1"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4713:0:1"
									},
									"scope": 342,
									"src": "4618:138:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										424
									],
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "5383:166:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 221,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "5397:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 222,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "5419:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5419:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5397:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 229,
												"nodeType": "IfStatement",
												"src": "5393:102:1",
												"trueBody": {
													"id": 228,
													"nodeType": "Block",
													"src": "5433:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 225,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "5454:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5454:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 227,
															"nodeType": "RevertStatement",
															"src": "5447:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 231,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "5517:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 232,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "5523:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 230,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "5505:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "5505:37:1"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "4762:537:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5313:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5334:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5326:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5348:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5340:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5325:42:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:1"
									},
									"scope": 342,
									"src": "5304:245:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "5747:174:1",
										"statements": [
											{
												"assignments": [
													245
												],
												"declarations": [
													{
														"constant": false,
														"id": 245,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5765:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "5757:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 244,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5757:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"arguments": [
														{
															"id": 247,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "5798:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 246,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "5785:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5785:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5757:46:1"
											},
											{
												"expression": {
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 250,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "5813:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 252,
															"indexExpression": {
																"id": 251,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 239,
																"src": "5820:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5813:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$68_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5826:9:1",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 67,
														"src": "5813:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 254,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "5838:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5813:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "5813:34:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 258,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "5879:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 259,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "5885:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 260,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "5904:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 257,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "5862:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5862:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 262,
												"nodeType": "EmitStatement",
												"src": "5857:57:1"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "5555:114:1",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5683:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5705:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "5697:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 238,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5719:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "5711:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 240,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5711:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:33:1"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5747:0:1"
									},
									"scope": 342,
									"src": "5674:247:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "6238:233:1",
										"statements": [
											{
												"condition": {
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6252:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 275,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "6261:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 276,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "6267:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 274,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "6253:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6253:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 300,
													"nodeType": "Block",
													"src": "6428:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6449:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 273,
															"id": 299,
															"nodeType": "Return",
															"src": "6442:12:1"
														}
													]
												},
												"id": 301,
												"nodeType": "IfStatement",
												"src": "6248:217:1",
												"trueBody": {
													"id": 297,
													"nodeType": "Block",
													"src": "6277:145:1",
													"statements": [
														{
															"expression": {
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 279,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 73,
																				"src": "6291:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 281,
																			"indexExpression": {
																				"id": 280,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 267,
																				"src": "6298:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6291:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$68_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 282,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6304:7:1",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 65,
																		"src": "6291:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 284,
																	"indexExpression": {
																		"id": 283,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "6312:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6291:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6323:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6291:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 287,
															"nodeType": "ExpressionStatement",
															"src": "6291:36:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 289,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "6358:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 290,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "6364:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 291,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1069,
																			"src": "6373:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 288,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "6346:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6346:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 294,
															"nodeType": "EmitStatement",
															"src": "6341:45:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6407:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 273,
															"id": 296,
															"nodeType": "Return",
															"src": "6400:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "5927:223:1",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6164:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6183:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "6175:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 266,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6175:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6197:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "6189:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6189:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6174:31:1"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "6232:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6232:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:6:1"
									},
									"scope": 342,
									"src": "6155:316:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "6792:233:1",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 314,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "6814:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 315,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "6820:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 313,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "6806:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6806:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 338,
													"nodeType": "Block",
													"src": "6982:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7003:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 312,
															"id": 337,
															"nodeType": "Return",
															"src": "6996:12:1"
														}
													]
												},
												"id": 339,
												"nodeType": "IfStatement",
												"src": "6802:217:1",
												"trueBody": {
													"id": 335,
													"nodeType": "Block",
													"src": "6830:146:1",
													"statements": [
														{
															"expression": {
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 317,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 73,
																				"src": "6844:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 319,
																			"indexExpression": {
																				"id": 318,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 306,
																				"src": "6851:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6844:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$68_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 320,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6857:7:1",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 65,
																		"src": "6844:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 322,
																	"indexExpression": {
																		"id": 321,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "6865:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6844:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6876:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6844:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 325,
															"nodeType": "ExpressionStatement",
															"src": "6844:37:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 327,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "6912:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 328,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "6918:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 329,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1069,
																			"src": "6927:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6927:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 326,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "6900:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6900:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 332,
															"nodeType": "EmitStatement",
															"src": "6895:45:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6961:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 312,
															"id": 334,
															"nodeType": "Return",
															"src": "6954:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "6477:226:1",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6717:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6737:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "6729:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 305,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6751:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "6743:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6743:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:31:1"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "6786:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6786:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6785:6:1"
									},
									"scope": 342,
									"src": "6708:317:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 343,
							"src": "1962:5065:1",
							"usedErrors": [
								352,
								355
							],
							"usedEvents": [
								364,
								373,
								382
							]
						}
					],
					"src": "108:6920:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							425
						]
					},
					"id": 426,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 344,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 345,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:2",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 425,
							"linearizedBaseContracts": [
								425
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:2",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 352,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "357:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "374:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 349,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:2"
									},
									"src": "318:76:2"
								},
								{
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:2",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 355,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:2"
									},
									"src": "553:37:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:2",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 364,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "878:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 357,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "900:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 359,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "935:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 361,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:2"
									},
									"src": "855:110:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:2",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 373,
									"name": "RoleGranted",
									"nameLocation": "1277:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "1289:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 366,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "1311:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "1336:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:2"
									},
									"src": "1271:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:2",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 382,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1664:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 375,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1686:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1711:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:2"
									},
									"src": "1646:89:2"
								},
								{
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:2",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1839:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 384,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1853:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:2"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1893:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 389,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:2"
									},
									"scope": 425,
									"src": "1822:77:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:2",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "2116:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 394,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:2"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "2153:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 397,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:2"
									},
									"scope": 425,
									"src": "2094:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:2",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "2431:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 402,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "2445:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:2"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:2"
									},
									"scope": 425,
									"src": "2412:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:2",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 416,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "2725:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 410,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "2739:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:2"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:2"
									},
									"scope": 425,
									"src": "2705:60:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:2",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 424,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "3289:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 418,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "3303:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:2"
									},
									"scope": 425,
									"src": "3267:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 426,
							"src": "226:3116:2",
							"usedErrors": [
								352,
								355
							],
							"usedEvents": [
								364,
								373,
								382
							]
						}
					],
					"src": "109:3234:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							507
						],
						"IERC165": [
							1192
						],
						"IERC20": [
							593
						]
					},
					"id": 508,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 427,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 429,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 508,
							"sourceUnit": 516,
							"src": "133:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 428,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 593,
										"src": "141:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 431,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 508,
							"sourceUnit": 512,
							"src": "170:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 430,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1192,
										"src": "178:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 433,
										"name": "IERC20",
										"nameLocations": [
											"590:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 593,
										"src": "590:6:3"
									},
									"id": 434,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:3"
								},
								{
									"baseName": {
										"id": 435,
										"name": "IERC165",
										"nameLocations": [
											"598:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1192,
										"src": "598:7:3"
									},
									"id": 436,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:3"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 432,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:3",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 507,
							"linearizedBaseContracts": [
								507,
								1192,
								593
							],
							"name": "IERC1363",
							"nameLocation": "578:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 446,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1548:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1560:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:3"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1593:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 443,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:3"
									},
									"scope": 507,
									"src": "1523:76:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 458,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2088:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2100:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2115:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 452,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:3"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2154:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 455,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:3"
									},
									"scope": 507,
									"src": "2063:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2653:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2667:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2679:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2712:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 467,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:3"
									},
									"scope": 507,
									"src": "2624:94:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3294:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3308:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3320:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3335:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3374:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:3"
									},
									"scope": 507,
									"src": "3265:115:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 494,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3805:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3822:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:3"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3855:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 491,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:3"
									},
									"scope": 507,
									"src": "3781:80:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 506,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "4374:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "4391:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "4406:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 500,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:3"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "4445:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 503,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:3"
									},
									"scope": 507,
									"src": "4350:101:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 508,
							"src": "568:3885:3",
							"usedErrors": [],
							"usedEvents": [
								527,
								536
							]
						}
					],
					"src": "107:4347:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1192
						]
					},
					"id": 512,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 509,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 511,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 512,
							"sourceUnit": 1193,
							"src": "133:59:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 510,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1192,
										"src": "141:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							593
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 513,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 515,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 516,
							"sourceUnit": 594,
							"src": "132:49:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 514,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 593,
										"src": "140:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							593
						]
					},
					"id": 594,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 518,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:6",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 593,
							"linearizedBaseContracts": [
								593
							],
							"name": "IERC20",
							"nameLocation": "215:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 527,
									"name": "Transfer",
									"nameLocation": "397:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "406:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "428:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "448:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:6"
									},
									"src": "391:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 536,
									"name": "Approval",
									"nameLocation": "628:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "637:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "660:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "685:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:6"
									},
									"src": "622:78:6"
								},
								{
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 542,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:6"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "822:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:6"
									},
									"scope": 593,
									"src": "776:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 550,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "932:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:6"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "972:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:6"
									},
									"scope": 593,
									"src": "913:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "1223:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "1235:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:6"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "1268:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 557,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:6"
									},
									"scope": 593,
									"src": "1205:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 570,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "1568:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "1583:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:6"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "1623:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:6"
									},
									"scope": 593,
									"src": "1549:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 580,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2327:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2344:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:6"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2377:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:6"
									},
									"scope": 593,
									"src": "2310:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 592,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "2713:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "2727:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "2739:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:6"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "2772:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 589,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:6"
									},
									"scope": 593,
									"src": "2691:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 594,
							"src": "205:2575:6",
							"usedErrors": [],
							"usedEvents": [
								527,
								536
							]
						}
					],
					"src": "106:2675:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							507
						],
						"IERC20": [
							593
						],
						"SafeERC20": [
							1057
						]
					},
					"id": 1058,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 595,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 597,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1058,
							"sourceUnit": 594,
							"src": "141:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 596,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 593,
										"src": "149:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 599,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1058,
							"sourceUnit": 508,
							"src": "179:58:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 598,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 507,
										"src": "187:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 600,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1057,
							"linearizedBaseContracts": [
								1057
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:7",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 605,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "823:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:7"
									},
									"src": "792:46:7"
								},
								{
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:7",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 614,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "959:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "976:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "1002:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:7"
									},
									"src": "920:109:7"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "1291:88:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 626,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "1321:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$593",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 629,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 618,
																		"src": "1343:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$593",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 560,
																	"src": "1343:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 631,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 620,
																			"src": "1360:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 632,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 622,
																			"src": "1364:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 633,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 627,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$593",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 625,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "1301:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$593_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:7"
											}
										]
									},
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:7",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "1241:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$593",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 617,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 616,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 593,
														"src": "1241:6:7"
													},
													"referencedDeclaration": 593,
													"src": "1241:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$593",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "1255:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "1267:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:7"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:7"
									},
									"scope": 1057,
									"src": "1219:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "1708:98:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 652,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "1738:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$593",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 655,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 642,
																		"src": "1760:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$593",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 592,
																	"src": "1760:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 657,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "1781:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 658,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 646,
																			"src": "1787:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 659,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "1791:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 660,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 653,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$593",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 651,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "1718:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$593_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:7"
											}
										]
									},
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:7",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "1644:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$593",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 641,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 640,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 593,
														"src": "1644:6:7"
													},
													"referencedDeclaration": 593,
													"src": "1644:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$593",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "1658:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "1672:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "1684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:7"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:7"
									},
									"scope": 1057,
									"src": "1618:188:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "2033:99:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 679,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "2074:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$593",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 682,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "2096:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$593",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 560,
																	"src": "2096:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 684,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 671,
																			"src": "2113:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 685,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 673,
																			"src": "2117:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 686,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 680,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$593",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 678,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "2050:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$593_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 677,
												"id": 689,
												"nodeType": "Return",
												"src": "2043:82:7"
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:7",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "1968:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$593",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 668,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 667,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 593,
														"src": "1968:6:7"
													},
													"referencedDeclaration": 593,
													"src": "1968:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$593",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "1982:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "1994:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:7"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "2027:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 675,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:7"
									},
									"scope": 1057,
									"src": "1943:189:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "2381:109:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 707,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "2422:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$593",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 710,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "2444:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$593",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 592,
																	"src": "2444:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 712,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 697,
																			"src": "2465:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 713,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 699,
																			"src": "2471:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 714,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 701,
																			"src": "2475:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 715,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 708,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$593",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 706,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "2398:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$593_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 705,
												"id": 718,
												"nodeType": "Return",
												"src": "2391:92:7"
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:7",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "2302:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$593",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 694,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 693,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 593,
														"src": "2302:6:7"
													},
													"referencedDeclaration": 593,
													"src": "2302:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$593",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "2316:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "2330:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "2342:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:7"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "2375:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 703,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:7"
									},
									"scope": 1057,
									"src": "2273:217:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "3232:139:7",
										"statements": [
											{
												"assignments": [
													732
												],
												"declarations": [
													{
														"constant": false,
														"id": 732,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 750,
														"src": "3242:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 731,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 741,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 737,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1057",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1057",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 735,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 739,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "3296:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 733,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "3265:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$593",
																"typeString": "contract IERC20"
															}
														},
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:7",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 570,
														"src": "3265:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 743,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "3327:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$593",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 744,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "3334:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 745,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 732,
																"src": "3343:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 746,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "3358:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$593",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 742,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "3314:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$593_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 749,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:7"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:7",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "3177:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$593",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 723,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 722,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 593,
														"src": "3177:6:7"
													},
													"referencedDeclaration": 593,
													"src": "3177:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$593",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "3191:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "3208:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:7"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:7"
									},
									"scope": 1057,
									"src": "3146:225:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "4137:370:7",
										"statements": [
											{
												"id": 792,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:7",
												"statements": [
													{
														"assignments": [
															763
														],
														"declarations": [
															{
																"constant": false,
																"id": 763,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:7",
																"nodeType": "VariableDeclaration",
																"scope": 792,
																"src": "4171:24:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 762,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 772,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 768,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1057",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1057",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 766,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 770,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "4229:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 764,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "4198:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$593",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:7",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 570,
																"src": "4198:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 773,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "4255:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 774,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "4274:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 783,
														"nodeType": "IfStatement",
														"src": "4251:160:7",
														"trueBody": {
															"id": 782,
															"nodeType": "Block",
															"src": "4293:118:7",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 777,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 757,
																				"src": "4351:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 778,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "4360:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 779,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 759,
																				"src": "4378:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 776,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 614,
																			"src": "4318:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 781,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 785,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "4437:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$593",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 786,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "4444:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 787,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 763,
																		"src": "4453:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 788,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "4472:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$593",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 784,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 841,
																"src": "4424:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$593_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 791,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:7",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "4070:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$593",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 754,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 753,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 593,
														"src": "4070:6:7"
													},
													"referencedDeclaration": 593,
													"src": "4070:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$593",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "4084:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "4101:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:7"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:7"
									},
									"scope": 1057,
									"src": "4039:468:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "5161:303:7",
										"statements": [
											{
												"assignments": [
													806
												],
												"declarations": [
													{
														"constant": false,
														"id": 806,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 840,
														"src": "5171:25:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 805,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 809,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "5214:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$593",
																	"typeString": "contract IERC20"
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:7",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 580,
															"src": "5214:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 811,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "5230:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 812,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5239:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 813,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 807,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:7",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:7"
											},
											{
												"condition": {
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:7",
													"subExpression": {
														"arguments": [
															{
																"id": 817,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "5286:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$593",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 818,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "5293:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$593",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 816,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "5262:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$593_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 839,
												"nodeType": "IfStatement",
												"src": "5257:201:7",
												"trueBody": {
													"id": 838,
													"nodeType": "Block",
													"src": "5308:150:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 822,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "5342:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$593",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 825,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "5364:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$593",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 826,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:7",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 580,
																				"src": "5364:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 827,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 800,
																						"src": "5380:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 828,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 829,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 823,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:7",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$593",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 821,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "5322:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$593_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 832,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 834,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "5427:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$593",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 835,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 806,
																		"src": "5434:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$593",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 833,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "5407:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$593_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 837,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:7",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "5106:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$593",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 797,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 796,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 593,
														"src": "5106:6:7"
													},
													"referencedDeclaration": 593,
													"src": "5106:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$593",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "5120:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "5137:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:7"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:7"
									},
									"scope": 1057,
									"src": "5084:380:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "5911:219:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 854,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 847,
																"src": "5925:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 868,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "6034:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 869,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 849,
																	"src": "6038:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 870,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "6045:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 866,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "6012:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$507",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:7",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 458,
																"src": "6012:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 881,
													"nodeType": "IfStatement",
													"src": "6007:117:7",
													"trueBody": {
														"id": 880,
														"nodeType": "Block",
														"src": "6052:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 876,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 845,
																					"src": "6106:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$507",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$507",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 875,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 874,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 873,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "6073:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 879,
																"nodeType": "RevertStatement",
																"src": "6066:47:7"
															}
														]
													}
												},
												"id": 882,
												"nodeType": "IfStatement",
												"src": "5921:203:7",
												"trueBody": {
													"id": 865,
													"nodeType": "Block",
													"src": "5946:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 860,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 845,
																		"src": "5973:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$507",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 861,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 847,
																		"src": "5980:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 862,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 849,
																		"src": "5984:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$507",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 859,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "5960:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$593_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 864,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:7",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "5840:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$507",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 844,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 843,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 507,
														"src": "5840:8:7"
													},
													"referencedDeclaration": 507,
													"src": "5840:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$507",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "5856:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "5868:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "5883:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 850,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:7"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:7"
									},
									"scope": 1057,
									"src": "5808:322:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 930,
										"nodeType": "Block",
										"src": "6649:239:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 899,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "6663:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 901,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 902,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 914,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "6786:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 915,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 892,
																	"src": "6792:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 916,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "6796:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 917,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 896,
																	"src": "6803:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 912,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "6760:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$507",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:7",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 484,
																"src": "6760:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 928,
													"nodeType": "IfStatement",
													"src": "6755:127:7",
													"trueBody": {
														"id": 927,
														"nodeType": "Block",
														"src": "6810:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 923,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 888,
																					"src": "6864:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$507",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$507",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 922,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 921,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 920,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "6831:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 926,
																"nodeType": "RevertStatement",
																"src": "6824:47:7"
															}
														]
													}
												},
												"id": 929,
												"nodeType": "IfStatement",
												"src": "6659:223:7",
												"trueBody": {
													"id": 911,
													"nodeType": "Block",
													"src": "6684:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 905,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 888,
																		"src": "6715:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$507",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 906,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 890,
																		"src": "6722:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 907,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 892,
																		"src": "6728:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 908,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 894,
																		"src": "6732:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$507",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 904,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "6698:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$593_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 910,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:7",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "6527:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$507",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 887,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 886,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 507,
														"src": "6527:8:7"
													},
													"referencedDeclaration": 507,
													"src": "6527:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$507",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "6551:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "6573:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "6593:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "6616:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 895,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:7"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:7"
									},
									"scope": 1057,
									"src": "6482:406:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "7655:218:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 944,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 937,
																"src": "7669:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 947,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 958,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 937,
																	"src": "7777:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 959,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 939,
																	"src": "7781:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 960,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "7788:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 956,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 935,
																	"src": "7756:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$507",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:7",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 506,
																"src": "7756:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 971,
													"nodeType": "IfStatement",
													"src": "7751:116:7",
													"trueBody": {
														"id": 970,
														"nodeType": "Block",
														"src": "7795:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 966,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 935,
																					"src": "7849:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$507",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$507",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 965,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 964,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 967,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 963,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "7816:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 969,
																"nodeType": "RevertStatement",
																"src": "7809:47:7"
															}
														]
													}
												},
												"id": 972,
												"nodeType": "IfStatement",
												"src": "7665:202:7",
												"trueBody": {
													"id": 955,
													"nodeType": "Block",
													"src": "7690:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 950,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 935,
																		"src": "7717:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$507",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 951,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "7724:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 952,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "7728:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$507",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 949,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 841,
																	"src": "7704:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$593_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 954,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:7",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "7584:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$507",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 934,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 933,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 507,
														"src": "7584:8:7"
													},
													"referencedDeclaration": 507,
													"src": "7584:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$507",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "7600:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "7612:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "7627:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 940,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:7"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:7"
									},
									"scope": 1057,
									"src": "7553:320:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "8440:650:7",
										"statements": [
											{
												"assignments": [
													984
												],
												"declarations": [
													{
														"constant": false,
														"id": 984,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1014,
														"src": "8450:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 983,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 985,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:7"
											},
											{
												"assignments": [
													987
												],
												"declarations": [
													{
														"constant": false,
														"id": 987,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1014,
														"src": "8478:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 986,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 988,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:7"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:7",
													"nodeType": "YulBlock",
													"src": "8532:396:7",
													"statements": [
														{
															"nativeSrc": "8546:75:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:7"
																		},
																		"nativeSrc": "8566:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:7",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:7"
																		},
																		"nativeSrc": "8583:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:7"
																		},
																		"nativeSrc": "8600:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:7"
																},
																"nativeSrc": "8561:60:7",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:7"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:7",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:7",
																"nodeType": "YulBlock",
																"src": "8682:157:7",
																"statements": [
																	{
																		"nativeSrc": "8700:22:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:7",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:7"
																			},
																			"nativeSrc": "8711:11:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:7"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:7",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:7"
																					},
																					"nativeSrc": "8762:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:7"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:7",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:7"
																			},
																			"nativeSrc": "8739:40:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:7"
																		},
																		"nativeSrc": "8739:40:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:7"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:7"
																					},
																					"nativeSrc": "8808:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:7"
																			},
																			"nativeSrc": "8796:29:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:7"
																		},
																		"nativeSrc": "8796:29:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:7"
																},
																"nativeSrc": "8666:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:7"
															},
															"nativeSrc": "8663:176:7",
															"nodeType": "YulIf",
															"src": "8663:176:7"
														},
														{
															"nativeSrc": "8852:30:7",
															"nodeType": "YulAssignment",
															"src": "8852:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:7"
																},
																"nativeSrc": "8866:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:7"
																}
															]
														},
														{
															"nativeSrc": "8895:23:7",
															"nodeType": "YulAssignment",
															"src": "8895:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:7"
																},
																"nativeSrc": "8910:8:7",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 980,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:7",
														"valueSize": 1
													},
													{
														"declaration": 980,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:7",
														"valueSize": 1
													},
													{
														"declaration": 984,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:7",
														"valueSize": 1
													},
													{
														"declaration": 987,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:7",
														"valueSize": 1
													},
													{
														"declaration": 978,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 989,
												"nodeType": "InlineAssembly",
												"src": "8507:421:7"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 990,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "8942:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1001,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "8994:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:7",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1000,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 995,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 978,
																			"src": "8968:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$593",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$593",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 993,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:7",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1013,
												"nodeType": "IfStatement",
												"src": "8938:146:7",
												"trueBody": {
													"id": 1012,
													"nodeType": "Block",
													"src": "9012:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1008,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 978,
																				"src": "9066:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$593",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$593",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1006,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1005,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 605,
																	"src": "9033:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1011,
															"nodeType": "RevertStatement",
															"src": "9026:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "8399:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$593",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 977,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 976,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 593,
														"src": "8399:6:7"
													},
													"referencedDeclaration": 593,
													"src": "8399:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$593",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "8413:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 979,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:7"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:7"
									},
									"scope": 1057,
									"src": "8370:720:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1055,
										"nodeType": "Block",
										"src": "9681:391:7",
										"statements": [
											{
												"assignments": [
													1027
												],
												"declarations": [
													{
														"constant": false,
														"id": 1027,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1055,
														"src": "9691:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1026,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1028,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:7"
											},
											{
												"assignments": [
													1030
												],
												"declarations": [
													{
														"constant": false,
														"id": 1030,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1055,
														"src": "9713:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1029,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1031,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:7"
											},
											{
												"assignments": [
													1033
												],
												"declarations": [
													{
														"constant": false,
														"id": 1033,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1055,
														"src": "9741:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1032,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1034,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:7"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:7",
													"nodeType": "YulBlock",
													"src": "9795:174:7",
													"statements": [
														{
															"nativeSrc": "9809:71:7",
															"nodeType": "YulAssignment",
															"src": "9809:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:7"
																		},
																		"nativeSrc": "9825:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:7",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:7"
																		},
																		"nativeSrc": "9842:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:7"
																		},
																		"nativeSrc": "9859:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:7"
																},
																"nativeSrc": "9820:60:7",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:7"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:7"
																}
															]
														},
														{
															"nativeSrc": "9893:30:7",
															"nodeType": "YulAssignment",
															"src": "9893:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:7"
																},
																"nativeSrc": "9907:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:7"
																}
															]
														},
														{
															"nativeSrc": "9936:23:7",
															"nodeType": "YulAssignment",
															"src": "9936:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:7"
																},
																"nativeSrc": "9951:8:7",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1021,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:7",
														"valueSize": 1
													},
													{
														"declaration": 1021,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:7",
														"valueSize": 1
													},
													{
														"declaration": 1030,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:7",
														"valueSize": 1
													},
													{
														"declaration": 1033,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:7",
														"valueSize": 1
													},
													{
														"declaration": 1027,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:7",
														"valueSize": 1
													},
													{
														"declaration": 1019,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1035,
												"nodeType": "InlineAssembly",
												"src": "9770:199:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1036,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "9985:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1037,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1030,
																		"src": "9997:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1048,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1033,
																		"src": "10048:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:7",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1042,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1019,
																						"src": "10023:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$593",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$593",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1041,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1040,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1043,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1052,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1025,
												"id": 1054,
												"nodeType": "Return",
												"src": "9978:87:7"
											}
										]
									},
									"documentation": {
										"id": 1016,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "9625:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$593",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1018,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1017,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 593,
														"src": "9625:6:7"
													},
													"referencedDeclaration": 593,
													"src": "9625:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$593",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "9639:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1020,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:7"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "9675:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1023,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:7"
									},
									"scope": 1057,
									"src": "9592:480:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1058,
							"src": "698:9376:7",
							"usedErrors": [
								605,
								614
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1087
						]
					},
					"id": 1088,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1059,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1060,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1087,
							"linearizedBaseContracts": [
								1087
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1065,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1064,
												"id": 1067,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1087,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1074,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1073,
												"id": 1076,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1071,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1087,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1085,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1082,
												"id": 1084,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1087,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1088,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1156
						]
					},
					"id": 1157,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1089,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1090,
								"nodeType": "StructuredDocumentation",
								"src": "135:894:9",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1156,
							"linearizedBaseContracts": [
								1156
							],
							"name": "ReentrancyGuard",
							"nameLocation": "1048:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1093,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1843:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1156,
									"src": "1818:40:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1091,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1818:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1092,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1857:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1096,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1889:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1156,
									"src": "1864:36:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1094,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1864:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1095,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1899:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1098,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1923:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1156,
									"src": "1907:23:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1097,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1907:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "1937:52:9",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 1101,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2000:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:9"
									},
									"src": "1994:37:9"
								},
								{
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "2051:38:9",
										"statements": [
											{
												"expression": {
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1104,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "2061:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1105,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "2071:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2061:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "2061:21:9"
											}
										]
									},
									"id": 1109,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2048:2:9"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:0:9"
									},
									"scope": 1156,
									"src": "2037:52:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "2490:79:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1112,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "2500:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2500:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "2500:21:9"
											},
											{
												"id": 1115,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1116,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "2542:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "2542:20:9"
											}
										]
									},
									"documentation": {
										"id": 1110,
										"nodeType": "StructuredDocumentation",
										"src": "2095:366:9",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1120,
									"name": "nonReentrant",
									"nameLocation": "2475:12:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2487:2:9"
									},
									"src": "2466:103:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "2614:268:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1123,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "2702:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1124,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "2713:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2702:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1130,
												"nodeType": "IfStatement",
												"src": "2698:86:9",
												"trueBody": {
													"id": 1129,
													"nodeType": "Block",
													"src": "2722:62:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1126,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1101,
																	"src": "2743:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2743:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1128,
															"nodeType": "RevertStatement",
															"src": "2736:37:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1131,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "2858:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1132,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "2868:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2858:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "2858:17:9"
											}
										]
									},
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2584:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:9"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2614:0:9"
									},
									"scope": 1156,
									"src": "2575:307:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "2926:170:9",
										"statements": [
											{
												"expression": {
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1139,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "3068:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1140,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "3078:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3068:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1142,
												"nodeType": "ExpressionStatement",
												"src": "3068:21:9"
											}
										]
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2897:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:2:9"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2926:0:9"
									},
									"scope": 1156,
									"src": "2888:208:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "3339:42:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1150,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "3356:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1151,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "3367:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3356:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1149,
												"id": 1153,
												"nodeType": "Return",
												"src": "3349:25:9"
											}
										]
									},
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "3102:168:9",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3284:23:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:2:9"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "3333:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3333:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:6:9"
									},
									"scope": 1156,
									"src": "3275:106:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1157,
							"src": "1030:2353:9",
							"usedErrors": [
								1101
							],
							"usedEvents": []
						}
					],
					"src": "109:3275:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1180
						],
						"IERC165": [
							1192
						]
					},
					"id": 1181,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1158,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1160,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1181,
							"sourceUnit": 1193,
							"src": "140:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1159,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1192,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1162,
										"name": "IERC165",
										"nameLocations": [
											"688:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1192,
										"src": "688:7:10"
									},
									"id": 1163,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1161,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1180,
							"linearizedBaseContracts": [
								1180,
								1192
							],
							"name": "ERC165",
							"nameLocation": "678:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1191
									],
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "812:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1171,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "829:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1173,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "849:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1192_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1192_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1172,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "844:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "844:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1192",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1175,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "858:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "844:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "829:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1170,
												"id": 1177,
												"nodeType": "Return",
												"src": "822:47:10"
											}
										]
									},
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "702:23:10",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 1179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "739:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "764:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "757:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1165,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "757:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:20:10"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "806:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "806:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:6:10"
									},
									"scope": 1180,
									"src": "730:146:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1181,
							"src": "660:218:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:765:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1192
						]
					},
					"id": 1193,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1182,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1183,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:11",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1192,
							"linearizedBaseContracts": [
								1192
							],
							"name": "IERC165",
							"nameLocation": "433:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1184,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "819:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1185,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:11"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "862:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1188,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:11"
									},
									"scope": 1192,
									"src": "792:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1193,
							"src": "423:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:11"
				},
				"id": 11
			},
			"src/kipu-bank-v2.sol": {
				"ast": {
					"absolutePath": "src/kipu-bank-v2.sol",
					"exportedSymbols": {
						"AccessControl": [
							342
						],
						"AggregatorV3Interface": [
							45
						],
						"Context": [
							1087
						],
						"ERC165": [
							1180
						],
						"IAccessControl": [
							425
						],
						"IERC1363": [
							507
						],
						"IERC165": [
							1192
						],
						"IERC20": [
							593
						],
						"IERC20Metadata": [
							2266
						],
						"KipuBankV2": [
							2259
						],
						"ReentrancyGuard": [
							1156
						],
						"SafeERC20": [
							1057
						]
					},
					"id": 2267,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1194,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1195,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2267,
							"sourceUnit": 343,
							"src": "185:58:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1196,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2267,
							"sourceUnit": 594,
							"src": "245:56:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1197,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2267,
							"sourceUnit": 1058,
							"src": "303:65:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 1198,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2267,
							"sourceUnit": 1157,
							"src": "370:59:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 1199,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2267,
							"sourceUnit": 46,
							"src": "433:76:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1200,
										"name": "AccessControl",
										"nameLocations": [
											"536:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 342,
										"src": "536:13:12"
									},
									"id": 1201,
									"nodeType": "InheritanceSpecifier",
									"src": "536:13:12"
								},
								{
									"baseName": {
										"id": 1202,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"551:15:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1156,
										"src": "551:15:12"
									},
									"id": 1203,
									"nodeType": "InheritanceSpecifier",
									"src": "551:15:12"
								}
							],
							"canonicalName": "KipuBankV2",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2259,
							"linearizedBaseContracts": [
								2259,
								1156,
								342,
								1180,
								1192,
								425,
								1087
							],
							"name": "KipuBankV2",
							"nameLocation": "522:10:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1207,
									"libraryName": {
										"id": 1204,
										"name": "SafeERC20",
										"nameLocations": [
											"580:9:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1057,
										"src": "580:9:12"
									},
									"nodeType": "UsingForDirective",
									"src": "574:27:12",
									"typeName": {
										"id": 1206,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1205,
											"name": "IERC20",
											"nameLocations": [
												"594:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 593,
											"src": "594:6:12"
										},
										"referencedDeclaration": 593,
										"src": "594:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$593",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "792:88:12",
										"text": "@notice Rol de administrador: puede agregar/quitar tokens y administrar parámetros."
									},
									"functionSelector": "75b238fc",
									"id": 1213,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "910:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 2259,
									"src": "886:60:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1209,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "886:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 1211,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "933:12:12",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 1210,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "923:9:12",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1212,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "923:23:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "959:148:12",
										"text": "@notice Umbral máximo de retiro por transacción en USD (18 decimales).\n @dev Inmutable: se define en el constructor, no puede cambiar."
									},
									"functionSelector": "d15f58fb",
									"id": 1216,
									"mutability": "immutable",
									"name": "i_withdrawalThresholdUSD",
									"nameLocation": "1138:24:12",
									"nodeType": "VariableDeclaration",
									"scope": 2259,
									"src": "1113:49:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1215,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1113:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1217,
										"nodeType": "StructuredDocumentation",
										"src": "1175:160:12",
										"text": "@notice Tope (cap) global del banco en USD (18 decimales). Suma total de depósitos.\n @dev Inmutable: se define en el constructor, no puede cambiar."
									},
									"functionSelector": "0ccee433",
									"id": 1219,
									"mutability": "immutable",
									"name": "i_bankCapUSD",
									"nameLocation": "1366:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 2259,
									"src": "1341:37:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1218,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1341:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "1391:160:12",
										"text": "@notice Decimales que usamos para contabilidad estilo USDC (6 decimales).\n @dev Normalizamos saldos a 6 decimales para facilidad de sumas por token."
									},
									"id": 1223,
									"mutability": "constant",
									"name": "USDC_DECIMALS",
									"nameLocation": "1580:13:12",
									"nodeType": "VariableDeclaration",
									"scope": 2259,
									"src": "1557:40:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1221,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1557:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "36",
										"id": 1222,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1596:1:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6_by_1",
											"typeString": "int_const 6"
										},
										"value": "6"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "1610:94:12",
										"text": "@notice Decimales estándar para reportar USD (18 decimales), útil para feeds y umbrales."
									},
									"id": 1227,
									"mutability": "constant",
									"name": "USD_DECIMALS",
									"nameLocation": "1733:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 2259,
									"src": "1710:40:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1225,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1710:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 1226,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1748:2:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "1763:84:12",
										"text": "@notice Identificador del token nativo (ETH). Se usa address(0) por convención."
									},
									"id": 1234,
									"mutability": "constant",
									"name": "NATIVE_ETH",
									"nameLocation": "1878:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 2259,
									"src": "1853:48:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1229,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1853:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30",
												"id": 1232,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1899:1:12",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 1231,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1891:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 1230,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1891:7:12",
												"typeDescriptions": {}
											}
										},
										"id": 1233,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1891:10:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1235,
										"nodeType": "StructuredDocumentation",
										"src": "1914:72:12",
										"text": "@notice Saldos por usuario y por token, normalizados a 6 decimales ."
									},
									"id": 1241,
									"mutability": "mutable",
									"name": "s_deposits",
									"nameLocation": "2067:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 2259,
									"src": "1992:85:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1240,
										"keyName": "user",
										"keyNameLocation": "2008:4:12",
										"keyType": {
											"id": 1236,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2000:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1992:66:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1239,
											"keyName": "token",
											"keyNameLocation": "2032:5:12",
											"keyType": {
												"id": 1237,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2024:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2016:41:12",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "balance",
											"valueNameLocation": "2049:7:12",
											"valueType": {
												"id": 1238,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2041:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "2090:65:12",
										"text": "@notice Total depositado por token (también en 6 decimales)."
									},
									"id": 1246,
									"mutability": "mutable",
									"name": "s_totalDeposits",
									"nameLocation": "2209:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 2259,
									"src": "2161:63:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1245,
										"keyName": "token",
										"keyNameLocation": "2177:5:12",
										"keyType": {
											"id": 1243,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2169:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2161:39:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "total",
										"valueNameLocation": "2194:5:12",
										"valueType": {
											"id": 1244,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2186:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "2237:71:12",
										"text": "@notice Oráculo Chainlink por token para obtener precio TOKEN/USD."
									},
									"id": 1252,
									"mutability": "mutable",
									"name": "s_priceFeeds",
									"nameLocation": "2380:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 2259,
									"src": "2314:78:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
										"typeString": "mapping(address => contract AggregatorV3Interface)"
									},
									"typeName": {
										"id": 1251,
										"keyName": "token",
										"keyNameLocation": "2330:5:12",
										"keyType": {
											"id": 1248,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2322:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2314:57:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
											"typeString": "mapping(address => contract AggregatorV3Interface)"
										},
										"valueName": "priceFeed",
										"valueNameLocation": "2361:9:12",
										"valueType": {
											"id": 1250,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1249,
												"name": "AggregatorV3Interface",
												"nameLocations": [
													"2339:21:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "2339:21:12"
											},
											"referencedDeclaration": 45,
											"src": "2339:21:12",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
												"typeString": "contract AggregatorV3Interface"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "2405:61:12",
										"text": "@notice Lista de tokens habilitados (incluye NATIVE_ETH)."
									},
									"id": 1256,
									"mutability": "mutable",
									"name": "s_supportedTokens",
									"nameLocation": "2490:17:12",
									"nodeType": "VariableDeclaration",
									"scope": 2259,
									"src": "2472:35:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1254,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2472:7:12",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1255,
										"nodeType": "ArrayTypeName",
										"src": "2472:9:12",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "2520:62:12",
										"text": "@notice Métricas: número total de depósitos realizados."
									},
									"functionSelector": "cac2e25f",
									"id": 1259,
									"mutability": "mutable",
									"name": "s_depositCount",
									"nameLocation": "2603:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 2259,
									"src": "2588:29:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1258,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2588:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "2630:59:12",
										"text": "@notice Métricas: número total de retiros realizados."
									},
									"functionSelector": "b2343b1c",
									"id": 1262,
									"mutability": "mutable",
									"name": "s_withdrawalCount",
									"nameLocation": "2710:17:12",
									"nodeType": "VariableDeclaration",
									"scope": 2259,
									"src": "2695:32:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1261,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2695:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1263,
										"nodeType": "StructuredDocumentation",
										"src": "2919:291:12",
										"text": "@notice Se emite cuando un usuario deposita.\n @param user Cuenta que deposita.\n @param token Token depositado (address(0) = ETH).\n @param amount Monto en decimales nativos del token (wei para ETH).\n @param usdValue Valor equivalente en USD (18 decimales)."
									},
									"eventSelector": "57bad7e3c9efecf6e1f60bbd846b999e9da4a409224287a8df09779f2330135e",
									"id": 1273,
									"name": "DepositMade",
									"nameLocation": "3222:11:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3250:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "3234:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3234:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3272:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "3256:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3256:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3287:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "3279:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3279:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"indexed": false,
												"mutability": "mutable",
												"name": "usdValue",
												"nameLocation": "3303:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "3295:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3295:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3233:79:12"
									},
									"src": "3216:97:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1274,
										"nodeType": "StructuredDocumentation",
										"src": "3325:285:12",
										"text": "@notice Se emite cuando un usuario retira.\n @param user Cuenta que retira.\n @param token Token retirado (address(0) = ETH).\n @param amount Monto en decimales nativos del token (wei para ETH).\n @param usdValue Valor equivalente en USD (18 decimales)."
									},
									"eventSelector": "de1d532173c6de1e3937c7af1cb92745c738980729f53ac451a725f929f3b798",
									"id": 1284,
									"name": "WithdrawalMade",
									"nameLocation": "3622:14:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3653:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "3637:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3637:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3675:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "3659:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3659:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3690:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "3682:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3682:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"indexed": false,
												"mutability": "mutable",
												"name": "usdValue",
												"nameLocation": "3706:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "3698:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3698:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3636:79:12"
									},
									"src": "3616:100:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "3728:50:12",
										"text": "@notice Se emite al habilitar un token ERC-20."
									},
									"eventSelector": "dffbd9ded1c09446f09377de547142dcce7dc541c8b0b028142b1eba7026b9e7",
									"id": 1291,
									"name": "TokenAdded",
									"nameLocation": "3790:10:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3817:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "3801:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3801:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"indexed": true,
												"mutability": "mutable",
												"name": "priceFeed",
												"nameLocation": "3840:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "3824:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3824:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3800:50:12"
									},
									"src": "3784:67:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1292,
										"nodeType": "StructuredDocumentation",
										"src": "3863:53:12",
										"text": "@notice Se emite al deshabilitar un token ERC-20."
									},
									"eventSelector": "4c910b69fe65a61f7531b9c5042b2329ca7179c77290aa7e2eb3afa3c8511fd3",
									"id": 1296,
									"name": "TokenRemoved",
									"nameLocation": "3928:12:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3957:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "3941:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3941:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3940:23:12"
									},
									"src": "3922:42:12"
								},
								{
									"documentation": {
										"id": 1297,
										"nodeType": "StructuredDocumentation",
										"src": "4164:31:12",
										"text": "@notice Monto igual a cero."
									},
									"errorSelector": "3f362952",
									"id": 1299,
									"name": "KipuBank__ZeroAmount",
									"nameLocation": "4207:20:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4227:2:12"
									},
									"src": "4201:29:12"
								},
								{
									"documentation": {
										"id": 1300,
										"nodeType": "StructuredDocumentation",
										"src": "4242:55:12",
										"text": "@notice Se excede el cap global del banco (en USD)."
									},
									"errorSelector": "639847a7",
									"id": 1306,
									"name": "KipuBank__BankCapExceeded",
									"nameLocation": "4309:25:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "requestedUSD",
												"nameLocation": "4343:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "4335:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4335:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "availableUSD",
												"nameLocation": "4365:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "4357:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4357:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4334:44:12"
									},
									"src": "4303:76:12"
								},
								{
									"documentation": {
										"id": 1307,
										"nodeType": "StructuredDocumentation",
										"src": "4391:44:12",
										"text": "@notice Saldo insuficiente para retirar."
									},
									"errorSelector": "61965c4e",
									"id": 1313,
									"name": "KipuBank__InsufficientBalance",
									"nameLocation": "4447:29:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "requestedAmount",
												"nameLocation": "4485:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "4477:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4477:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "availableBalance",
												"nameLocation": "4510:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "4502:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4502:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:51:12"
									},
									"src": "4441:87:12"
								},
								{
									"documentation": {
										"id": 1314,
										"nodeType": "StructuredDocumentation",
										"src": "4540:68:12",
										"text": "@notice Se excede el umbral de retiro por transacción (en USD)."
									},
									"errorSelector": "2d05fcba",
									"id": 1320,
									"name": "KipuBank__WithdrawalThresholdExceeded",
									"nameLocation": "4620:37:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "requestedUSD",
												"nameLocation": "4666:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "4658:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4658:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "thresholdUSD",
												"nameLocation": "4688:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "4680:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4680:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4657:44:12"
									},
									"src": "4614:88:12"
								},
								{
									"documentation": {
										"id": 1321,
										"nodeType": "StructuredDocumentation",
										"src": "4714:46:12",
										"text": "@notice Transferencia fallida (genérico)."
									},
									"errorSelector": "2ae871a5",
									"id": 1323,
									"name": "KipuBank__TransferFailed",
									"nameLocation": "4772:24:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4796:2:12"
									},
									"src": "4766:33:12"
								},
								{
									"documentation": {
										"id": 1324,
										"nodeType": "StructuredDocumentation",
										"src": "4811:74:12",
										"text": "@notice Token no soportado (no tiene feed configurado o es inválido)."
									},
									"errorSelector": "f9968b3a",
									"id": 1328,
									"name": "KipuBank__TokenNotSupported",
									"nameLocation": "4897:27:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4933:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "4925:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4925:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4924:15:12"
									},
									"src": "4891:49:12"
								},
								{
									"documentation": {
										"id": 1329,
										"nodeType": "StructuredDocumentation",
										"src": "4952:39:12",
										"text": "@notice Token ya estaba habilitado."
									},
									"errorSelector": "c2a2f475",
									"id": 1333,
									"name": "KipuBank__TokenAlreadySupported",
									"nameLocation": "5003:31:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5043:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "5035:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5035:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5034:15:12"
									},
									"src": "4997:53:12"
								},
								{
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "5062:76:12",
										"text": "@notice El oráculo devolvió precio inválido (<= 0) o datos corruptos."
									},
									"errorSelector": "804b984b",
									"id": 1336,
									"name": "KipuBank__InvalidPriceData",
									"nameLocation": "5150:26:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5176:2:12"
									},
									"src": "5144:35:12"
								},
								{
									"documentation": {
										"id": 1337,
										"nodeType": "StructuredDocumentation",
										"src": "5191:43:12",
										"text": "@notice Falló el envío de ETH nativo."
									},
									"errorSelector": "00e35d86",
									"id": 1339,
									"name": "KipuBank__ETHTransferFailed",
									"nameLocation": "5246:27:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5273:2:12"
									},
									"src": "5240:36:12"
								},
								{
									"body": {
										"id": 1395,
										"nodeType": "Block",
										"src": "5916:660:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1349,
															"name": "_withdrawalThresholdUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "6006:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6033:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6006:28:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1352,
															"name": "_bankCapUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "6038:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6053:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6038:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6006:48:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1360,
												"nodeType": "IfStatement",
												"src": "6002:110:12",
												"trueBody": {
													"id": 1359,
													"nodeType": "Block",
													"src": "6056:56:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1356,
																	"name": "KipuBank__ZeroAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1299,
																	"src": "6078:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6078:22:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1358,
															"nodeType": "RevertStatement",
															"src": "6071:29:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1361,
														"name": "i_withdrawalThresholdUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "6124:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1362,
														"name": "_withdrawalThresholdUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "6151:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6124:50:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1364,
												"nodeType": "ExpressionStatement",
												"src": "6124:50:12"
											},
											{
												"expression": {
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1365,
														"name": "i_bankCapUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "6185:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1366,
														"name": "_bankCapUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "6200:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6185:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1368,
												"nodeType": "ExpressionStatement",
												"src": "6185:26:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1370,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "6303:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1371,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6323:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6327:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6323:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1369,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "6292:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6292:42:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1374,
												"nodeType": "ExpressionStatement",
												"src": "6292:42:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1376,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "6356:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1377,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6368:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6372:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6368:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1375,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "6345:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6345:34:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1380,
												"nodeType": "ExpressionStatement",
												"src": "6345:34:12"
											},
											{
												"expression": {
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1381,
															"name": "s_priceFeeds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "6460:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "mapping(address => contract AggregatorV3Interface)"
															}
														},
														"id": 1383,
														"indexExpression": {
															"id": 1382,
															"name": "NATIVE_ETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "6473:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6460:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1385,
																"name": "_ethPriceFeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1346,
																"src": "6509:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1384,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "6487:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6487:36:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "6460:63:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1388,
												"nodeType": "ExpressionStatement",
												"src": "6460:63:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1392,
															"name": "NATIVE_ETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "6557:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1389,
															"name": "s_supportedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "6534:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6552:4:12",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6534:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6534:34:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1394,
												"nodeType": "ExpressionStatement",
												"src": "6534:34:12"
											}
										]
									},
									"documentation": {
										"id": 1340,
										"nodeType": "StructuredDocumentation",
										"src": "5469:313:12",
										"text": " @notice Inicializa el banco con umbral de retiro y cap global en USD.\n @param _withdrawalThresholdUSD Umbral por retiro en USD (18 decimales).\n @param _bankCapUSD Cap global de depósitos en USD (18 decimales).\n @param _ethPriceFeed Dirección del feed Chainlink ETH/USD."
									},
									"id": 1396,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "_withdrawalThresholdUSD",
												"nameLocation": "5818:23:12",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "5810:31:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5810:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "_bankCapUSD",
												"nameLocation": "5860:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "5852:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5852:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "_ethPriceFeed",
												"nameLocation": "5890:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "5882:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5882:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5799:111:12"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5916:0:12"
									},
									"scope": 2259,
									"src": "5788:788:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1406,
										"nodeType": "Block",
										"src": "6872:50:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1401,
															"name": "NATIVE_ETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "6892:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1402,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6904:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6908:5:12",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "6904:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1400,
														"name": "_deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1760,
														"src": "6883:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6883:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "6883:31:12"
											}
										]
									},
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "6777:62:12",
										"text": "@notice Recibe ETH directamente y lo trata como depósito."
									},
									"id": 1407,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6852:2:12"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6872:0:12"
									},
									"scope": 2259,
									"src": "6845:77:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1414,
										"nodeType": "Block",
										"src": "7036:52:12",
										"statements": [
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1411,
														"name": "KipuBank__TransferFailed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "7054:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
															"typeString": "function () pure returns (error)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7054:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_error",
														"typeString": "error"
													}
												},
												"id": 1413,
												"nodeType": "RevertStatement",
												"src": "7047:33:12"
											}
										]
									},
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "6930:72:12",
										"text": "@notice Fallback: no aceptamos otras llamadas sin datos; revertimos."
									},
									"id": 1415,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7016:2:12"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7036:0:12"
									},
									"scope": 2259,
									"src": "7008:80:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1435,
										"nodeType": "Block",
										"src": "7404:110:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1421,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7419:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7423:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "7419:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1423,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7432:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7419:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1428,
												"nodeType": "IfStatement",
												"src": "7415:49:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1425,
															"name": "KipuBank__ZeroAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "7442:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7442:22:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1427,
													"nodeType": "RevertStatement",
													"src": "7435:29:12"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1430,
															"name": "NATIVE_ETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "7484:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1431,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7496:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7500:5:12",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "7496:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1429,
														"name": "_deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1760,
														"src": "7475:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7475:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "7475:31:12"
											}
										]
									},
									"documentation": {
										"id": 1416,
										"nodeType": "StructuredDocumentation",
										"src": "7284:62:12",
										"text": " @notice Deposita ETH nativo (address(0))."
									},
									"functionSelector": "f6326fb3",
									"id": 1436,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1419,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1418,
												"name": "nonReentrant",
												"nameLocations": [
													"7391:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1120,
												"src": "7391:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "7391:12:12"
										}
									],
									"name": "depositETH",
									"nameLocation": "7361:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7371:2:12"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7404:0:12"
									},
									"scope": 2259,
									"src": "7352:162:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1496,
										"nodeType": "Block",
										"src": "7792:530:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1446,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "7807:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7817:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7807:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1452,
												"nodeType": "IfStatement",
												"src": "7803:46:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1449,
															"name": "KipuBank__ZeroAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "7827:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7827:22:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1451,
													"nodeType": "RevertStatement",
													"src": "7820:29:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1453,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1439,
														"src": "7864:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1454,
														"name": "NATIVE_ETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1234,
														"src": "7873:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7864:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1460,
												"nodeType": "IfStatement",
												"src": "7860:66:12",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1457,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1439,
																"src": "7920:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1456,
															"name": "KipuBank__TokenNotSupported",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "7892:27:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																"typeString": "function (address) pure returns (error)"
															}
														},
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7892:34:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1459,
													"nodeType": "RevertStatement",
													"src": "7885:41:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 1463,
																	"name": "s_priceFeeds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "7949:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
																		"typeString": "mapping(address => contract AggregatorV3Interface)"
																	}
																},
																"id": 1465,
																"indexExpression": {
																	"id": 1464,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1439,
																	"src": "7962:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7949:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																	"typeString": "contract AggregatorV3Interface"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																	"typeString": "contract AggregatorV3Interface"
																}
															],
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7941:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1461,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7941:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7941:28:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7981:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7973:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7973:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7973:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7941:42:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1477,
												"nodeType": "IfStatement",
												"src": "7937:116:12",
												"trueBody": {
													"id": 1476,
													"nodeType": "Block",
													"src": "7985:68:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1473,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "8035:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1472,
																	"name": "KipuBank__TokenNotSupported",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "8007:27:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8007:34:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1475,
															"nodeType": "RevertStatement",
															"src": "8000:41:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1482,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8246:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8250:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8246:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1486,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8266:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_KipuBankV2_$2259",
																		"typeString": "contract KipuBankV2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_KipuBankV2_$2259",
																		"typeString": "contract KipuBankV2"
																	}
																],
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8258:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1484,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8258:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8258:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1488,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "8273:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1479,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1439,
																	"src": "8222:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1478,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "8215:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$593_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8215:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$593",
																"typeString": "contract IERC20"
															}
														},
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8229:16:12",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 665,
														"src": "8215:30:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$593_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$593_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8215:65:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1490,
												"nodeType": "ExpressionStatement",
												"src": "8215:65:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1492,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "8300:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1493,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "8307:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1491,
														"name": "_deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1760,
														"src": "8291:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8291:23:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1495,
												"nodeType": "ExpressionStatement",
												"src": "8291:23:12"
											}
										]
									},
									"documentation": {
										"id": 1437,
										"nodeType": "StructuredDocumentation",
										"src": "7522:189:12",
										"text": " @notice Deposita un token ERC-20 habilitado.\n @param token Dirección del token ERC-20.\n @param amount Monto a depositar (en decimales nativos del token)."
									},
									"functionSelector": "338b5dea",
									"id": 1497,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1444,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1443,
												"name": "nonReentrant",
												"nameLocations": [
													"7779:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1120,
												"src": "7779:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "7779:12:12"
										}
									],
									"name": "depositToken",
									"nameLocation": "7726:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7747:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "7739:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7739:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7762:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "7754:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7754:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7738:31:12"
									},
									"returnParameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7792:0:12"
									},
									"scope": 2259,
									"src": "7717:605:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1517,
										"nodeType": "Block",
										"src": "8493:105:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1505,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1500,
														"src": "8508:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8518:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8508:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1511,
												"nodeType": "IfStatement",
												"src": "8504:46:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1508,
															"name": "KipuBank__ZeroAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "8528:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8528:22:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1510,
													"nodeType": "RevertStatement",
													"src": "8521:29:12"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1513,
															"name": "NATIVE_ETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "8571:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1514,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1500,
															"src": "8583:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1512,
														"name": "_withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1869,
														"src": "8561:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8561:29:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1516,
												"nodeType": "ExpressionStatement",
												"src": "8561:29:12"
											}
										]
									},
									"documentation": {
										"id": 1498,
										"nodeType": "StructuredDocumentation",
										"src": "8330:98:12",
										"text": " @notice Retira ETH de tu saldo.\n @param amount Monto en wei a retirar."
									},
									"functionSelector": "f14210a6",
									"id": 1518,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1503,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1502,
												"name": "nonReentrant",
												"nameLocations": [
													"8480:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1120,
												"src": "8480:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "8480:12:12"
										}
									],
									"name": "withdrawETH",
									"nameLocation": "8443:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8463:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "8455:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8455:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8454:16:12"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8493:0:12"
									},
									"scope": 2259,
									"src": "8434:164:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "8865:177:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1528,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1523,
														"src": "8880:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8890:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8880:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1534,
												"nodeType": "IfStatement",
												"src": "8876:46:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1531,
															"name": "KipuBank__ZeroAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "8900:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8900:22:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1533,
													"nodeType": "RevertStatement",
													"src": "8893:29:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1535,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1521,
														"src": "8937:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1536,
														"name": "NATIVE_ETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1234,
														"src": "8946:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8937:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1542,
												"nodeType": "IfStatement",
												"src": "8933:66:12",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1539,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1521,
																"src": "8993:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1538,
															"name": "KipuBank__TokenNotSupported",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "8965:27:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																"typeString": "function (address) pure returns (error)"
															}
														},
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8965:34:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1541,
													"nodeType": "RevertStatement",
													"src": "8958:41:12"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1544,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "9020:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1545,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "9027:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1543,
														"name": "_withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1869,
														"src": "9010:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9010:24:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1547,
												"nodeType": "ExpressionStatement",
												"src": "9010:24:12"
											}
										]
									},
									"documentation": {
										"id": 1519,
										"nodeType": "StructuredDocumentation",
										"src": "8606:177:12",
										"text": " @notice Retira tokens ERC-20 de tu saldo.\n @param token Dirección del token.\n @param amount Monto a retirar (en decimales nativos del token)."
									},
									"functionSelector": "9e281a98",
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1526,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1525,
												"name": "nonReentrant",
												"nameLocations": [
													"8852:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1120,
												"src": "8852:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "8852:12:12"
										}
									],
									"name": "withdrawToken",
									"nameLocation": "8798:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8820:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "8812:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8835:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "8827:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8827:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8811:31:12"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8865:0:12"
									},
									"scope": 2259,
									"src": "8789:253:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1604,
										"nodeType": "Block",
										"src": "9359:368:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1560,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "9374:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1561,
														"name": "NATIVE_ETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1234,
														"src": "9383:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9374:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1567,
												"nodeType": "IfStatement",
												"src": "9370:66:12",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1564,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1552,
																"src": "9430:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1563,
															"name": "KipuBank__TokenNotSupported",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "9402:27:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																"typeString": "function (address) pure returns (error)"
															}
														},
														"id": 1565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9402:34:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1566,
													"nodeType": "RevertStatement",
													"src": "9395:41:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 1570,
																	"name": "s_priceFeeds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "9459:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
																		"typeString": "mapping(address => contract AggregatorV3Interface)"
																	}
																},
																"id": 1572,
																"indexExpression": {
																	"id": 1571,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1552,
																	"src": "9472:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9459:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																	"typeString": "contract AggregatorV3Interface"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																	"typeString": "contract AggregatorV3Interface"
																}
															],
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9451:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1568,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9451:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9451:28:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9491:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9483:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1574,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9483:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9483:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9451:42:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1584,
												"nodeType": "IfStatement",
												"src": "9447:120:12",
												"trueBody": {
													"id": 1583,
													"nodeType": "Block",
													"src": "9495:72:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1580,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1552,
																		"src": "9549:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1579,
																	"name": "KipuBank__TokenAlreadySupported",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1333,
																	"src": "9517:31:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9517:38:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1582,
															"nodeType": "RevertStatement",
															"src": "9510:45:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1585,
															"name": "s_priceFeeds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "9579:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "mapping(address => contract AggregatorV3Interface)"
															}
														},
														"id": 1587,
														"indexExpression": {
															"id": 1586,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "9592:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9579:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1589,
																"name": "priceFeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "9623:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1588,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "9601:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9601:32:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "9579:54:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "9579:54:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1596,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "9667:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1593,
															"name": "s_supportedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "9644:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9662:4:12",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "9644:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9644:29:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1598,
												"nodeType": "ExpressionStatement",
												"src": "9644:29:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1600,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "9702:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1601,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "9709:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1599,
														"name": "TokenAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "9691:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9691:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1603,
												"nodeType": "EmitStatement",
												"src": "9686:33:12"
											}
										]
									},
									"documentation": {
										"id": 1550,
										"nodeType": "StructuredDocumentation",
										"src": "9050:188:12",
										"text": " @notice Habilita soporte para un nuevo token ERC-20.\n @param token Dirección del token.\n @param priceFeed Dirección del oráculo TOKEN/USD (Chainlink)."
									},
									"functionSelector": "5ccf7ac4",
									"id": 1605,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1557,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1213,
													"src": "9341:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1558,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1556,
												"name": "onlyRole",
												"nameLocations": [
													"9332:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 87,
												"src": "9332:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "9332:20:12"
										}
									],
									"name": "addTokenSupport",
									"nameLocation": "9253:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9277:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "9269:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9269:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "priceFeed",
												"nameLocation": "9292:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "9284:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9284:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9268:34:12"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9359:0:12"
									},
									"scope": 2259,
									"src": "9244:483:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1691,
										"nodeType": "Block",
										"src": "9960:641:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 1616,
																	"name": "s_priceFeeds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "9983:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
																		"typeString": "mapping(address => contract AggregatorV3Interface)"
																	}
																},
																"id": 1618,
																"indexExpression": {
																	"id": 1617,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1608,
																	"src": "9996:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9983:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																	"typeString": "contract AggregatorV3Interface"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																	"typeString": "contract AggregatorV3Interface"
																}
															],
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9975:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1614,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9975:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9975:28:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10015:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10007:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10007:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10007:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9975:42:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1630,
												"nodeType": "IfStatement",
												"src": "9971:116:12",
												"trueBody": {
													"id": 1629,
													"nodeType": "Block",
													"src": "10019:68:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1626,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1608,
																		"src": "10069:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1625,
																	"name": "KipuBank__TokenNotSupported",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "10041:27:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10041:34:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1628,
															"nodeType": "RevertStatement",
															"src": "10034:41:12"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1631,
															"name": "s_totalDeposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "10101:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1633,
														"indexExpression": {
															"id": 1632,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "10117:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10101:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10126:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10101:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1644,
												"nodeType": "IfStatement",
												"src": "10097:122:12",
												"trueBody": {
													"id": 1643,
													"nodeType": "Block",
													"src": "10129:90:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10181:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"baseExpression": {
																			"id": 1638,
																			"name": "s_totalDeposits",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1246,
																			"src": "10184:15:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1640,
																		"indexExpression": {
																			"id": 1639,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1608,
																			"src": "10200:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10184:22:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1636,
																	"name": "KipuBank__InsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1313,
																	"src": "10151:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10151:56:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1642,
															"nodeType": "RevertStatement",
															"src": "10144:63:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10231:26:12",
													"subExpression": {
														"baseExpression": {
															"id": 1645,
															"name": "s_priceFeeds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "10238:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "mapping(address => contract AggregatorV3Interface)"
															}
														},
														"id": 1647,
														"indexExpression": {
															"id": 1646,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "10251:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10238:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1649,
												"nodeType": "ExpressionStatement",
												"src": "10231:26:12"
											},
											{
												"body": {
													"id": 1685,
													"nodeType": "Block",
													"src": "10325:232:12",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1661,
																		"name": "s_supportedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1256,
																		"src": "10344:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1663,
																	"indexExpression": {
																		"id": 1662,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1651,
																		"src": "10362:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10344:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1664,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1608,
																	"src": "10368:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10344:29:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1684,
															"nodeType": "IfStatement",
															"src": "10340:206:12",
															"trueBody": {
																"id": 1683,
																"nodeType": "Block",
																"src": "10375:171:12",
																"statements": [
																	{
																		"expression": {
																			"id": 1675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1666,
																					"name": "s_supportedTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1256,
																					"src": "10394:17:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1668,
																				"indexExpression": {
																					"id": 1667,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1651,
																					"src": "10412:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "10394:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1669,
																					"name": "s_supportedTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1256,
																					"src": "10417:17:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1674,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1673,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1670,
																							"name": "s_supportedTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1256,
																							"src": "10435:17:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 1671,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "10453:6:12",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "10435:24:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1672,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "10462:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "10435:28:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "10417:47:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "10394:70:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1676,
																		"nodeType": "ExpressionStatement",
																		"src": "10394:70:12"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1677,
																					"name": "s_supportedTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1256,
																					"src": "10483:17:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1679,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10501:3:12",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "10483:21:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer)"
																				}
																			},
																			"id": 1680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10483:23:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1681,
																		"nodeType": "ExpressionStatement",
																		"src": "10483:23:12"
																	},
																	{
																		"id": 1682,
																		"nodeType": "Break",
																		"src": "10525:5:12"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1654,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1651,
														"src": "10290:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1655,
															"name": "s_supportedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "10294:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1656,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10312:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10294:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10290:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1686,
												"initializationExpression": {
													"assignments": [
														1651
													],
													"declarations": [
														{
															"constant": false,
															"id": 1651,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10283:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 1686,
															"src": "10275:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1650,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10275:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1653,
													"initialValue": {
														"hexValue": "30",
														"id": 1652,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10287:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10275:13:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10320:3:12",
														"subExpression": {
															"id": 1658,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "10320:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1660,
													"nodeType": "ExpressionStatement",
													"src": "10320:3:12"
												},
												"nodeType": "ForStatement",
												"src": "10270:287:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1688,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "10587:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1687,
														"name": "TokenRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "10574:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10574:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1690,
												"nodeType": "EmitStatement",
												"src": "10569:24:12"
											}
										]
									},
									"documentation": {
										"id": 1606,
										"nodeType": "StructuredDocumentation",
										"src": "9735:146:12",
										"text": " @notice Deshabilita un token (debe no tener depósitos pendientes).\n @param token Dirección del token a deshabilitar."
									},
									"functionSelector": "2ba8d939",
									"id": 1692,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1611,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1213,
													"src": "9948:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1612,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1610,
												"name": "onlyRole",
												"nameLocations": [
													"9939:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 87,
												"src": "9939:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "9939:20:12"
										}
									],
									"name": "removeTokenSupport",
									"nameLocation": "9896:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9923:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "9915:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9915:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9914:15:12"
									},
									"returnParameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9960:0:12"
									},
									"scope": 2259,
									"src": "9887:714:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1759,
										"nodeType": "Block",
										"src": "11294:761:12",
										"statements": [
											{
												"assignments": [
													1701
												],
												"declarations": [
													{
														"constant": false,
														"id": 1701,
														"mutability": "mutable",
														"name": "usdValue",
														"nameLocation": "11332:8:12",
														"nodeType": "VariableDeclaration",
														"scope": 1759,
														"src": "11324:16:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1700,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11324:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1706,
												"initialValue": {
													"arguments": [
														{
															"id": 1703,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "11356:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1704,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "11363:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1702,
														"name": "_getUSDValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1940,
														"src": "11343:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11343:27:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11324:46:12"
											},
											{
												"assignments": [
													1708
												],
												"declarations": [
													{
														"constant": false,
														"id": 1708,
														"mutability": "mutable",
														"name": "currentTotalUSD",
														"nameLocation": "11407:15:12",
														"nodeType": "VariableDeclaration",
														"scope": 1759,
														"src": "11399:23:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1707,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11399:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1711,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1709,
														"name": "_getTotalDepositsUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2053,
														"src": "11425:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11425:22:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11399:48:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1712,
															"name": "currentTotalUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1708,
															"src": "11488:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1713,
															"name": "usdValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1701,
															"src": "11506:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11488:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1715,
														"name": "i_bankCapUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "11517:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11488:41:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1725,
												"nodeType": "IfStatement",
												"src": "11484:198:12",
												"trueBody": {
													"id": 1724,
													"nodeType": "Block",
													"src": "11531:151:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1718,
																		"name": "usdValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1701,
																		"src": "11597:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1719,
																			"name": "i_bankCapUSD",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "11625:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1720,
																			"name": "currentTotalUSD",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1708,
																			"src": "11640:15:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11625:30:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1717,
																	"name": "KipuBank__BankCapExceeded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1306,
																	"src": "11553:25:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11553:117:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1723,
															"nodeType": "RevertStatement",
															"src": "11546:124:12"
														}
													]
												}
											},
											{
												"assignments": [
													1727
												],
												"declarations": [
													{
														"constant": false,
														"id": 1727,
														"mutability": "mutable",
														"name": "normalizedAmount",
														"nameLocation": "11752:16:12",
														"nodeType": "VariableDeclaration",
														"scope": 1759,
														"src": "11744:24:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1726,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11744:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1732,
												"initialValue": {
													"arguments": [
														{
															"id": 1729,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "11788:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1730,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "11795:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1728,
														"name": "_normalizeToUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1996,
														"src": "11771:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11771:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11744:58:12"
											},
											{
												"expression": {
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1733,
																"name": "s_deposits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "11826:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1737,
															"indexExpression": {
																"expression": {
																	"id": 1734,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "11837:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11841:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "11837:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11826:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1738,
														"indexExpression": {
															"id": 1736,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "11849:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11826:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1739,
														"name": "normalizedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1727,
														"src": "11859:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11826:49:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1741,
												"nodeType": "ExpressionStatement",
												"src": "11826:49:12"
											},
											{
												"expression": {
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1742,
															"name": "s_totalDeposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "11886:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1744,
														"indexExpression": {
															"id": 1743,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "11902:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11886:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1745,
														"name": "normalizedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1727,
														"src": "11912:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11886:42:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1747,
												"nodeType": "ExpressionStatement",
												"src": "11886:42:12"
											},
											{
												"expression": {
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "11939:16:12",
													"subExpression": {
														"id": 1748,
														"name": "s_depositCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "11939:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1750,
												"nodeType": "ExpressionStatement",
												"src": "11939:16:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1752,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12011:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12015:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12011:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1754,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "12023:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1755,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "12030:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1756,
															"name": "usdValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1701,
															"src": "12038:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1751,
														"name": "DepositMade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1273,
														"src": "11999:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11999:48:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1758,
												"nodeType": "EmitStatement",
												"src": "11994:53:12"
											}
										]
									},
									"documentation": {
										"id": 1693,
										"nodeType": "StructuredDocumentation",
										"src": "10801:430:12",
										"text": " @notice Lógica interna de depósito (ETH o ERC-20).\n @param token Token a depositar (address(0) = ETH).\n @param amount Monto en decimales nativos del token.\n @dev Patrón CEI:\n      - CHECKS: calcular USD, verificar cap global.\n      - EFFECTS: actualizar contabilidad normalizada a USDC(6).\n      - INTERACTIONS: sólo evento (tokens ya fueron transferidos arriba)."
									},
									"id": 1760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_deposit",
									"nameLocation": "11246:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "11263:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "11255:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11255:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11278:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "11270:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11270:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11254:31:12"
									},
									"returnParameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11294:0:12"
									},
									"scope": 2259,
									"src": "11237:818:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1868,
										"nodeType": "Block",
										"src": "12314:1105:12",
										"statements": [
											{
												"assignments": [
													1769
												],
												"declarations": [
													{
														"constant": false,
														"id": 1769,
														"mutability": "mutable",
														"name": "normalizedAmount",
														"nameLocation": "12352:16:12",
														"nodeType": "VariableDeclaration",
														"scope": 1868,
														"src": "12344:24:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1768,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12344:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1774,
												"initialValue": {
													"arguments": [
														{
															"id": 1771,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "12388:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1772,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "12395:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1770,
														"name": "_normalizeToUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1996,
														"src": "12371:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12371:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12344:58:12"
											},
											{
												"assignments": [
													1776
												],
												"declarations": [
													{
														"constant": false,
														"id": 1776,
														"mutability": "mutable",
														"name": "userBalance",
														"nameLocation": "12421:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 1868,
														"src": "12413:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1775,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12413:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1783,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1777,
															"name": "s_deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "12435:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1780,
														"indexExpression": {
															"expression": {
																"id": 1778,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12446:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12450:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12446:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12435:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1782,
													"indexExpression": {
														"id": 1781,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1763,
														"src": "12458:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12435:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12413:51:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1784,
														"name": "normalizedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1769,
														"src": "12489:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1785,
														"name": "userBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1776,
														"src": "12508:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12489:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1793,
												"nodeType": "IfStatement",
												"src": "12485:130:12",
												"trueBody": {
													"id": 1792,
													"nodeType": "Block",
													"src": "12521:94:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1788,
																		"name": "normalizedAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1769,
																		"src": "12573:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1789,
																		"name": "userBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1776,
																		"src": "12591:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1787,
																	"name": "KipuBank__InsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1313,
																	"src": "12543:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12543:60:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1791,
															"nodeType": "RevertStatement",
															"src": "12536:67:12"
														}
													]
												}
											},
											{
												"assignments": [
													1795
												],
												"declarations": [
													{
														"constant": false,
														"id": 1795,
														"mutability": "mutable",
														"name": "usdValue",
														"nameLocation": "12635:8:12",
														"nodeType": "VariableDeclaration",
														"scope": 1868,
														"src": "12627:16:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1794,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12627:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1800,
												"initialValue": {
													"arguments": [
														{
															"id": 1797,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "12659:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1798,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "12666:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1796,
														"name": "_getUSDValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1940,
														"src": "12646:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12646:27:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12627:46:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1801,
														"name": "usdValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1795,
														"src": "12699:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1802,
														"name": "i_withdrawalThresholdUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "12710:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12699:35:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1810,
												"nodeType": "IfStatement",
												"src": "12695:197:12",
												"trueBody": {
													"id": 1809,
													"nodeType": "Block",
													"src": "12736:156:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1805,
																		"name": "usdValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1795,
																		"src": "12814:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1806,
																		"name": "i_withdrawalThresholdUSD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1216,
																		"src": "12841:24:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1804,
																	"name": "KipuBank__WithdrawalThresholdExceeded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "12758:37:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12758:122:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1808,
															"nodeType": "RevertStatement",
															"src": "12751:129:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1811,
																"name": "s_deposits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "12924:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1815,
															"indexExpression": {
																"expression": {
																	"id": 1812,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "12935:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12939:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "12935:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12924:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1816,
														"indexExpression": {
															"id": 1814,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "12947:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12924:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1817,
														"name": "normalizedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1769,
														"src": "12957:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12924:49:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1819,
												"nodeType": "ExpressionStatement",
												"src": "12924:49:12"
											},
											{
												"expression": {
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1820,
															"name": "s_totalDeposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "12984:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1822,
														"indexExpression": {
															"id": 1821,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "13000:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12984:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1823,
														"name": "normalizedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1769,
														"src": "13010:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12984:42:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1825,
												"nodeType": "ExpressionStatement",
												"src": "12984:42:12"
											},
											{
												"expression": {
													"id": 1827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "13037:19:12",
													"subExpression": {
														"id": 1826,
														"name": "s_withdrawalCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "13037:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1828,
												"nodeType": "ExpressionStatement",
												"src": "13037:19:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1829,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1763,
														"src": "13098:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1830,
														"name": "NATIVE_ETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1234,
														"src": "13107:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13098:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1858,
													"nodeType": "Block",
													"src": "13270:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1853,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "13312:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13316:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "13312:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1855,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1765,
																		"src": "13324:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1850,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1763,
																				"src": "13292:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1849,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 593,
																			"src": "13285:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$593_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13285:13:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$593",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13299:12:12",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 638,
																	"src": "13285:26:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$593_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$593_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13285:46:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1857,
															"nodeType": "ExpressionStatement",
															"src": "13285:46:12"
														}
													]
												},
												"id": 1859,
												"nodeType": "IfStatement",
												"src": "13094:249:12",
												"trueBody": {
													"id": 1848,
													"nodeType": "Block",
													"src": "13119:145:12",
													"statements": [
														{
															"assignments": [
																1833,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1833,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "13140:7:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1848,
																	"src": "13135:12:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1832,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "13135:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1841,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13184:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1834,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "13153:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "13157:6:12",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "13153:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13164:4:12",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "13153:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1837,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1765,
																			"src": "13176:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "13153:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13153:34:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13134:53:12"
														},
														{
															"condition": {
																"id": 1843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "13206:8:12",
																"subExpression": {
																	"id": 1842,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1833,
																	"src": "13207:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1847,
															"nodeType": "IfStatement",
															"src": "13202:50:12",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1844,
																		"name": "KipuBank__ETHTransferFailed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1339,
																		"src": "13223:27:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 1845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13223:29:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1846,
																"nodeType": "RevertStatement",
																"src": "13216:36:12"
															}
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1861,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13375:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13379:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13375:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1863,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "13387:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1864,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "13394:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1865,
															"name": "usdValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "13402:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1860,
														"name": "WithdrawalMade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "13360:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13360:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1867,
												"nodeType": "EmitStatement",
												"src": "13355:56:12"
											}
										]
									},
									"documentation": {
										"id": 1761,
										"nodeType": "StructuredDocumentation",
										"src": "12063:187:12",
										"text": " @notice Lógica interna de retiro (ETH o ERC-20).\n @param token Token a retirar (address(0) = ETH).\n @param amount Monto en decimales nativos del token."
									},
									"id": 1869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_withdraw",
									"nameLocation": "12265:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "12283:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "12275:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12275:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12298:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "12290:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12290:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12274:31:12"
									},
									"returnParameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12314:0:12"
									},
									"scope": 2259,
									"src": "12256:1163:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1939,
										"nodeType": "Block",
										"src": "13967:646:12",
										"statements": [
											{
												"assignments": [
													1881
												],
												"declarations": [
													{
														"constant": false,
														"id": 1881,
														"mutability": "mutable",
														"name": "priceFeed",
														"nameLocation": "14000:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 1939,
														"src": "13978:31:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"id": 1880,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1879,
																"name": "AggregatorV3Interface",
																"nameLocations": [
																	"13978:21:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 45,
																"src": "13978:21:12"
															},
															"referencedDeclaration": 45,
															"src": "13978:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1885,
												"initialValue": {
													"baseExpression": {
														"id": 1882,
														"name": "s_priceFeeds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "14012:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
															"typeString": "mapping(address => contract AggregatorV3Interface)"
														}
													},
													"id": 1884,
													"indexExpression": {
														"id": 1883,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1872,
														"src": "14025:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14012:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13978:53:12"
											},
											{
												"assignments": [
													null,
													1887,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1887,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "14064:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 1939,
														"src": "14057:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1886,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "14057:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1891,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1888,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "14079:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14089:15:12",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "14079:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14079:27:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14054:52:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1892,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1887,
														"src": "14121:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14130:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14121:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1898,
												"nodeType": "IfStatement",
												"src": "14117:51:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1895,
															"name": "KipuBank__InvalidPriceData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "14140:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14140:28:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1897,
													"nodeType": "RevertStatement",
													"src": "14133:35:12"
												}
											},
											{
												"assignments": [
													1900
												],
												"declarations": [
													{
														"constant": false,
														"id": 1900,
														"mutability": "mutable",
														"name": "tokenDecimals",
														"nameLocation": "14247:13:12",
														"nodeType": "VariableDeclaration",
														"scope": 1939,
														"src": "14241:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1899,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "14241:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1911,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1901,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "14263:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1902,
															"name": "NATIVE_ETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "14272:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14263:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 1906,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1872,
																		"src": "14305:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1905,
																	"name": "IERC20Metadata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2266,
																	"src": "14290:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$2266_$",
																		"typeString": "type(contract IERC20Metadata)"
																	}
																},
																"id": 1907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14290:21:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Metadata_$2266",
																	"typeString": "contract IERC20Metadata"
																}
															},
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14312:8:12",
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2265,
															"src": "14290:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 1909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14290:32:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "14263:59:12",
													"trueExpression": {
														"hexValue": "3138",
														"id": 1904,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14285:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14241:81:12"
											},
											{
												"assignments": [
													1913
												],
												"declarations": [
													{
														"constant": false,
														"id": 1913,
														"mutability": "mutable",
														"name": "priceFeedDecimals",
														"nameLocation": "14339:17:12",
														"nodeType": "VariableDeclaration",
														"scope": 1939,
														"src": "14333:23:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1912,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "14333:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1917,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1914,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "14359:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14369:8:12",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "14359:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14359:20:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14333:46:12"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1918,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1874,
																		"src": "14499:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1921,
																				"name": "price",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1887,
																				"src": "14516:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 1920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "14508:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1919,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "14508:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14508:14:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14499:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14525:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"id": 1925,
																		"name": "USD_DECIMALS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1227,
																		"src": "14529:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "14525:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14499:42:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1928,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14498:44:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14563:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"id": 1930,
																		"name": "tokenDecimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1900,
																		"src": "14567:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "14563:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14583:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"id": 1933,
																		"name": "priceFeedDecimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1913,
																		"src": "14587:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "14583:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14563:41:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1936,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14562:43:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14498:107:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1878,
												"id": 1938,
												"nodeType": "Return",
												"src": "14491:114:12"
											}
										]
									},
									"documentation": {
										"id": 1870,
										"nodeType": "StructuredDocumentation",
										"src": "13618:259:12",
										"text": " @notice Convierte un monto de `token` a USD(18) usando Chainlink.\n @param token Token cuyo valor queremos evaluar (address(0) = ETH).\n @param amount Monto en decimales nativos del token.\n @return USD con 18 decimales."
									},
									"id": 1940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getUSDValue",
									"nameLocation": "13892:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "13913:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "13905:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13905:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13928:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "13920:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13920:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13904:31:12"
									},
									"returnParameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "13958:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13958:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13957:9:12"
									},
									"scope": 2259,
									"src": "13883:730:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1995,
										"nodeType": "Block",
										"src": "14952:380:12",
										"statements": [
											{
												"assignments": [
													1951
												],
												"declarations": [
													{
														"constant": false,
														"id": 1951,
														"mutability": "mutable",
														"name": "tokenDecimals",
														"nameLocation": "14969:13:12",
														"nodeType": "VariableDeclaration",
														"scope": 1995,
														"src": "14963:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1950,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "14963:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1962,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1952,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1943,
															"src": "14985:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1953,
															"name": "NATIVE_ETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "14994:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14985:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 1957,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1943,
																		"src": "15027:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1956,
																	"name": "IERC20Metadata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2266,
																	"src": "15012:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$2266_$",
																		"typeString": "type(contract IERC20Metadata)"
																	}
																},
																"id": 1958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15012:21:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Metadata_$2266",
																	"typeString": "contract IERC20Metadata"
																}
															},
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15034:8:12",
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2265,
															"src": "15012:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 1960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15012:32:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "14985:59:12",
													"trueExpression": {
														"hexValue": "3138",
														"id": 1955,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15007:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14963:81:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1963,
														"name": "tokenDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1951,
														"src": "15069:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1964,
														"name": "USDC_DECIMALS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "15085:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "15069:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1977,
															"name": "tokenDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1951,
															"src": "15190:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1978,
															"name": "USDC_DECIMALS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "15206:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "15190:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1991,
													"nodeType": "IfStatement",
													"src": "15186:115:12",
													"trueBody": {
														"id": 1990,
														"nodeType": "Block",
														"src": "15221:80:12",
														"statements": [
															{
																"expression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1980,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1945,
																		"src": "15243:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1986,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 1981,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15253:2:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							},
																							"id": 1984,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1982,
																								"name": "USDC_DECIMALS",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1223,
																								"src": "15258:13:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 1983,
																								"name": "tokenDecimals",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1951,
																								"src": "15274:13:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"src": "15258:29:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						}
																					],
																					"id": 1985,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "15257:31:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "15253:35:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1987,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "15252:37:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15243:46:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1949,
																"id": 1989,
																"nodeType": "Return",
																"src": "15236:53:12"
															}
														]
													}
												},
												"id": 1992,
												"nodeType": "IfStatement",
												"src": "15065:236:12",
												"trueBody": {
													"id": 1976,
													"nodeType": "Block",
													"src": "15100:80:12",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1966,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1945,
																	"src": "15122:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1967,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "15132:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						},
																						"id": 1970,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1968,
																							"name": "tokenDecimals",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1951,
																							"src": "15137:13:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 1969,
																							"name": "USDC_DECIMALS",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1223,
																							"src": "15153:13:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "15137:29:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					}
																				],
																				"id": 1971,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "15136:31:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "15132:35:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1973,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "15131:37:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15122:46:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1949,
															"id": 1975,
															"nodeType": "Return",
															"src": "15115:53:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1993,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1945,
													"src": "15318:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1949,
												"id": 1994,
												"nodeType": "Return",
												"src": "15311:13:12"
											}
										]
									},
									"documentation": {
										"id": 1941,
										"nodeType": "StructuredDocumentation",
										"src": "14621:237:12",
										"text": " @notice Normaliza montos del token a 6 decimales (USDC-like) para contabilidad.\n @param token Token.\n @param amount Monto en decimales nativos del token.\n @return Monto normalizado a 6 decimales."
									},
									"id": 1996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_normalizeToUSDC",
									"nameLocation": "14873:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "14898:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "14890:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14890:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14913:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "14905:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14905:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14889:31:12"
									},
									"returnParameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "14943:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14943:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14942:9:12"
									},
									"scope": 2259,
									"src": "14864:468:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2052,
										"nodeType": "Block",
										"src": "15500:632:12",
										"statements": [
											{
												"assignments": [
													2003
												],
												"declarations": [
													{
														"constant": false,
														"id": 2003,
														"mutability": "mutable",
														"name": "totalUSD",
														"nameLocation": "15519:8:12",
														"nodeType": "VariableDeclaration",
														"scope": 2052,
														"src": "15511:16:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2002,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15511:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2005,
												"initialValue": {
													"hexValue": "30",
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15530:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15511:20:12"
											},
											{
												"body": {
													"id": 2048,
													"nodeType": "Block",
													"src": "15607:482:12",
													"statements": [
														{
															"assignments": [
																2018
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2018,
																	"mutability": "mutable",
																	"name": "token",
																	"nameLocation": "15630:5:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2048,
																	"src": "15622:13:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2017,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15622:7:12",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2022,
															"initialValue": {
																"baseExpression": {
																	"id": 2019,
																	"name": "s_supportedTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1256,
																	"src": "15638:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 2021,
																"indexExpression": {
																	"id": 2020,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2007,
																	"src": "15656:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15638:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15622:36:12"
														},
														{
															"assignments": [
																2024
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2024,
																	"mutability": "mutable",
																	"name": "normalizedAmount",
																	"nameLocation": "15681:16:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2048,
																	"src": "15673:24:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2023,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "15673:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2028,
															"initialValue": {
																"baseExpression": {
																	"id": 2025,
																	"name": "s_totalDeposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "15700:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2027,
																"indexExpression": {
																	"id": 2026,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2018,
																	"src": "15716:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15700:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15673:49:12"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2029,
																	"name": "normalizedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2024,
																	"src": "15766:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15785:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "15766:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2047,
															"nodeType": "IfStatement",
															"src": "15762:316:12",
															"trueBody": {
																"id": 2046,
																"nodeType": "Block",
																"src": "15788:290:12",
																"statements": [
																	{
																		"assignments": [
																			2033
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2033,
																				"mutability": "mutable",
																				"name": "nativeAmount",
																				"nameLocation": "15882:12:12",
																				"nodeType": "VariableDeclaration",
																				"scope": 2046,
																				"src": "15874:20:12",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2032,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "15874:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2038,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 2035,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2018,
																					"src": "15918:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2036,
																					"name": "normalizedAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2024,
																					"src": "15925:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2034,
																				"name": "_denormalizeFromUSDC",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2109,
																				"src": "15897:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 2037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15897:45:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "15874:68:12"
																	},
																	{
																		"expression": {
																			"id": 2044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2039,
																				"name": "totalUSD",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2003,
																				"src": "16017:8:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 2041,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2018,
																						"src": "16042:5:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 2042,
																						"name": "nativeAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2033,
																						"src": "16049:12:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2040,
																					"name": "_getUSDValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1940,
																					"src": "16029:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (address,uint256) view returns (uint256)"
																					}
																				},
																				"id": 2043,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "16029:33:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "16017:45:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2045,
																		"nodeType": "ExpressionStatement",
																		"src": "16017:45:12"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2010,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2007,
														"src": "15572:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2011,
															"name": "s_supportedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "15576:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15594:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15576:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15572:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2049,
												"initializationExpression": {
													"assignments": [
														2007
													],
													"declarations": [
														{
															"constant": false,
															"id": 2007,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "15565:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 2049,
															"src": "15557:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2006,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15557:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2009,
													"initialValue": {
														"hexValue": "30",
														"id": 2008,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15569:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "15557:13:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "15602:3:12",
														"subExpression": {
															"id": 2014,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2007,
															"src": "15602:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2016,
													"nodeType": "ExpressionStatement",
													"src": "15602:3:12"
												},
												"nodeType": "ForStatement",
												"src": "15552:537:12"
											},
											{
												"expression": {
													"id": 2050,
													"name": "totalUSD",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2003,
													"src": "16116:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2001,
												"id": 2051,
												"nodeType": "Return",
												"src": "16109:15:12"
											}
										]
									},
									"documentation": {
										"id": 1997,
										"nodeType": "StructuredDocumentation",
										"src": "15340:91:12",
										"text": " @notice Suma el total global en USD(18) recorriendo tokens soportados."
									},
									"id": 2053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTotalDepositsUSD",
									"nameLocation": "15446:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15466:2:12"
									},
									"returnParameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "15491:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15491:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15490:9:12"
									},
									"scope": 2259,
									"src": "15437:695:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2108,
										"nodeType": "Block",
										"src": "16519:410:12",
										"statements": [
											{
												"assignments": [
													2064
												],
												"declarations": [
													{
														"constant": false,
														"id": 2064,
														"mutability": "mutable",
														"name": "tokenDecimals",
														"nameLocation": "16536:13:12",
														"nodeType": "VariableDeclaration",
														"scope": 2108,
														"src": "16530:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 2063,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "16530:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2075,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2065,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2056,
															"src": "16552:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2066,
															"name": "NATIVE_ETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "16561:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "16552:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 2070,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "16594:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2069,
																	"name": "IERC20Metadata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2266,
																	"src": "16579:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$2266_$",
																		"typeString": "type(contract IERC20Metadata)"
																	}
																},
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16579:21:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Metadata_$2266",
																	"typeString": "contract IERC20Metadata"
																}
															},
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16601:8:12",
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2265,
															"src": "16579:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 2073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16579:32:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "16552:59:12",
													"trueExpression": {
														"hexValue": "3138",
														"id": 2068,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16574:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16530:81:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2076,
														"name": "tokenDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2064,
														"src": "16636:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2077,
														"name": "USDC_DECIMALS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "16652:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "16636:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2090,
															"name": "tokenDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2064,
															"src": "16767:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2091,
															"name": "USDC_DECIMALS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "16783:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "16767:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2104,
													"nodeType": "IfStatement",
													"src": "16763:125:12",
													"trueBody": {
														"id": 2103,
														"nodeType": "Block",
														"src": "16798:90:12",
														"statements": [
															{
																"expression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2093,
																		"name": "normalizedAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2058,
																		"src": "16820:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2099,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 2094,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "16840:2:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							},
																							"id": 2097,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2095,
																								"name": "USDC_DECIMALS",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1223,
																								"src": "16845:13:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 2096,
																								"name": "tokenDecimals",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2064,
																								"src": "16861:13:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"src": "16845:29:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						}
																					],
																					"id": 2098,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "16844:31:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "16840:35:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2100,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "16839:37:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16820:56:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 2062,
																"id": 2102,
																"nodeType": "Return",
																"src": "16813:63:12"
															}
														]
													}
												},
												"id": 2105,
												"nodeType": "IfStatement",
												"src": "16632:256:12",
												"trueBody": {
													"id": 2089,
													"nodeType": "Block",
													"src": "16667:90:12",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2079,
																	"name": "normalizedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "16689:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2085,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2080,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16709:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						},
																						"id": 2083,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2081,
																							"name": "tokenDecimals",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2064,
																							"src": "16714:13:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 2082,
																							"name": "USDC_DECIMALS",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1223,
																							"src": "16730:13:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "16714:29:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					}
																				],
																				"id": 2084,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "16713:31:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "16709:35:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2086,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "16708:37:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16689:56:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2062,
															"id": 2088,
															"nodeType": "Return",
															"src": "16682:63:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2106,
													"name": "normalizedAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2058,
													"src": "16905:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2062,
												"id": 2107,
												"nodeType": "Return",
												"src": "16898:23:12"
											}
										]
									},
									"documentation": {
										"id": 2054,
										"nodeType": "StructuredDocumentation",
										"src": "16140:235:12",
										"text": " @notice Convierte desde 6 decimales (USDC-like) a decimales nativos del token.\n @param token Token.\n @param normalizedAmount Monto en 6 decimales.\n @return Monto en decimales nativos del token."
									},
									"id": 2109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_denormalizeFromUSDC",
									"nameLocation": "16390:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16419:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "16411:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16411:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "normalizedAmount",
												"nameLocation": "16434:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "16426:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16426:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16410:41:12"
									},
									"returnParameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "16504:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16504:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16503:9:12"
									},
									"scope": 2259,
									"src": "16381:548:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2132,
										"nodeType": "Block",
										"src": "17393:172:12",
										"statements": [
											{
												"assignments": [
													2120
												],
												"declarations": [
													{
														"constant": false,
														"id": 2120,
														"mutability": "mutable",
														"name": "normalizedBalance",
														"nameLocation": "17412:17:12",
														"nodeType": "VariableDeclaration",
														"scope": 2132,
														"src": "17404:25:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2119,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17404:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2126,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2121,
															"name": "s_deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "17432:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 2123,
														"indexExpression": {
															"id": 2122,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2112,
															"src": "17443:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17432:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2125,
													"indexExpression": {
														"id": 2124,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2114,
														"src": "17449:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17432:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17404:51:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2128,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2114,
															"src": "17514:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2129,
															"name": "normalizedBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2120,
															"src": "17521:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2127,
														"name": "_denormalizeFromUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2109,
														"src": "17493:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 2130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17493:46:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2118,
												"id": 2131,
												"nodeType": "Return",
												"src": "17486:53:12"
											}
										]
									},
									"documentation": {
										"id": 2110,
										"nodeType": "StructuredDocumentation",
										"src": "17125:181:12",
										"text": " @notice Devuelve el saldo del usuario en decimales nativos del token.\n @param user Dirección del usuario.\n @param token Token (address(0) = ETH)."
									},
									"functionSelector": "d4fac45d",
									"id": 2133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "17321:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "17340:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "17332:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17332:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "17354:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "17346:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17346:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17331:29:12"
									},
									"returnParameters": {
										"id": 2118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "17384:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17384:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17383:9:12"
									},
									"scope": 2259,
									"src": "17312:253:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2163,
										"nodeType": "Block",
										"src": "17824:221:12",
										"statements": [
											{
												"assignments": [
													2144
												],
												"declarations": [
													{
														"constant": false,
														"id": 2144,
														"mutability": "mutable",
														"name": "normalizedBalance",
														"nameLocation": "17843:17:12",
														"nodeType": "VariableDeclaration",
														"scope": 2163,
														"src": "17835:25:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2143,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17835:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2150,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2145,
															"name": "s_deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "17863:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 2147,
														"indexExpression": {
															"id": 2146,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "17874:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17863:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2149,
													"indexExpression": {
														"id": 2148,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2138,
														"src": "17880:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17863:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17835:51:12"
											},
											{
												"assignments": [
													2152
												],
												"declarations": [
													{
														"constant": false,
														"id": 2152,
														"mutability": "mutable",
														"name": "nativeAmount",
														"nameLocation": "17925:12:12",
														"nodeType": "VariableDeclaration",
														"scope": 2163,
														"src": "17917:20:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2151,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17917:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2157,
												"initialValue": {
													"arguments": [
														{
															"id": 2154,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2138,
															"src": "17961:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2155,
															"name": "normalizedBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2144,
															"src": "17968:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2153,
														"name": "_denormalizeFromUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2109,
														"src": "17940:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 2156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17940:46:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17917:69:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2159,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2138,
															"src": "18017:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2160,
															"name": "nativeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2152,
															"src": "18024:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2158,
														"name": "_getUSDValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1940,
														"src": "18004:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 2161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18004:33:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2142,
												"id": 2162,
												"nodeType": "Return",
												"src": "17997:40:12"
											}
										]
									},
									"documentation": {
										"id": 2134,
										"nodeType": "StructuredDocumentation",
										"src": "17573:161:12",
										"text": " @notice Devuelve el saldo del usuario en USD(18).\n @param user Dirección del usuario.\n @param token Token (address(0) = ETH)."
									},
									"functionSelector": "e62615c6",
									"id": 2164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalanceUSD",
									"nameLocation": "17749:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "17771:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "17763:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17763:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "17785:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "17777:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17777:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17762:29:12"
									},
									"returnParameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "17815:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17815:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17814:9:12"
									},
									"scope": 2259,
									"src": "17740:305:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2179,
										"nodeType": "Block",
										"src": "18255:77:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2173,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "18294:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 2174,
																"name": "s_totalDeposits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1246,
																"src": "18301:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2176,
															"indexExpression": {
																"id": 2175,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "18317:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18301:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2172,
														"name": "_denormalizeFromUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2109,
														"src": "18273:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 2177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18273:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2171,
												"id": 2178,
												"nodeType": "Return",
												"src": "18266:58:12"
											}
										]
									},
									"documentation": {
										"id": 2165,
										"nodeType": "StructuredDocumentation",
										"src": "18053:123:12",
										"text": " @notice Devuelve el total depositado para un token (en decimales nativos).\n @param token Token."
									},
									"functionSelector": "0251cfa1",
									"id": 2180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalDeposits",
									"nameLocation": "18191:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18216:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "18208:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18208:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18207:15:12"
									},
									"returnParameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "18246:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18246:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18245:9:12"
									},
									"scope": 2259,
									"src": "18182:150:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2189,
										"nodeType": "Block",
										"src": "18513:48:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2186,
														"name": "_getTotalDepositsUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2053,
														"src": "18531:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18531:22:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2185,
												"id": 2188,
												"nodeType": "Return",
												"src": "18524:29:12"
											}
										]
									},
									"documentation": {
										"id": 2181,
										"nodeType": "StructuredDocumentation",
										"src": "18340:104:12",
										"text": " @notice Devuelve el total global de depósitos en USD(18) sumando todos los tokens."
									},
									"functionSelector": "83e397b8",
									"id": 2190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalDepositsUSD",
									"nameLocation": "18459:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18478:2:12"
									},
									"returnParameters": {
										"id": 2185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "18504:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18504:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18503:9:12"
									},
									"scope": 2259,
									"src": "18450:111:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2210,
										"nodeType": "Block",
										"src": "18745:144:12",
										"statements": [
											{
												"assignments": [
													2197
												],
												"declarations": [
													{
														"constant": false,
														"id": 2197,
														"mutability": "mutable",
														"name": "currentTotal",
														"nameLocation": "18764:12:12",
														"nodeType": "VariableDeclaration",
														"scope": 2210,
														"src": "18756:20:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2196,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18756:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2200,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2198,
														"name": "_getTotalDepositsUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2053,
														"src": "18779:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18779:22:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18756:45:12"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2201,
															"name": "currentTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2197,
															"src": "18819:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 2202,
															"name": "i_bankCapUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "18835:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "18819:28:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2205,
															"name": "i_bankCapUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "18854:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 2206,
															"name": "currentTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2197,
															"src": "18869:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "18854:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "18819:62:12",
													"trueExpression": {
														"hexValue": "30",
														"id": 2204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18850:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2195,
												"id": 2209,
												"nodeType": "Return",
												"src": "18812:69:12"
											}
										]
									},
									"documentation": {
										"id": 2191,
										"nodeType": "StructuredDocumentation",
										"src": "18569:104:12",
										"text": " @notice Devuelve la capacidad disponible del banco en USD(18) (cap - total actual)."
									},
									"functionSelector": "08133237",
									"id": 2211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAvailableBankCapUSD",
									"nameLocation": "18688:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18710:2:12"
									},
									"returnParameters": {
										"id": 2195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "18736:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18736:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18735:9:12"
									},
									"scope": 2259,
									"src": "18679:210:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2220,
										"nodeType": "Block",
										"src": "19056:43:12",
										"statements": [
											{
												"expression": {
													"id": 2218,
													"name": "s_supportedTokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1256,
													"src": "19074:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 2217,
												"id": 2219,
												"nodeType": "Return",
												"src": "19067:24:12"
											}
										]
									},
									"documentation": {
										"id": 2212,
										"nodeType": "StructuredDocumentation",
										"src": "18897:82:12",
										"text": " @notice Lista de tokens soportados actualmente (incluye ETH)."
									},
									"functionSelector": "d3c7c2c7",
									"id": 2221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSupportedTokens",
									"nameLocation": "18994:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19012:2:12"
									},
									"returnParameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "19038:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2214,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "19038:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2215,
													"nodeType": "ArrayTypeName",
													"src": "19038:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19037:18:12"
									},
									"scope": 2259,
									"src": "18985:114:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2241,
										"nodeType": "Block",
										"src": "19276:68:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 2231,
																	"name": "s_priceFeeds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "19302:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
																		"typeString": "mapping(address => contract AggregatorV3Interface)"
																	}
																},
																"id": 2233,
																"indexExpression": {
																	"id": 2232,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2224,
																	"src": "19315:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19302:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																	"typeString": "contract AggregatorV3Interface"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																	"typeString": "contract AggregatorV3Interface"
																}
															],
															"id": 2230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19294:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2229,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19294:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 2234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19294:28:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19334:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19326:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2235,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19326:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 2238,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19326:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19294:42:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2228,
												"id": 2240,
												"nodeType": "Return",
												"src": "19287:49:12"
											}
										]
									},
									"documentation": {
										"id": 2222,
										"nodeType": "StructuredDocumentation",
										"src": "19107:93:12",
										"text": " @notice Indica si un token está soportado (tiene oráculo configurado)."
									},
									"functionSelector": "75151b63",
									"id": 2242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isTokenSupported",
									"nameLocation": "19215:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "19240:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "19232:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19232:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19231:15:12"
									},
									"returnParameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "19270:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19270:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19269:6:12"
									},
									"scope": 2259,
									"src": "19206:138:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2257,
										"nodeType": "Block",
										"src": "19516:54:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 2252,
																"name": "s_priceFeeds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "19542:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
																	"typeString": "mapping(address => contract AggregatorV3Interface)"
																}
															},
															"id": 2254,
															"indexExpression": {
																"id": 2253,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2245,
																"src": "19555:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19542:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														],
														"id": 2251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "19534:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2250,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "19534:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 2255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19534:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2249,
												"id": 2256,
												"nodeType": "Return",
												"src": "19527:35:12"
											}
										]
									},
									"documentation": {
										"id": 2243,
										"nodeType": "StructuredDocumentation",
										"src": "19352:89:12",
										"text": " @notice Devuelve la dirección del oráculo TOKEN/USD para un token."
									},
									"functionSelector": "5b6cca80",
									"id": 2258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceFeed",
									"nameLocation": "19456:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "19477:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "19469:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19469:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19468:15:12"
									},
									"returnParameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "19507:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19507:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19506:9:12"
									},
									"scope": 2259,
									"src": "19447:123:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2267,
							"src": "513:19062:12",
							"usedErrors": [
								352,
								355,
								605,
								1101,
								1299,
								1306,
								1313,
								1320,
								1323,
								1328,
								1333,
								1336,
								1339
							],
							"usedEvents": [
								364,
								373,
								382,
								1273,
								1284,
								1291,
								1296
							]
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2260,
								"nodeType": "StructuredDocumentation",
								"src": "19579:190:12",
								"text": " @notice Interfaz mínima para consultar `decimals()` cuando el token lo expone.\n @dev No forma parte del estándar ERC-20 base; es una extensión muy común (ERC20 Metadata)."
							},
							"fullyImplemented": false,
							"id": 2266,
							"linearizedBaseContracts": [
								2266
							],
							"name": "IERC20Metadata",
							"nameLocation": "19781:14:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 2265,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "19812:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19820:2:12"
									},
									"returnParameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "19846:5:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2262,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "19846:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19845:7:12"
									},
									"scope": 2266,
									"src": "19803:50:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2267,
							"src": "19771:85:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:19825:12"
				},
				"id": 12
			}
		}
	}
}